{"version":3,"sources":["webpack:///src/app/main/apps/chat/sidenavs/left/left.component.ts","webpack:///src/app/main/apps/chat/sidenavs/left/left.component.html","webpack:///src/app/main/apps/chat/chat.service.ts","webpack:///src/app/main/apps/chat/chat.component.ts","webpack:///src/app/main/apps/chat/chat.component.html","webpack:///src/app/main/apps/chat/chat-view/chat-view.component.ts","webpack:///src/app/main/apps/chat/chat-view/chat-view.component.html","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///src/app/main/apps/chat/sidenavs/left/chats/chats.component.ts","webpack:///src/app/main/apps/chat/sidenavs/left/chats/chats.component.html","webpack:///src/app/main/apps/chat/sidenavs/left/user/user.component.ts","webpack:///src/app/main/apps/chat/sidenavs/left/user/user.component.html","webpack:///src/app/main/apps/chat/sidenavs/right/right.component.ts","webpack:///src/app/main/apps/chat/sidenavs/right/right.component.html","webpack:///src/app/main/apps/chat/sidenavs/right/contact/contact.component.ts","webpack:///src/app/main/apps/chat/sidenavs/right/contact/contact.component.html","webpack:///src/app/main/apps/chat/chat.module.ts","webpack:///src/app/main/apps/chat/chat-start/chat-start.component.ts","webpack:///src/app/main/apps/chat/chat-start/chat-start.component.html"],"names":["ChatLeftSidenavComponent","_chatService","view","_unsubscribeAll","onLeftSidenavViewChanged","pipe","subscribe","next","complete","ChatService","_httpClient","onChatSelected","onContactSelected","onChatsUpdated","onUserUpdated","onRightSidenavViewChanged","route","state","Promise","resolve","reject","all","getContacts","getChats","getUser","then","contacts","chats","user","contactId","chatItem","chatList","find","item","createNewChat","newChats","getChat","get","id","response","chat","chatContact","contact","chatData","chatId","dialog","generateGUID","chatListItem","lastMessageTime","name","unread","push","post","newUserData","updatedUser","status","userData","newData","updatedChat","ChatComponent","selectedChat","ChatViewComponent","readyToReply","replyInput","replyInputField","first","nativeElement","message","i","who","length","selectContact","setTimeout","focusReplyInput","scrollToBottom","focus","speed","directiveScroll","update","event","preventDefault","replyForm","form","value","time","Date","toISOString","reset","updateDialog","reply","_c0","_c1","_c2","_c3","_c4","_c5","MatCardContent","ɵfac","MatCardContent_Factory","t","ɵdir","type","selectors","hostAttrs","ngDevMode","args","selector","host","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","hostVars","hostBindings","MatCardActions_HostBindings","rf","ctx","inputs","exportAs","propDecorators","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","_animationMode","MatCard_Factory","ɵcmp","MatCard_HostBindings","ngContentSelectors","decls","vars","template","MatCard_Template","styles","encapsulation","changeDetection","ctorParameters","String","decorators","None","OnPush","MatCardHeader","MatCardHeader_Factory","consts","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","ɵmod","ɵinj","factory","MatCardModule_Factory","imports","ngJitMode","declarations","exports","ChatChatsSidenavComponent","_fuseMatSidenavHelperService","_mediaObserver","chatSearch","searchText","updatedChats","isActive","getSidenav","toggle","setUserStatus","console","log","changeLeftSidenavView","logout","ChatUserSidenavComponent","userForm","mood","valueChanges","data","updateUserData","ChatRightSidenavComponent","ChatContactSidenavComponent","routes","path","component","children","ChatModule","forChild","ChatStartComponent"],"mappings":"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","file":"chat-chat-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-left-sidenav',\n    templateUrl  : './left.component.html',\n    styleUrls    : ['./left.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatLeftSidenavComponent implements OnInit, OnDestroy\n{\n    view: string;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the defaults\n        this.view = 'chats';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._chatService.onLeftSidenavViewChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(view => {\n                this.view = view;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n}\n","<div [ngSwitch]=\"view\" class=\"views\">\n    <chat-chats-sidenav class=\"view\"\n                        *ngSwitchCase=\"'chats'\"\n                        [@slideInRight]>\n    </chat-chats-sidenav>\n\n    <chat-user-sidenav class=\"view\"\n                       *ngSwitchCase=\"'user'\"\n                       [@slideInLeft]\n                       fusePerfectScrollbar>\n    </chat-user-sidenav>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { FuseUtils } from '@fuse/utils';\n\n@Injectable()\nexport class ChatService implements Resolve<any>\n{\n    contacts: any[];\n    chats: any[];\n    user: any;\n    onChatSelected: BehaviorSubject<any>;\n    onContactSelected: BehaviorSubject<any>;\n    onChatsUpdated: Subject<any>;\n    onUserUpdated: Subject<any>;\n    onLeftSidenavViewChanged: Subject<any>;\n    onRightSidenavViewChanged: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpClient\n    )\n    {\n        // Set the defaults\n        this.onChatSelected = new BehaviorSubject(null);\n        this.onContactSelected = new BehaviorSubject(null);\n        this.onChatsUpdated = new Subject();\n        this.onUserUpdated = new Subject();\n        this.onLeftSidenavViewChanged = new Subject();\n        this.onRightSidenavViewChanged = new Subject();\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                this.getContacts(),\n                this.getChats(),\n                this.getUser()\n            ]).then(\n                ([contacts, chats, user]) => {\n                    this.contacts = contacts;\n                    this.chats = chats;\n                    this.user = user;\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get chat\n     *\n     * @param contactId\n     * @returns {Promise<any>}\n     */\n    getChat(contactId): Promise<any>\n    {\n        const chatItem = this.user.chatList.find((item) => {\n            return item.contactId === contactId;\n        });\n\n        // Create new chat, if it's not created yet.\n        if ( !chatItem )\n        {\n            this.createNewChat(contactId).then((newChats) => {\n                this.getChat(contactId);\n            });\n            return;\n        }\n\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/chat-chats/' + chatItem.id)\n                .subscribe((response: any) => {\n                    const chat = response;\n\n                    const chatContact = this.contacts.find((contact) => {\n                        return contact.id === contactId;\n                    });\n\n                    const chatData = {\n                        chatId : chat.id,\n                        dialog : chat.dialog,\n                        contact: chatContact\n                    };\n\n                    this.onChatSelected.next({...chatData});\n\n                }, reject);\n\n        });\n\n    }\n\n    /**\n     * Create new chat\n     *\n     * @param contactId\n     * @returns {Promise<any>}\n     */\n    createNewChat(contactId): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n\n            const contact = this.contacts.find((item) => {\n                return item.id === contactId;\n            });\n\n            const chatId = FuseUtils.generateGUID();\n\n            const chat = {\n                id    : chatId,\n                dialog: []\n            };\n\n            const chatListItem = {\n                contactId      : contactId,\n                id             : chatId,\n                lastMessageTime: '2017-02-18T10:30:18.931Z',\n                name           : contact.name,\n                unread         : null\n            };\n\n            // Add new chat list item to the user's chat list\n            this.user.chatList.push(chatListItem);\n\n            // Post the created chat\n            this._httpClient.post('api/chat-chats', {...chat})\n                .subscribe((response: any) => {\n\n                    // Post the new the user data\n                    this._httpClient.post('api/chat-user/' + this.user.id, this.user)\n                        .subscribe(newUserData => {\n\n                            // Update the user data from server\n                            this.getUser().then(updatedUser => {\n                                this.onUserUpdated.next(updatedUser);\n                                resolve(updatedUser);\n                            });\n                        });\n                }, reject);\n        });\n    }\n\n    /**\n     * Select contact\n     *\n     * @param contact\n     */\n    selectContact(contact): void\n    {\n        this.onContactSelected.next(contact);\n    }\n\n    /**\n     * Set user status\n     *\n     * @param status\n     */\n    setUserStatus(status): void\n    {\n        this.user.status = status;\n    }\n\n    /**\n     * Update user data\n     *\n     * @param userData\n     */\n    updateUserData(userData): void\n    {\n        this._httpClient.post('api/chat-user/' + this.user.id, userData)\n            .subscribe((response: any) => {\n                    this.user = userData;\n                }\n            );\n    }\n\n    /**\n     * Update the chat dialog\n     *\n     * @param chatId\n     * @param dialog\n     * @returns {Promise<any>}\n     */\n    updateDialog(chatId, dialog): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n\n            const newData = {\n                id    : chatId,\n                dialog: dialog\n            };\n\n            this._httpClient.post('api/chat-chats/' + chatId, newData)\n                .subscribe(updatedChat => {\n                    resolve(updatedChat);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get contacts\n     *\n     * @returns {Promise<any>}\n     */\n    getContacts(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/chat-contacts')\n                .subscribe((response: any) => {\n                    resolve(response);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get chats\n     *\n     * @returns {Promise<any>}\n     */\n    getChats(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/chat-chats')\n                .subscribe((response: any) => {\n                    resolve(response);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get user\n     *\n     * @returns {Promise<any>}\n     */\n    getUser(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/chat-user')\n                .subscribe((response: any) => {\n                    resolve(response[0]);\n                }, reject);\n        });\n    }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat',\n    templateUrl  : './chat.component.html',\n    styleUrls    : ['./chat.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatComponent implements OnInit, OnDestroy\n{\n    selectedChat: any;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._chatService.onChatSelected\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(chatData => {\n                this.selectedChat = chatData;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n}\n","<div id=\"chat\" class=\"page-layout carded fullwidth inner-scroll\">\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card\">\n\n            <mat-sidenav-container>\n\n                <!-- LEFT SIDENAV -->\n                <mat-sidenav class=\"sidenav\" position=\"start\" opened=\"true\" mode=\"side\"\n                             fuseMatSidenavHelper=\"chat-left-sidenav\" matIsLockedOpen=\"gt-md\">\n                    <chat-left-sidenav></chat-left-sidenav>\n                </mat-sidenav>\n                <!-- / LEFT SIDENAV -->\n\n                <!-- CONTENT -->\n                <chat-start *ngIf=\"!selectedChat\"></chat-start>\n\n                <chat-view *ngIf=\"selectedChat\"></chat-view>\n                <!-- / CONTENT -->\n\n                <!-- RIGHT SIDENAV -->\n                <mat-sidenav class=\"sidenav\" position=\"end\" opened=\"false\" mode=\"over\"\n                             fuseMatSidenavHelper=\"chat-right-sidenav\">\n                    <chat-right-sidenav></chat-right-sidenav>\n                </mat-sidenav>\n                <!-- / RIGHT SIDENAV -->\n\n            </mat-sidenav-container>\n\n        </div>\n        <!-- / CONTENT CARD -->\n\n    </div>\n    <!-- / CENTER -->\n\n</div>\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild, ViewChildren, ViewEncapsulation } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { FusePerfectScrollbarDirective } from '@fuse/directives/fuse-perfect-scrollbar/fuse-perfect-scrollbar.directive';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-view',\n    templateUrl  : './chat-view.component.html',\n    styleUrls    : ['./chat-view.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ChatViewComponent implements OnInit, OnDestroy, AfterViewInit\n{\n    user: any;\n    chat: any;\n    dialog: any;\n    contact: any;\n    replyInput: any;\n    selectedChat: any;\n\n    @ViewChild(FusePerfectScrollbarDirective)\n    directiveScroll: FusePerfectScrollbarDirective;\n\n    @ViewChildren('replyInput')\n    replyInputField;\n\n    @ViewChild('replyForm')\n    replyForm: NgForm;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this.user = this._chatService.user;\n        this._chatService.onChatSelected\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(chatData => {\n                if ( chatData )\n                {\n                    this.selectedChat = chatData;\n                    this.contact = chatData.contact;\n                    this.dialog = chatData.dialog;\n                    this.readyToReply();\n                }\n            });\n    }\n\n    /**\n     * After view init\n     */\n    ngAfterViewInit(): void\n    {\n        this.replyInput = this.replyInputField.first.nativeElement;\n        this.readyToReply();\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Decide whether to show or not the contact's avatar in the message row\n     *\n     * @param message\n     * @param i\n     * @returns {boolean}\n     */\n    shouldShowContactAvatar(message, i): boolean\n    {\n        return (\n            message.who === this.contact.id &&\n            ((this.dialog[i + 1] && this.dialog[i + 1].who !== this.contact.id) || !this.dialog[i + 1])\n        );\n    }\n\n    /**\n     * Check if the given message is the first message of a group\n     *\n     * @param message\n     * @param i\n     * @returns {boolean}\n     */\n    isFirstMessageOfGroup(message, i): boolean\n    {\n        return (i === 0 || this.dialog[i - 1] && this.dialog[i - 1].who !== message.who);\n    }\n\n    /**\n     * Check if the given message is the last message of a group\n     *\n     * @param message\n     * @param i\n     * @returns {boolean}\n     */\n    isLastMessageOfGroup(message, i): boolean\n    {\n        return (i === this.dialog.length - 1 || this.dialog[i + 1] && this.dialog[i + 1].who !== message.who);\n    }\n\n    /**\n     * Select contact\n     */\n    selectContact(): void\n    {\n        this._chatService.selectContact(this.contact);\n    }\n\n    /**\n     * Ready to reply\n     */\n    readyToReply(): void\n    {\n        setTimeout(() => {\n            this.focusReplyInput();\n            this.scrollToBottom();\n        });\n    }\n\n    /**\n     * Focus to the reply input\n     */\n    focusReplyInput(): void\n    {\n        setTimeout(() => {\n            this.replyInput.focus();\n        });\n    }\n\n    /**\n     * Scroll to the bottom\n     *\n     * @param {number} speed\n     */\n    scrollToBottom(speed?: number): void\n    {\n        speed = speed || 400;\n        if ( this.directiveScroll )\n        {\n            this.directiveScroll.update();\n\n            setTimeout(() => {\n                this.directiveScroll.scrollToBottom(0, speed);\n            });\n        }\n    }\n\n    /**\n     * Reply\n     */\n    reply(event): void\n    {\n        event.preventDefault();\n\n        if ( !this.replyForm.form.value.message )\n        {\n            return;\n        }\n\n        // Message\n        const message = {\n            who    : this.user.id,\n            message: this.replyForm.form.value.message,\n            time   : new Date().toISOString()\n        };\n\n        // Add the message to the chat\n        this.dialog.push(message);\n\n        // Reset the reply form\n        this.replyForm.reset();\n\n        // Update the server\n        this._chatService.updateDialog(this.selectedChat.chatId, this.dialog).then(response => {\n            this.readyToReply();\n        });\n    }\n}\n","<!-- CHAT -->\n<div class=\"chat\" fxFlex fxLayout=\"column\">\n\n    <!-- CHAT TOOLBAR -->\n    <mat-toolbar class=\"chat-toolbar\">\n\n        <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <!-- RESPONSIVE CHATS BUTTON-->\n                <button mat-icon-button fxHide.gt-md class=\"responsive-chats-button mr-16\"\n                        fuseMatSidenavToggler=\"chat-left-sidenav\"\n                        aria-label=\"chats button\">\n                    <mat-icon>chat</mat-icon>\n                </button>\n                <!-- / RESPONSIVE CHATS BUTTON-->\n\n                <!-- CHAT CONTACT-->\n                <div class=\"chat-contact\" fxLayout=\"row\" fxLayoutAlign=\"start center\"\n                     fuseMatSidenavToggler=\"chat-right-sidenav\" (click)=\"selectContact()\">\n\n                    <div class=\"avatar-wrapper\">\n\n                        <img [src]=\"contact.avatar\"\n                             class=\"avatar\"\n                             alt=\"{{contact.name}}\"/>\n\n                        <mat-icon class=\"s-16 status\"\n                                  [ngClass]=\"contact.status\">\n                        </mat-icon>\n                    </div>\n\n                    <div class=\"chat-contact-name\">\n                        {{contact.name}}\n                    </div>\n\n                </div>\n                <!-- / CHAT CONTACT-->\n            </div>\n\n            <div>\n                <button mat-icon-button [matMenuTriggerFor]=\"contactMenu\" aria-label=\"more\">\n                    <mat-icon>more_vert</mat-icon>\n                </button>\n\n                <mat-menu #contactMenu=\"matMenu\">\n                    <button mat-menu-item fuseMatSidenavToggler=\"chat-right-sidenav\" (click)=\"selectContact()\">\n                        Contact Info\n                    </button>\n                </mat-menu>\n            </div>\n\n        </div>\n    </mat-toolbar>\n    <!-- / CHAT TOOLBAR -->\n\n    <!-- CHAT CONTENT -->\n    <div id=\"chat-content\" fxFlex=\"1 1 auto\"  fusePerfectScrollbar>\n\n        <!-- CHAT MESSAGES -->\n        <div class=\"chat-messages\">\n\n            <!-- MESSAGE -->\n            <div *ngFor=\"let message of dialog; let i = index\" class=\"message-row\"\n                 [ngClass]=\"{\n                            'me': message.who === user.id,\n                            'contact': message.who !== user.id,\n                            'first-of-group': isFirstMessageOfGroup(message, i),\n                            'last-of-group': isLastMessageOfGroup(message, i)\n                            }\">\n\n                <img *ngIf=\"shouldShowContactAvatar(message, i)\"\n                     src=\"{{contact.avatar}}\"\n                     class=\"avatar\">\n\n                <div class=\"bubble\">\n                    <div class=\"message\">{{message.message}}</div>\n                    <div class=\"time secondary-text\">{{message.time | date:'short'}}</div>\n                </div>\n\n            </div>\n            <!-- / MESSAGE -->\n\n        </div>\n        <!-- CHAT MESSAGES -->\n\n    </div>\n    <!-- / CHAT CONTENT -->\n\n    <!-- CHAT FOOTER -->\n    <div class=\"chat-footer\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n\n        <!-- REPLY FORM -->\n        <div class=\"reply-form\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n            <form #replyForm=\"ngForm\"\n                  (ngSubmit)=\"reply($event)\"\n                  (keydown.enter)=\"reply($event)\"\n                  fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <mat-form-field class=\"message-text\" fxFlex floatLabel=\"never\" appearance=\"standard\">\n                    <textarea matInput #replyInput placeholder=\"Type your message\"\n                              ngModel name=\"message\" [rows]=\"1\" [matTextareaAutosize]=\"true\"></textarea>\n                </mat-form-field>\n\n                <button class=\"send-message-button\" mat-icon-button type=\"submit\" aria-label=\"Send message\">\n                    <mat-icon class=\"secondary-text\">send</mat-icon>\n                </button>\n\n            </form>\n\n        </div>\n        <!-- / REPLY FORM -->\n\n    </div>\n    <!-- / CHAT FOOTER-->\n\n</div>\n<!-- / CHAT -->\n","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MediaObserver } from '@angular/flex-layout';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseMatSidenavHelperService } from '@fuse/directives/fuse-mat-sidenav/fuse-mat-sidenav.service';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-chats-sidenav',\n    templateUrl  : './chats.component.html',\n    styleUrls    : ['./chats.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatChatsSidenavComponent implements OnInit, OnDestroy\n{\n    chats: any[];\n    chatSearch: any;\n    contacts: any[];\n    searchText: string;\n    user: any;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     * @param {FuseMatSidenavHelperService} _fuseMatSidenavHelperService\n     * @param {MediaObserver} _mediaObserver\n     */\n    constructor(\n        private _chatService: ChatService,\n        private _fuseMatSidenavHelperService: FuseMatSidenavHelperService,\n        public _mediaObserver: MediaObserver\n    )\n    {\n        // Set the defaults\n        this.chatSearch = {\n            name: ''\n        };\n        this.searchText = '';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this.user = this._chatService.user;\n        this.chats = this._chatService.chats;\n        this.contacts = this._chatService.contacts;\n\n        this._chatService.onChatsUpdated\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(updatedChats => {\n                this.chats = updatedChats;\n            });\n\n        this._chatService.onUserUpdated\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(updatedUser => {\n                this.user = updatedUser;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get chat\n     *\n     * @param contact\n     */\n    getChat(contact): void\n    {\n        this._chatService.getChat(contact);\n\n        if ( !this._mediaObserver.isActive('gt-md') )\n        {\n            this._fuseMatSidenavHelperService.getSidenav('chat-left-sidenav').toggle();\n        }\n    }\n\n    /**\n     * Set user status\n     *\n     * @param status\n     */\n    setUserStatus(status): void\n    {\n        this._chatService.setUserStatus(status);\n    }\n\n    /**\n     * Change left sidenav view\n     *\n     * @param view\n     */\n    changeLeftSidenavView(view): void\n    {\n        this._chatService.onLeftSidenavViewChanged.next(view);\n    }\n\n    /**\n     * Logout\n     */\n    logout(): void\n    {\n        console.log('logout triggered');\n    }\n}\n","<!-- SIDENAV HEADER -->\n<div class=\"sidenav-header\">\n    <!-- CHATS TOOLBAR -->\n    <mat-toolbar>\n\n        <!-- TOOLBAR TOP -->\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n            <!-- USER AVATAR WRAPPER -->\n            <div class=\"avatar-wrapper\">\n\n                <!-- USER AVATAR -->\n                <img (click)=\"changeLeftSidenavView('user')\"\n                     src=\"{{user.avatar}}\"\n                     class=\"mat-avatar avatar\"\n                     alt=\"{{user.name}}\"/>\n                <!-- / USER AVATAR -->\n\n                <mat-icon class=\"s-16 status\" [ngClass]=\"user.status\"\n                          [matMenuTriggerFor]=\"userStatusMenu\"></mat-icon>\n\n                <!-- USER STATUS -->\n                <mat-menu id=\"user-status-menu\" #userStatusMenu=\"matMenu\">\n\n                    <button mat-menu-item (click)=\"setUserStatus('online')\">\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                            <mat-icon class=\"s-16 status online\"></mat-icon>\n                            <span>Online</span>\n                        </div>\n                    </button>\n\n                    <button mat-menu-item (click)=\"setUserStatus('away')\">\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                            <mat-icon class=\"s-16 status away\"></mat-icon>\n                            <span>Away</span>\n                        </div>\n                    </button>\n\n                    <button mat-menu-item (click)=\"setUserStatus('do-not-disturb')\">\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                            <mat-icon class=\"s-16 status do-not-disturb\"></mat-icon>\n                            <span>Do not disturb</span>\n                        </div>\n                    </button>\n\n                    <button mat-menu-item (click)=\"setUserStatus('offline')\">\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                            <mat-icon class=\"s-16 status offline\"></mat-icon>\n                            <span>Offline</span>\n                        </div>\n                    </button>\n                </mat-menu>\n                <!-- / USER STATUS -->\n\n            </div>\n            <!-- / USER AVATAR -->\n\n            <div>\n                <button mat-icon-button\n                        [matMenuTriggerFor]=\"userMenu\"\n                        aria-label=\"more\">\n                    <mat-icon>more_vert</mat-icon>\n                </button>\n                <mat-menu #userMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"changeLeftSidenavView('user')\">\n                        Profile\n                    </button>\n                    <button mat-menu-item (click)=\"logout()\">\n                        Logout\n                    </button>\n                </mat-menu>\n            </div>\n\n        </mat-toolbar-row>\n        <!-- / TOOLBAR TOP -->\n\n        <!-- TOOLBAR BOTTOM -->\n        <mat-toolbar-row>\n\n            <!-- SEARCH -->\n            <div class=\"search-wrapper\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"s-16 secondary-text\">search</mat-icon>\n                    <input [(ngModel)]=\"searchText\" type=\"text\" placeholder=\"Search or start new chat\" fxFlex>\n                </div>\n\n            </div>\n            <!-- / SEARCH -->\n\n        </mat-toolbar-row>\n        <!-- / TOOLBAR BOTTOM -->\n\n    </mat-toolbar>\n    <!-- / CHATS TOOLBAR -->\n\n</div>\n<!-- / SIDENAV HEADER -->\n\n<!-- SIDENAV CONTENT -->\n<div class=\"sidenav-content\" fusePerfectScrollbar fxFlex>\n\n    <!-- CHATS CONTENT -->\n    <div *fuseIfOnDom [@animateStagger]=\"{value:'50'}\">\n\n        <!-- CHATS LIST-->\n        <div class=\"chat-list\" fxLayout=\"column\">\n\n            <div matSubheader *ngIf=\"(user.chatList | filter: searchText).length > 0\">\n                Chats\n            </div>\n\n            <button mat-button class=\"contact\"\n                    *ngFor=\"let chat of user.chatList | filter: searchText\"\n                    (click)=\"getChat(chat.contactId)\" ngClass=\"{'unread':contact.unread}\"\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\n\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                    <div class=\"avatar-wrapper\" fxFlex=\"0 1 auto\" fxLayoutAlign=\"center center\">\n                        <img class=\"avatar\" [src]=\"contacts | getById:chat.contactId:'avatar'\"\n                             alt=\"{{contacts | getById:chat.contactId:'name'}}\"/>\n                        <mat-icon class=\"s-16 status\" [ngClass]=\"contacts | getById:chat.contactId:'status'\"></mat-icon>\n                    </div>\n\n                    <div fxLayout=\"row\" fxFlex>\n\n                        <div class=\"pr-4\" fxFlex fxLayout=\"column\" fxLayoutAlign=\"center start\">\n                            <div class=\"contact-name\">{{contacts | getById:chat.contactId:'name'}}</div>\n                            <div class=\"contact-last-message\">{{chat.lastMessage}}</div>\n                        </div>\n\n                        <div fxLayout=\"column\" fxLayoutAlign=\"start end\">\n                            <div class=\"contact-last-message-time\">\n                                {{chat.lastMessageTime | date}}\n                            </div>\n                            <div *ngIf=\"chat.unread\" class=\"mt-4 unread-message-count accent\">{{chat.unread}}</div>\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </button>\n\n        </div>\n        <!-- / CHATS LIST-->\n\n        <!-- CONTACTS LIST-->\n        <div class=\"contact-list\" fxLayout=\"column\">\n\n            <div matSubheader *ngIf=\"(contacts | filter: searchText).length > 0\">\n                Contacts\n            </div>\n\n            <button mat-button class=\"contact\"\n                    *ngFor=\"let contact of contacts| filter: searchText\"\n                    (click)=\"getChat(contact.id)\"\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\n\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                    <div class=\"avatar-wrapper\" fxFlex=\"0 1 auto\">\n                        <img src=\"{{contact.avatar}}\" class=\"mat-avatar avatar\" alt=\"{{contact.name}}\"/>\n                        <mat-icon class=\"s-16 status\" [ngClass]=\"contact.status\"></mat-icon>\n                    </div>\n\n                    <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n                        <div class=\"contact-name\">{{contact.name}}</div>\n                        <p class=\"contact-mood\">{{contact.mood}}</p>\n                    </div>\n\n                </div>\n\n            </button>\n\n        </div>\n        <!-- / CONTACTS LIST-->\n\n        <!-- NO RESULTS MESSAGE -->\n        <div *ngIf=\"(contacts | filter: searchText).length === 0\" class=\"no-results-message\">\n            No results..\n        </div>\n        <!-- NO RESULTS MESSAGE-->\n\n    </div>\n    <!-- / CHATS CONTENT -->\n\n</div>\n<!-- / SIDENAV CONTENT -->\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-user-sidenav',\n    templateUrl  : './user.component.html',\n    styleUrls    : ['./user.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ChatUserSidenavComponent implements OnInit, OnDestroy\n{\n    user: any;\n    userForm: FormGroup;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this.user = this._chatService.user;\n\n        this.userForm = new FormGroup({\n            mood  : new FormControl(this.user.mood),\n            status: new FormControl(this.user.status)\n        });\n\n        this.userForm.valueChanges\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                debounceTime(500),\n                distinctUntilChanged()\n            )\n            .subscribe(data => {\n                this.user.mood = data.mood;\n                this.user.status = data.status;\n                this._chatService.updateUserData(this.user);\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Change left sidenav view\n     *\n     * @param view\n     */\n    changeLeftSidenavView(view): void\n    {\n        this._chatService.onLeftSidenavViewChanged.next(view);\n    }\n\n}\n","<!-- SIDENAV HEADER -->\n<div class=\"sidenav-header\">\n\n    <!-- USER TOOLBAR -->\n    <mat-toolbar class=\"accent\">\n\n        <!-- TOOLBAR TOP -->\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n            <button mat-icon-button (click)=\"changeLeftSidenavView('chats')\" aria-label=\"back\">\n                <mat-icon>arrow_back</mat-icon>\n            </button>\n\n        </mat-toolbar-row>\n        <!-- / TOOLBAR TOP -->\n\n        <!-- TOOLBAR BOTTOM -->\n        <mat-toolbar-row class=\"toolbar-bottom\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n            <img [src]=\"user.avatar\" class=\"avatar user-avatar huge\" alt=\"{{user.name}}\"/>\n            <div class=\"user-name my-8\">{{user.name}}</div>\n\n        </mat-toolbar-row>\n        <!-- / TOOLBAR BOTTOM -->\n\n    </mat-toolbar>\n    <!-- / USER TOOLBAR -->\n</div>\n\n<!-- SIDENAV CONTENT -->\n<div class=\"sidenav-content py-32 px-24\" fxFlex>\n\n    <!-- USER MOOD -->\n    <form [formGroup]=\"userForm\" fxLayout=\"column\">\n\n        <mat-form-field appearance=\"outline\" fxFlex=\"0 1 auto\">\n            <mat-label>Mood</mat-label>\n            <textarea matInput name=\"mood\" formControlName=\"mood\" rows=\"3\"></textarea>\n        </mat-form-field>\n\n        <mat-radio-group formControlName=\"status\" fxLayout=\"column\">\n\n            <mat-radio-button value=\"online\" class=\"py-8\">\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"status online mr-8\"></mat-icon>\n                    <span class=\"mat-h4 m-0\">Online</span>\n                </div>\n            </mat-radio-button>\n\n            <mat-radio-button value=\"away\" class=\"py-8\">\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"status away mr-8\"></mat-icon>\n                    <span class=\"mat-h4 m-0\">Away</span>\n                </div>\n            </mat-radio-button>\n\n            <mat-radio-button value=\"do-not-disturb\" class=\"py-8\">\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"status do-not-disturb mr-8\"></mat-icon>\n                    <span class=\"mat-h4 m-0\">Do not disturb</span>\n                </div>\n            </mat-radio-button>\n\n            <mat-radio-button value=\"offline\" class=\"py-8\">\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"status offline mr-8\"></mat-icon>\n                    <span class=\"mat-h4 m-0\">Offline</span>\n                </div>\n            </mat-radio-button>\n        </mat-radio-group>\n\n    </form>\n    <!-- / USER MOOD -->\n\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-right-sidenav',\n    templateUrl  : './right.component.html',\n    styleUrls    : ['./right.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatRightSidenavComponent implements OnInit, OnDestroy\n{\n    view: string;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the defaults\n        this.view = 'contact';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._chatService.onRightSidenavViewChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(view => {\n                this.view = view;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n}\n","<div [ngSwitch]=\"view\" class=\"views\">\n\n    <chat-contact-sidenav class=\"view\"\n                          *ngSwitchCase=\"'contact'\"\n                          [@slideInRight]\n                          fusePerfectScrollbar>\n    </chat-contact-sidenav>\n\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-contact-sidenav',\n    templateUrl  : './contact.component.html',\n    styleUrls    : ['./contact.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ChatContactSidenavComponent implements OnInit, OnDestroy\n{\n    contact: any;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._chatService.onContactSelected\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(contact => {\n                this.contact = contact;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n}\n","<!-- SIDENAV HEADER -->\n<div class=\"sidenav-header\" *ngIf=\"contact\">\n\n    <!-- CONTACT TOOLBAR -->\n    <mat-toolbar class=\"accent\">\n\n        <!-- TOOLBAR TOP -->\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n            <div>Contact Info</div>\n\n            <button mat-icon-button fuseMatSidenavToggler=\"chat-right-sidenav\" aria-label=\"close\">\n                <mat-icon>close</mat-icon>\n            </button>\n\n        </mat-toolbar-row>\n        <!-- / TOOLBAR TOP -->\n\n        <!-- TOOLBAR BOTTOM -->\n        <mat-toolbar-row class=\"toolbar-bottom\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <img [src]=\"contact.avatar\" class=\"avatar contact-avatar huge\" alt=\"{{contact.name}}\"/>\n            <div class=\"contact-name my-8\">{{contact.name}}</div>\n        </mat-toolbar-row>\n        <!-- / TOOLBAR BOTTOM -->\n\n    </mat-toolbar>\n    <!-- / CONTACT TOOLBAR -->\n</div>\n\n<!-- SIDENAV CONTENT -->\n<div class=\"sidenav-content py-32 px-24\" fxFlex fxLayout=\"column\" *ngIf=\"contact\">\n\n    <!-- CONTACT MOOD -->\n    <div class=\"secondary-text mb-8\">Mood</div>\n    <div>{{contact.mood}}</div>\n    <!-- / CONTACT MOOD -->\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\nimport { ChatComponent } from 'app/main/apps/chat/chat.component';\nimport { ChatStartComponent } from 'app/main/apps/chat/chat-start/chat-start.component';\nimport { ChatViewComponent } from 'app/main/apps/chat/chat-view/chat-view.component';\nimport { ChatChatsSidenavComponent } from 'app/main/apps/chat/sidenavs/left/chats/chats.component';\nimport { ChatUserSidenavComponent } from 'app/main/apps/chat/sidenavs/left/user/user.component';\nimport { ChatLeftSidenavComponent } from 'app/main/apps/chat/sidenavs/left/left.component';\nimport { ChatRightSidenavComponent } from 'app/main/apps/chat/sidenavs/right/right.component';\nimport { ChatContactSidenavComponent } from 'app/main/apps/chat/sidenavs/right/contact/contact.component';\n\nconst routes: Routes = [\n    {\n        path: '**',\n        component: ChatComponent,\n        children: [],\n        resolve: {\n            chat: ChatService\n        }\n    }\n];\n\n@NgModule({\n    declarations: [\n        ChatComponent,\n        ChatViewComponent,\n        ChatStartComponent,\n        ChatChatsSidenavComponent,\n        ChatUserSidenavComponent,\n        ChatLeftSidenavComponent,\n        ChatRightSidenavComponent,\n        ChatContactSidenavComponent\n    ],\n    imports     : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatRadioModule,\n        MatSidenavModule,\n        MatToolbarModule,\n\n        FuseSharedModule\n    ],\n    providers   : [\n        ChatService\n    ]\n})\nexport class ChatModule\n{\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { fuseAnimations } from '@fuse/animations';\n\n@Component({\n    selector     : 'chat-start',\n    templateUrl  : './chat-start.component.html',\n    styleUrls    : ['./chat-start.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatStartComponent\n{\n    constructor()\n    {\n    }\n}\n","<div fxFlex fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <div class=\"big-circle app-logo\" fxLayout=\"column\" fxLayoutAlign=\"center center\"\n         [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n        <mat-icon class=\"s-64 s-md-128 mat-accent\">chat</mat-icon>\n    </div>\n\n    <span class=\"app-title mt-48 mb-8\" [@animate]=\"{value:'*',params:{delay:'100ms',y:'25px'}}\">\n        Chat App\n    </span>\n\n    <span fxHide fxShow.gt-md class=\"app-message\" [@animate]=\"{value:'*',params:{delay:'200ms',y:'50px'}}\">\n        Select a contact to start a chat!\n    </span>\n\n    <button mat-raised-button fxHide.gt-md fuseMatSidenavToggler=\"chat-left-sidenav\">\n        Select a contact to start a chat!\n    </button>\n\n</div>\n"]}
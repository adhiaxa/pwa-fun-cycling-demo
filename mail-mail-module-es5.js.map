{"version":3,"sources":["webpack:///src/app/main/apps/mail/sidebars/main/main-sidebar.component.ts","webpack:///src/app/main/apps/mail/sidebars/main/main-sidebar.component.html","webpack:///src/app/main/apps/mail/mail-list/mail-list-item/mail-list-item.component.ts","webpack:///src/app/main/apps/mail/mail-list/mail-list-item/mail-list-item.component.html","webpack:///src/app/main/apps/mail/i18n/tr.ts","webpack:///src/app/main/apps/mail/i18n/en.ts","webpack:///src/app/main/apps/mail/mail.module.ts","webpack:///src/app/main/apps/mail/mail.service.ts","webpack:///src/app/main/apps/mail/mail.component.ts","webpack:///src/app/main/apps/mail/mail.component.html","webpack:///src/app/main/apps/mail/mail.model.ts","webpack:///src/app/main/apps/mail/mail-list/mail-list.component.ts","webpack:///src/app/main/apps/mail/mail-list/mail-list.component.html","webpack:///src/app/main/apps/mail/mail-details/mail-details.component.ts","webpack:///src/app/main/apps/mail/mail-details/mail-details.component.html","webpack:///src/app/main/apps/mail/dialogs/compose/compose.component.ts","webpack:///src/app/main/apps/mail/dialogs/compose/compose.component.html"],"names":["MailMainSidebarComponent","_mailService","_matDialog","accounts","creapond","withinpixels","selectedAccount","_unsubscribeAll","onFoldersChanged","pipe","subscribe","folders","onFiltersChanged","filters","onLabelsChanged","labels","next","complete","dialogRef","open","panelClass","afterClosed","response","actionType","formData","console","log","getRawValue","composeDialog","MailListItemComponent","mail","onSelectedMailsChanged","selectedMails","selected","length","id","toggleSelectedMail","event","stopPropagation","toggleStar","updateMail","toggleImportant","onSelectedChange","$event","locale","lang","data","MAIL","COMPOSE","FOLDERS","FILTERS","LABELS","NO_MESSAGES","SELECT_A_MESSAGE_TO_READ","SEARCH_PLACEHOLDER","routes","path","component","resolve","redirectTo","MailModule","forChild","MailService","_httpClient","searchText","onMailsChanged","onCurrentMailChanged","onSearchTextChanged","route","state","routeParams","params","Promise","reject","all","getFolders","getFilters","getLabels","getMails","then","mailId","setCurrentMail","get","labelHandle","getMailsByLabel","filterHandle","getMailsByFilter","getMailsByFolder","folderHandle","handle","folderId","mails","map","filterArrayByString","labelId","index","indexOf","splice","push","find","deselectMails","selectMails","filterParameter","filterValue","undefined","filter","currentMail","folder","post","MailComponent","_fuseSidebarService","_fuseTranslationLoaderService","loadTranslations","searchInput","setTimeout","hasSelectedMails","isIndeterminate","valueChanges","toggleSelectAll","toggleLabelOnSelectedMails","setFolderOnSelectedMails","name","getSidebar","toggleOpen","toggleSidebar","Mail","from","to","subject","message","time","read","starred","important","hasAttachments","attachments","MailListComponent","_activatedRoute","_location","snapshot","go","MailDetailsComponent","showDetails","MailComposeDialogComponent","matDialogRef","_data","composeForm","createComposeForm","showExtraToFields","value","disabled","cc","bcc","toggleExtraToFields"],"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","file":"mail-mail-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { MailService } from 'app/main/apps/mail/mail.service';\nimport { MailComposeDialogComponent } from 'app/main/apps/mail/dialogs/compose/compose.component';\n\n@Component({\n    selector     : 'mail-main-sidebar',\n    templateUrl  : './main-sidebar.component.html',\n    styleUrls    : ['./main-sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class MailMainSidebarComponent implements OnInit, OnDestroy\n{\n    folders: any[];\n    filters: any[];\n    labels: any[];\n    accounts: object;\n    selectedAccount: string;\n    dialogRef: any;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {MailService} _mailService\n     * @param {MatDialog} _matDialog\n     */\n    constructor(\n        private _mailService: MailService,\n        public _matDialog: MatDialog\n    )\n    {\n        // Set the defaults\n        this.accounts = {\n            creapond    : 'johndoe@creapond.com',\n            withinpixels: 'johndoe@withinpixels.com'\n        };\n        this.selectedAccount = 'creapond';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._mailService.onFoldersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(folders => {\n                this.folders = folders;\n            });\n\n        this._mailService.onFiltersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(filters => {\n                this.filters = filters;\n            });\n\n        this._mailService.onLabelsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.labels = labels;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Compose dialog\n     */\n    composeDialog(): void\n    {\n        this.dialogRef = this._matDialog.open(MailComposeDialogComponent, {\n            panelClass: 'mail-compose-dialog'\n        });\n        this.dialogRef.afterClosed()\n            .subscribe(response => {\n                if ( !response )\n                {\n                    return;\n                }\n                const actionType: string = response[0];\n                const formData: FormGroup = response[1];\n                switch ( actionType )\n                {\n                    /**\n                     * Send\n                     */\n                    case 'send':\n                        console.log('new Mail', formData.getRawValue());\n                        break;\n                    /**\n                     * Delete\n                     */\n                    case 'delete':\n                        console.log('delete Mail');\n                        break;\n                }\n            });\n    }\n}\n","<!-- SIDEBAR HEADER -->\n<div fxLayout=\"column\" fxLayoutAlign=\"space-between start\"\n     class=\"header accent p-24 pb-4\">\n\n    <div class=\"logo\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <mat-icon class=\"logo-icon s-32\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">mail\n        </mat-icon>\n        <span class=\"logo-text\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">Mailbox</span>\n    </div>\n\n    <div class=\"account\" fxLayout=\"column\" [@animate]=\"{value:'*',params:{delay:'300ms'}}\">\n        <div class=\"title\">John Doe</div>\n        <mat-form-field floatLabel=\"never\">\n            <mat-select class=\"account-selection\" placeholder=\"Mail Selection\"\n                        [ngModel]=\"selectedAccount\">\n                <mat-option *ngFor=\"let account of (accounts | keys)\" [value]=\"account.key\">\n                    {{account.value}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n</div>\n<!-- / SIDEBAR HEADER -->\n\n<!-- SIDEBAR CONTENT -->\n<div class=\"content\" fusePerfectScrollbar [@animate]=\"{value:'*',params:{y:'50px'}}\">\n\n    <div class=\"px-24 pt-32 pb-12\">\n        <button mat-raised-button\n                class=\"mat-accent compose-dialog-button w-100-p\"\n                (click)=\"composeDialog()\"\n                aria-label=\"Compose\">\n            {{ 'MAIL.COMPOSE' | translate }}\n        </button>\n    </div>\n\n    <div class=\"nav material2\">\n\n        <div class=\"nav-subheader\">{{ 'MAIL.FOLDERS' | translate }}</div>\n\n        <div class=\"nav-item\" *ngFor=\"let folder of folders\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/mail/' + folder.handle\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\" *ngIf=\"folder.icon\">{{folder.icon}}</mat-icon>\n                <span>{{folder.title}}</span>\n            </a>\n        </div>\n\n        <div class=\"nav-subheader\">{{ 'MAIL.FILTERS' | translate }}</div>\n\n        <div class=\"nav-item\" *ngFor=\"let filter of filters\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/mail/filter/' + filter.handle\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\" [ngClass]=\"filter.color\" *ngIf=\"filter.icon\">{{filter.icon}}</mat-icon>\n                <span>{{filter.title}}</span>\n            </a>\n        </div>\n\n        <div class=\"nav-subheader\">{{ 'MAIL.LABELS' | translate }}</div>\n\n        <div class=\"nav-item\" *ngFor=\"let label of labels\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/mail/label/' + label.handle\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\" [ngStyle]=\"{'color':label.color}\">label</mat-icon>\n                <span>{{label.title}}</span>\n            </a>\n        </div>\n\n    </div>\n\n</div>\n<!-- / SIDEBAR CONTENT -->\n","import { Component, HostBinding, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\nimport { MailService } from 'app/main/apps/mail/mail.service';\n\n@Component({\n    selector     : 'mail-list-item',\n    templateUrl  : './mail-list-item.component.html',\n    styleUrls    : ['./mail-list-item.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MailListItemComponent implements OnInit, OnDestroy\n{\n    @Input() mail: Mail;\n    labels: any[];\n\n    @HostBinding('class.selected')\n    selected: boolean;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {MailService} _mailService\n     */\n    constructor(\n        private _mailService: MailService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Set the initial values\n        this.mail = new Mail(this.mail);\n\n        // Subscribe to update on selected mail change\n        this._mailService.onSelectedMailsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedMails => {\n                this.selected = false;\n\n                if ( selectedMails.length > 0 )\n                {\n                    for ( const mail of selectedMails )\n                    {\n                        if ( mail.id === this.mail.id )\n                        {\n                            this.selected = true;\n                            break;\n                        }\n                    }\n                }\n            });\n\n        // Subscribe to update on label change\n        this._mailService.onLabelsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.labels = labels;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On selected change\n     */\n    onSelectedChange(): void\n    {\n        this._mailService.toggleSelectedMail(this.mail.id);\n    }\n\n    /**\n     * Toggle star\n     *\n     * @param event\n     */\n    toggleStar(event): void\n    {\n        event.stopPropagation();\n\n        this.mail.toggleStar();\n\n        this._mailService.updateMail(this.mail);\n    }\n\n    /**\n     * Toggle Important\n     *\n     * @param event\n     */\n    toggleImportant(event): void\n    {\n        event.stopPropagation();\n\n        this.mail.toggleImportant();\n\n        this._mailService.updateMail(this.mail);\n    }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n    <mat-checkbox [(ngModel)]=\"selected\" (ngModelChange)=\"onSelectedChange()\"\n                  (click)=\"$event.stopPropagation();\"></mat-checkbox>\n\n    <div class=\"info\" fxFlex FlexLayout=\"column\">\n\n        <div class=\"row-1\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <div class=\"name\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex>\n                <img class=\"avatar\" *ngIf=\"mail.from?.avatar\" alt=\"{{mail.from?.name}}\" src=\"{{mail.from?.avatar}}\"/>\n                <div class=\"avatar accent\" *ngIf=\"!mail.from?.avatar\">{{mail.from?.name[0]}}</div>\n                <span class=\"text-truncate\" *ngIf=\"mail?.from\">{{mail.from?.name}}</span>\n                <mat-icon class=\"s-16 ml-8\" *ngIf=\"mail.hasAttachments\">attachment</mat-icon>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <div class=\"time\">{{mail.time}}</div>\n\n            </div>\n\n        </div>\n\n        <div class=\"row-2\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n\n                <div class=\"subject text-truncate\">\n                    {{mail.subject}}\n                </div>\n\n                <div class=\"message text-truncate\" *ngIf=\"mail?.message\">\n                    {{mail.message | htmlToPlaintext | slice:0:180}}{{mail.message.length > 180 ? '...' : ''}}\n                </div>\n\n                <div class=\"labels\" fxLayout=\"row wrap\" fxHide fxShow.gt-sm>\n                    <div class=\"label\" *ngFor=\"let labelId of mail.labels\"\n                         fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                        <div class=\"label-color\"\n                             [ngStyle]=\"{'background-color': labels | getById:labelId:'color'}\"></div>\n                        <div class=\"label-title\">{{labels | getById:labelId:'title'}}</div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n","export const locale = {\n    lang: 'tr',\n    data: {\n        MAIL: {\n            COMPOSE                 : 'YENİ E-POSTA',\n            FOLDERS                 : 'KLASÖRLER',\n            FILTERS                 : 'FİLTRELER',\n            LABELS                  : 'ETİKETLER',\n            NO_MESSAGES             : 'Mesajiniz bulunmamakta!',\n            SELECT_A_MESSAGE_TO_READ: 'Okumak için bir mesaj seçin',\n            SEARCH_PLACEHOLDER      : 'E-mail yada bir kişi arayın'\n        }\n    }\n};\n","export const locale = {\n    lang: 'en',\n    data: {\n        MAIL: {\n            COMPOSE                 : 'COMPOSE',\n            FOLDERS                 : 'FOLDERS',\n            FILTERS                 : 'FILTERS',\n            LABELS                  : 'LABELS',\n            NO_MESSAGES             : 'There are no messages!',\n            SELECT_A_MESSAGE_TO_READ: 'Select a message to read',\n            SEARCH_PLACEHOLDER      : 'Search for an e-mail or contact'\n        }\n    }\n};\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseSidebarModule } from '@fuse/components';\n\nimport { MailService } from 'app/main/apps/mail/mail.service';\nimport { MailComponent } from 'app/main/apps/mail/mail.component';\nimport { MailListComponent } from 'app/main/apps/mail/mail-list/mail-list.component';\nimport { MailListItemComponent } from 'app/main/apps/mail/mail-list/mail-list-item/mail-list-item.component';\nimport { MailDetailsComponent } from 'app/main/apps/mail/mail-details/mail-details.component';\nimport { MailMainSidebarComponent } from 'app/main/apps/mail/sidebars/main/main-sidebar.component';\nimport { MailComposeDialogComponent } from 'app/main/apps/mail/dialogs/compose/compose.component';\n\nconst routes: Routes = [\n    {\n        path     : 'label/:labelHandle',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : 'label/:labelHandle/:mailId',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : 'filter/:filterHandle',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : 'filter/:filterHandle/:mailId',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : ':folderHandle',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : ':folderHandle/:mailId',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path      : '**',\n        redirectTo: 'inbox'\n    }\n];\n\n@NgModule({\n    declarations   : [\n        MailComponent,\n        MailListComponent,\n        MailListItemComponent,\n        MailDetailsComponent,\n        MailMainSidebarComponent,\n        MailComposeDialogComponent\n    ],\n    imports        : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatMenuModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatToolbarModule,\n\n        TranslateModule,\n\n        FuseSharedModule,\n        FuseSidebarModule\n    ],\n    providers      : [\n        MailService\n    ],\n    entryComponents: [\n        MailComposeDialogComponent\n    ]\n})\nexport class MailModule\n{\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { FuseUtils } from '@fuse/utils';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\n\n@Injectable()\nexport class MailService implements Resolve<any>\n{\n    mails: Mail[];\n    selectedMails: Mail[];\n    currentMail: Mail;\n    searchText = '';\n\n    folders: any[];\n    filters: any[];\n    labels: any[];\n    routeParams: any;\n\n    onMailsChanged: BehaviorSubject<any>;\n    onSelectedMailsChanged: BehaviorSubject<any>;\n    onCurrentMailChanged: BehaviorSubject<any>;\n    onFoldersChanged: BehaviorSubject<any>;\n    onFiltersChanged: BehaviorSubject<any>;\n    onLabelsChanged: BehaviorSubject<any>;\n    onSearchTextChanged: BehaviorSubject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpClient\n    )\n    {\n        // Set the defaults\n        this.selectedMails = [];\n        this.onMailsChanged = new BehaviorSubject([]);\n        this.onSelectedMailsChanged = new BehaviorSubject([]);\n        this.onCurrentMailChanged = new BehaviorSubject([]);\n        this.onFoldersChanged = new BehaviorSubject([]);\n        this.onFiltersChanged = new BehaviorSubject([]);\n        this.onLabelsChanged = new BehaviorSubject([]);\n        this.onSearchTextChanged = new BehaviorSubject('');\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        this.routeParams = route.params;\n\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                this.getFolders(),\n                this.getFilters(),\n                this.getLabels(),\n                this.getMails()\n            ]).then(\n                () => {\n                    if ( this.routeParams.mailId )\n                    {\n                        this.setCurrentMail(this.routeParams.mailId);\n                    }\n                    else\n                    {\n                        this.setCurrentMail(null);\n                    }\n\n                    this.onSearchTextChanged.subscribe(searchText => {\n                        if ( searchText !== '' )\n                        {\n                            this.searchText = searchText;\n                            this.getMails();\n                        }\n                        else\n                        {\n                            this.searchText = searchText;\n                            this.getMails();\n                        }\n                    });\n\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get all folders\n     *\n     * @returns {Promise<any>}\n     */\n    getFolders(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/mail-folders')\n                .subscribe((response: any) => {\n                    this.folders = response;\n                    this.onFoldersChanged.next(this.folders);\n                    resolve(this.folders);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get all filters\n     *\n     * @returns {Promise<any>}\n     */\n    getFilters(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/mail-filters')\n                .subscribe((response: any) => {\n                    this.filters = response;\n                    this.onFiltersChanged.next(this.filters);\n                    resolve(this.filters);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get all labels\n     *\n     * @returns {Promise<any>}\n     */\n    getLabels(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/mail-labels')\n                .subscribe((response: any) => {\n                    this.labels = response;\n                    this.onLabelsChanged.next(this.labels);\n                    resolve(this.labels);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get all mails\n     *\n     * @returns {Promise<Mail[]>}\n     */\n    getMails(): Promise<Mail[]>\n    {\n        if ( this.routeParams.labelHandle )\n        {\n            return this.getMailsByLabel(this.routeParams.labelHandle);\n        }\n\n        if ( this.routeParams.filterHandle )\n        {\n            return this.getMailsByFilter(this.routeParams.filterHandle);\n        }\n\n        return this.getMailsByFolder(this.routeParams.folderHandle);\n    }\n\n    /**\n     * Get mails by folder\n     *\n     * @param handle\n     * @returns {Promise<Mail[]>}\n     */\n    getMailsByFolder(handle): Promise<Mail[]>\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.get('api/mail-folders?handle=' + handle)\n                .subscribe((folders: any) => {\n\n                    const folderId = folders[0].id;\n\n                    this._httpClient.get('api/mail-mails?folder=' + folderId)\n                        .subscribe((mails: any) => {\n\n                            this.mails = mails.map(mail => {\n                                return new Mail(mail);\n                            });\n\n                            this.mails = FuseUtils.filterArrayByString(this.mails, this.searchText);\n\n                            this.onMailsChanged.next(this.mails);\n\n                            resolve(this.mails);\n\n                        }, reject);\n                });\n        });\n    }\n\n    /**\n     * Get mails by filter\n     *\n     * @param handle\n     * @returns {Promise<Mail[]>}\n     */\n    getMailsByFilter(handle): Promise<Mail[]>\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.get('api/mail-mails?' + handle + '=true')\n                .subscribe((mails: any) => {\n\n                    this.mails = mails.map(mail => {\n                        return new Mail(mail);\n                    });\n\n                    this.mails = FuseUtils.filterArrayByString(this.mails, this.searchText);\n\n                    this.onMailsChanged.next(this.mails);\n\n                    resolve(this.mails);\n\n                }, reject);\n        });\n    }\n\n    /**\n     * Get mails by label\n     *\n     * @param handle\n     * @returns {Promise<Mail[]>}\n     */\n    getMailsByLabel(handle): Promise<Mail[]>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/mail-labels?handle=' + handle)\n                .subscribe((labels: any) => {\n\n                    const labelId = labels[0].id;\n\n                    this._httpClient.get('api/mail-mails?labels=' + labelId)\n                        .subscribe((mails: any) => {\n\n                            this.mails = mails.map(mail => {\n                                return new Mail(mail);\n                            });\n\n                            this.mails = FuseUtils.filterArrayByString(this.mails, this.searchText);\n\n                            this.onMailsChanged.next(this.mails);\n\n                            resolve(this.mails);\n\n                        }, reject);\n                });\n        });\n    }\n\n    /**\n     * Toggle selected mail by id\n     *\n     * @param id\n     */\n    toggleSelectedMail(id): void\n    {\n        // First, check if we already have that mail as selected...\n        if ( this.selectedMails.length > 0 )\n        {\n            for ( const mail of this.selectedMails )\n            {\n                // ...delete the selected mail\n                if ( mail.id === id )\n                {\n                    const index = this.selectedMails.indexOf(mail);\n\n                    if ( index !== -1 )\n                    {\n                        this.selectedMails.splice(index, 1);\n\n                        // Trigger the next event\n                        this.onSelectedMailsChanged.next(this.selectedMails);\n\n                        // Return\n                        return;\n                    }\n                }\n            }\n        }\n\n        // If we don't have it, push as selected\n        this.selectedMails.push(\n            this.mails.find(mail => {\n                return mail.id === id;\n            })\n        );\n\n        // Trigger the next event\n        this.onSelectedMailsChanged.next(this.selectedMails);\n    }\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll(): void\n    {\n        if ( this.selectedMails.length > 0 )\n        {\n            this.deselectMails();\n        }\n        else\n        {\n            this.selectMails();\n        }\n\n    }\n\n    /**\n     * Select mails\n     *\n     * @param filterParameter\n     * @param filterValue\n     */\n    selectMails(filterParameter?, filterValue?): void\n    {\n        this.selectedMails = [];\n\n        // If there is no filter, select all mails\n        if ( filterParameter === undefined || filterValue === undefined )\n        {\n            this.selectedMails = this.mails;\n        }\n        else\n        {\n            this.selectedMails.push(...\n                this.mails.filter(mail => {\n                    return mail[filterParameter] === filterValue;\n                })\n            );\n        }\n\n        // Trigger the next event\n        this.onSelectedMailsChanged.next(this.selectedMails);\n    }\n\n    /**\n     * Deselect mails\n     */\n    deselectMails(): void\n    {\n        this.selectedMails = [];\n\n        // Trigger the next event\n        this.onSelectedMailsChanged.next(this.selectedMails);\n    }\n\n    /**\n     * Set current mail by id\n     *\n     * @param id\n     */\n    setCurrentMail(id): void\n    {\n        this.currentMail = this.mails.find(mail => {\n            return mail.id === id;\n        });\n\n        this.onCurrentMailChanged.next(this.currentMail);\n    }\n\n    /**\n     * Toggle label on selected mails\n     *\n     * @param labelId\n     */\n    toggleLabelOnSelectedMails(labelId): void\n    {\n        this.selectedMails.map(mail => {\n\n            const index = mail.labels.indexOf(labelId);\n\n            if ( index !== -1 )\n            {\n                mail.labels.splice(index, 1);\n            }\n            else\n            {\n                mail.labels.push(labelId);\n            }\n\n            this.updateMail(mail);\n        });\n    }\n\n    /**\n     * Set folder on selected mails\n     *\n     * @param folderId\n     */\n    setFolderOnSelectedMails(folderId): void\n    {\n        this.selectedMails.map(mail => {\n            mail.folder = folderId;\n\n            this.updateMail(mail);\n        });\n\n        this.deselectMails();\n    }\n\n    /**\n     * Update the mail\n     *\n     * @param mail\n     * @returns {Promise<any>}\n     */\n    updateMail(mail): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.post('api/mail-mails/' + mail.id, {...mail})\n                .subscribe(response => {\n\n                    this.getMails().then(mails => {\n\n                        if ( mails && this.currentMail )\n                        {\n                            this.setCurrentMail(this.currentMail.id);\n                        }\n\n                        resolve(mails);\n\n                    }, reject);\n                });\n        });\n    }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\nimport { FuseTranslationLoaderService } from '@fuse/services/translation-loader.service';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\nimport { MailService } from 'app/main/apps/mail/mail.service';\n\nimport { locale as english } from 'app/main/apps/mail//i18n/en';\nimport { locale as turkish } from 'app/main/apps/mail//i18n/tr';\n\n@Component({\n    selector     : 'mail',\n    templateUrl  : './mail.component.html',\n    styleUrls    : ['./mail.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MailComponent implements OnInit, OnDestroy\n{\n    hasSelectedMails: boolean;\n    isIndeterminate: boolean;\n    folders: any[];\n    filters: any[];\n    labels: any[];\n    searchInput: FormControl;\n    currentMail: Mail;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {MailService} _mailService\n     * @param {FuseSidebarService} _fuseSidebarService\n     * @param {FuseTranslationLoaderService} _fuseTranslationLoaderService\n     */\n    constructor(\n        private _mailService: MailService,\n        private _fuseSidebarService: FuseSidebarService,\n        private _fuseTranslationLoaderService: FuseTranslationLoaderService\n    )\n    {\n        // Load the translations\n        this._fuseTranslationLoaderService.loadTranslations(english, turkish);\n\n        // Set the defaults\n        this.searchInput = new FormControl('');\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._mailService.onSelectedMailsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedMails => {\n                setTimeout(() => {\n                    this.hasSelectedMails = selectedMails.length > 0;\n                    this.isIndeterminate = (selectedMails.length !== this._mailService.mails.length && selectedMails.length > 0);\n                }, 0);\n            });\n\n        this._mailService.onFoldersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(folders => {\n                this.folders = this._mailService.folders;\n            });\n\n        this._mailService.onFiltersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(folders => {\n                this.filters = this._mailService.filters;\n            });\n\n        this._mailService.onLabelsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.labels = this._mailService.labels;\n            });\n\n        this._mailService.onCurrentMailChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(currentMail => {\n                if ( !currentMail )\n                {\n                    this.currentMail = null;\n                }\n                else\n                {\n                    this.currentMail = currentMail;\n                }\n            });\n\n        this.searchInput.valueChanges.pipe(\n            takeUntil(this._unsubscribeAll),\n            debounceTime(300),\n            distinctUntilChanged()\n        )\n            .subscribe(searchText => {\n                this._mailService.onSearchTextChanged.next(searchText);\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll(): void\n    {\n        this._mailService.toggleSelectAll();\n    }\n\n    /**\n     * Select mails\n     *\n     * @param filterParameter\n     * @param filterValue\n     */\n    selectMails(filterParameter?, filterValue?): void\n    {\n        this._mailService.selectMails(filterParameter, filterValue);\n    }\n\n    /**\n     * Deselect mails\n     */\n    deselectMails(): void\n    {\n        this._mailService.deselectMails();\n    }\n\n    /**\n     * Deselect current mail\n     */\n    deselectCurrentMail(): void\n    {\n        this._mailService.onCurrentMailChanged.next(null);\n    }\n\n    /**\n     * Toggle label on selected mails\n     *\n     * @param labelId\n     */\n    toggleLabelOnSelectedMails(labelId): void\n    {\n        this._mailService.toggleLabelOnSelectedMails(labelId);\n    }\n\n    /**\n     * Set folder on selected mails\n     *\n     * @param folderId\n     */\n    setFolderOnSelectedMails(folderId): void\n    {\n        this._mailService.setFolderOnSelectedMails(folderId);\n    }\n\n    /**\n     * Toggle the sidebar\n     *\n     * @param name\n     */\n    toggleSidebar(name): void\n    {\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\n    }\n}\n","<div id=\"mail\" class=\"page-layout carded left-sidebar inner-scroll\">\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n\n    <!-- SIDEBAR -->\n    <fuse-sidebar class=\"sidebar\" name=\"mail-main-sidebar\" position=\"left\" lockedOpen=\"gt-md\">\n        <mail-main-sidebar></mail-main-sidebar>\n    </fuse-sidebar>\n    <!-- / SIDEBAR -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- CONTENT HEADER -->\n        <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <div class=\"search-wrapper\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <button mat-icon-button class=\"sidebar-toggle\" fxHide.gt-md\n                        (click)=\"toggleSidebar('mail-main-sidebar')\">\n                    <mat-icon>menu</mat-icon>\n                </button>\n\n                <div class=\"search\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"secondary-text\">search</mat-icon>\n                    <input [formControl]=\"searchInput\" [placeholder]=\"'MAIL.SEARCH_PLACEHOLDER' | translate\" fxFlex>\n                </div>\n\n            </div>\n\n        </div>\n        <!-- / CONTENT HEADER -->\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card\" [ngClass]=\"{'current-mail-selected':currentMail}\">\n\n            <!-- CONTENT TOOLBAR -->\n            <div class=\"toolbar px-24 py-8\">\n\n                <div class=\"mail-selection\" fxFlex=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-checkbox (click)=\"toggleSelectAll()\" [checked]=\"hasSelectedMails\"\n                                  [indeterminate]=\"isIndeterminate\"></mat-checkbox>\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"selectMenu\">\n                        <mat-icon>arrow_drop_down</mat-icon>\n                    </button>\n                    <mat-menu #selectMenu=\"matMenu\">\n                        <button mat-menu-item (click)=\"selectMails()\">All</button>\n                        <button mat-menu-item (click)=\"deselectMails()\">None</button>\n                        <button mat-menu-item (click)=\"selectMails('read', true)\">Read</button>\n                        <button mat-menu-item (click)=\"selectMails('read', false)\">Unread</button>\n                        <button mat-menu-item (click)=\"selectMails('starred', true)\">Starred</button>\n                        <button mat-menu-item (click)=\"selectMails('starred', false)\">Unstarred</button>\n                        <button mat-menu-item (click)=\"selectMails('important', true)\">Important</button>\n                        <button mat-menu-item (click)=\"selectMails('important', false)\">Unimportant</button>\n                    </mat-menu>\n\n                    <div class=\"toolbar-separator\" *ngIf=\"hasSelectedMails\"></div>\n\n                    <button mat-icon-button (click)=\"setFolderOnSelectedMails(4)\" *ngIf=\"hasSelectedMails\">\n                        <mat-icon class=\"secondary-text\">delete</mat-icon>\n                    </button>\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"folderMenu\" *ngIf=\"hasSelectedMails\">\n                        <mat-icon class=\"secondary-text\">folder</mat-icon>\n                    </button>\n                    <mat-menu #folderMenu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let folder of folders\"\n                                (click)=\"setFolderOnSelectedMails(folder.id)\">{{folder.title}}\n                        </button>\n                    </mat-menu>\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" *ngIf=\"hasSelectedMails\">\n                        <mat-icon class=\"secondary-text\">label</mat-icon>\n                    </button>\n                    <mat-menu #labelMenu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let label of labels\"\n                                (click)=\"toggleLabelOnSelectedMails(label.id)\">{{label.title}}\n                        </button>\n                    </mat-menu>\n                </div>\n\n                <div *ngIf=\"currentMail\" fxHide.gt-xs>\n                    <button mat-icon-button (click)=\"deselectCurrentMail()\">\n                        <mat-icon class=\"secondary-text\">arrow_back</mat-icon>\n                    </button>\n                </div>\n            </div>\n            <!-- / CONTENT TOOLBAR -->\n\n            <!-- CONTENT -->\n            <div class=\"content\" fxLayout=\"row\">\n\n                <mail-list fusePerfectScrollbar fxFlex></mail-list>\n                <mail-details fusePerfectScrollbar fxFlex></mail-details>\n\n            </div>\n            <!-- / CONTENT -->\n\n        </div>\n        <!-- / CONTENT CARD -->\n\n    </div>\n    <!-- / CENTER -->\n\n</div>\n","export class Mail\n{\n    id: string;\n    from: {\n        name: string,\n        avatar: string,\n        email: string\n    };\n    to: {\n        name: string,\n        email: string\n    }[];\n    subject: string;\n    message: string;\n    time: string;\n    read: boolean;\n    starred: boolean;\n    important: boolean;\n    hasAttachments: boolean;\n    attachments: {\n        type: string,\n        fileName: string,\n        preview: string,\n        url: string,\n        size: string\n    }[];\n    labels: string[];\n    folder: string;\n\n    /**\n     * Constructor\n     *\n     * @param mail\n     */\n    constructor(mail)\n    {\n        this.id = mail.id;\n        this.from = mail.from;\n        this.to = mail.to;\n        this.subject = mail.subject;\n        this.message = mail.message;\n        this.time = mail.time;\n        this.read = mail.read;\n        this.starred = mail.starred;\n        this.important = mail.important;\n        this.hasAttachments = mail.hasAttachments;\n        this.attachments = mail.attachments;\n        this.labels = mail.labels;\n        this.folder = mail.folder;\n    }\n\n    /**\n     * Toggle star\n     */\n    toggleStar(): void\n    {\n        this.starred = !this.starred;\n    }\n\n    /**\n     * Toggle important\n     */\n    toggleImportant(): void\n    {\n        this.important = !this.important;\n    }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\nimport { MailService } from 'app/main/apps/mail/mail.service';\n\n@Component({\n    selector     : 'mail-list',\n    templateUrl  : './mail-list.component.html',\n    styleUrls    : ['./mail-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class MailListComponent implements OnInit, OnDestroy\n{\n    mails: Mail[];\n    currentMail: Mail;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ActivatedRoute} _activatedRoute\n     * @param {MailService} _mailService\n     * @param {Location} _location\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _mailService: MailService,\n        private _location: Location\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update mails on changes\n        this._mailService.onMailsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(mails => {\n                this.mails = mails;\n            });\n\n        // Subscribe to update current mail on changes\n        this._mailService.onCurrentMailChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(currentMail => {\n                if ( !currentMail )\n                {\n                    // Set the current mail id to null to deselect the current mail\n                    this.currentMail = null;\n\n                    // Handle the location changes\n                    const labelHandle  = this._activatedRoute.snapshot.params.labelHandle,\n                          filterHandle = this._activatedRoute.snapshot.params.filterHandle,\n                          folderHandle = this._activatedRoute.snapshot.params.folderHandle;\n\n                    if ( labelHandle )\n                    {\n                        this._location.go('apps/mail/label/' + labelHandle);\n                    }\n                    else if ( filterHandle )\n                    {\n                        this._location.go('apps/mail/filter/' + filterHandle);\n                    }\n                    else\n                    {\n                        this._location.go('apps/mail/' + folderHandle);\n                    }\n                }\n                else\n                {\n                    this.currentMail = currentMail;\n                }\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Read mail\n     *\n     * @param mailId\n     */\n    readMail(mailId): void\n    {\n        const labelHandle  = this._activatedRoute.snapshot.params.labelHandle,\n              filterHandle = this._activatedRoute.snapshot.params.filterHandle,\n              folderHandle = this._activatedRoute.snapshot.params.folderHandle;\n\n        if ( labelHandle )\n        {\n            this._location.go('apps/mail/label/' + labelHandle + '/' + mailId);\n        }\n        else if ( filterHandle )\n        {\n            this._location.go('apps/mail/filter/' + filterHandle + '/' + mailId);\n        }\n        else\n        {\n            this._location.go('apps/mail/' + folderHandle + '/' + mailId);\n        }\n\n        // Set current mail\n        this._mailService.setCurrentMail(mailId);\n    }\n}\n","<div *ngIf=\"mails.length === 0\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlexFill>\n    <span class=\"no-messages-text hint-text\">{{ 'MAIL.NO_MESSAGES' | translate }}</span>\n</div>\n\n<div class=\"mail-list\" [@animateStagger]=\"{value:'50'}\">\n    <mail-list-item *ngFor=\"let mail of mails\" [mail]=\"mail\" (click)=\"readMail(mail.id)\"\n                    [ngClass]=\"{'current-mail':mail?.id == currentMail?.id}\"\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\n    </mail-list-item>\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\nimport { MailService } from 'app/main/apps/mail/mail.service';\n\n@Component({\n    selector     : 'mail-details',\n    templateUrl  : './mail-details.component.html',\n    styleUrls    : ['./mail-details.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class MailDetailsComponent implements OnInit, OnDestroy\n{\n    mail: Mail;\n    labels: any[];\n    showDetails: boolean;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {MailService} _mailService\n     */\n    constructor(\n        private _mailService: MailService\n    )\n    {\n        // Set the defaults\n        this.showDetails = false;\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update the current mail\n        this._mailService.onCurrentMailChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(currentMail => {\n                this.mail = currentMail;\n            });\n\n        // Subscribe to update on label change\n        this._mailService.onLabelsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.labels = labels;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Toggle star\n     *\n     * @param event\n     */\n    toggleStar(event): void\n    {\n        event.stopPropagation();\n\n        this.mail.toggleStar();\n\n        this._mailService.updateMail(this.mail);\n    }\n\n    /**\n     * Toggle important\n     *\n     * @param event\n     */\n    toggleImportant(event): void\n    {\n        event.stopPropagation();\n\n        this.mail.toggleImportant();\n\n        this._mailService.updateMail(this.mail);\n    }\n}\n","<div *ngIf=\"!mail\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex>\n    <mat-icon class=\"s-128 mb-16 select-message-icon hint-text\"\n              [@animate]=\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\">\n        email\n    </mat-icon>\n    <span class=\"select-message-text hint-text\" [@animate]=\"{value:'*',params:{delay:'400ms'}}\">\n        <span>{{ 'MAIL.SELECT_A_MESSAGE_TO_READ' | translate }}</span>\n    </span>\n</div>\n\n<div *ngIf=\"mail\">\n\n    <div class=\"mail-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n        <div>\n            <div class=\"subject\">{{mail.subject}}</div>\n\n            <div class=\"labels mt-8\" fxLayout=\"row wrap\">\n                <div class=\"label\" *ngFor=\"let labelId of mail.labels\"\n                     fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <div class=\"label-color\" [ngStyle]=\"{'background-color': labels | getById:labelId:'color'}\"></div>\n                    <div class=\"label-title\">{{labels | getById:labelId:'title'}}</div>\n                </div>\n            </div>\n\n        </div>\n\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            <button mat-icon-button (click)=\"toggleStar($event)\" aria-label=\"Toggle star\">\n                <mat-icon class=\"amber-fg\" *ngIf=\"mail.starred\">star</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!mail.starred\">star_border</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)=\"toggleImportant($event)\" aria-label=\"Toggle important\">\n                <mat-icon class=\"red-fg\" *ngIf=\"mail.important\">label</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!mail.important\">label_outline</mat-icon>\n            </button>\n        </div>\n    </div>\n\n    <div class=\"mail-content\">\n\n        <div class=\"info\" fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\n\n            <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"start start\">\n\n                <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n\n                    <div>\n                        <img *ngIf=\"mail.from.avatar\" alt=\"{{mail.from.name}}\"\n                             src=\"{{mail.from.avatar}}\" class=\"avatar\"/>\n\n                        <div *ngIf=\"!mail.from.avatar\" class=\"avatar\" ms-random-class=\"vm.colors\">\n                            {{mail.from.name[0]}}\n                        </div>\n                    </div>\n\n                    <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n\n                        <div class=\"name\">\n                            {{mail.from.name}}\n                        </div>\n\n                        <div class=\"to\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                            <div class=\"to-text\">to</div>\n                            <div>{{mail.to[0].name}}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <a class=\"toggle-details\" (click)=\"showDetails = !showDetails\">\n                    <span *ngIf=\"!showDetails\">Show Details</span>\n                    <span *ngIf=\"showDetails\">Hide Details</span>\n                </a>\n\n                <div *ngIf=\"showDetails\" class=\"details\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n\n                    <div fxLayout=\"column\">\n                        <span class=\"title\">From:</span>\n                        <span class=\"title\">To:</span>\n                        <span class=\"title\">Date:</span>\n                    </div>\n\n                    <div fxLayout=\"column\">\n                        <span class=\"detail\">{{mail.from.email}}</span>\n                        <span class=\"detail\">{{mail.to[0].email}}</span>\n                        <span class=\"detail\">{{mail.time}}</span>\n                    </div>\n                </div>\n            </div>\n\n            <button mat-icon-button [matMenuTriggerFor]=\"moreMenu\" aria-label=\"More\" (click)=\"$event.stopPropagation()\">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n\n            <mat-menu #moreMenu=\"matMenu\">\n                <button mat-menu-item aria-label=\"Reply\">\n                    <mat-icon>reply</mat-icon>\n                    <span>Reply</span>\n                </button>\n\n                <button mat-menu-item aria-label=\"Forward\">\n                    <mat-icon>forward</mat-icon>\n                    <span>Forward</span>\n                </button>\n\n                <button mat-menu-item aria-label=\"Print\">\n                    <mat-icon>print</mat-icon>\n                    <span>Print</span>\n                </button>\n            </mat-menu>\n        </div>\n\n        <div [innerHTML]=\"mail.message\"></div>\n\n    </div>\n\n    <div *ngIf=\"mail.attachments\" class=\"mail-attachments\">\n\n        <div class=\"title\">\n            <span>Attachments</span>\n            ({{mail.attachments.length}})\n        </div>\n\n        <div class=\"attachment-list\" fxLayout=\"row wrap\">\n\n            <div class=\"attachment\" fxLayout=\"column\"\n                 *ngFor=\"let attachment of mail.attachments\">\n\n                <img class=\"preview\" src=\"{{attachment.preview}}\">\n\n                <div fxLayout=\"column\">\n                    <a href=\"#\" onclick=\"event.preventDefault()\">View</a>\n                    <a href=\"#\" onclick=\"event.preventDefault()\">Download</a>\n                    <div class=\"size\">({{attachment.size}})</div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector     : 'mail-compose',\n    templateUrl  : './compose.component.html',\n    styleUrls    : ['./compose.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MailComposeDialogComponent\n{\n    showExtraToFields: boolean;\n    composeForm: FormGroup;\n\n    /**\n     * Constructor\n     *\n     * @param {MatDialogRef<MailComposeDialogComponent>} matDialogRef\n     * @param _data\n     */\n    constructor(\n        public matDialogRef: MatDialogRef<MailComposeDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: any\n    )\n    {\n        // Set the defaults\n        this.composeForm = this.createComposeForm();\n        this.showExtraToFields = false;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Create compose form\n     *\n     * @returns {FormGroup}\n     */\n    createComposeForm(): FormGroup\n    {\n        return new FormGroup({\n            from   : new FormControl({\n                value   : 'johndoe@creapond.com',\n                disabled: true\n            }),\n            to     : new FormControl(''),\n            cc     : new FormControl(''),\n            bcc    : new FormControl(''),\n            subject: new FormControl(''),\n            message: new FormControl('')\n        });\n    }\n\n    /**\n     * Toggle extra to fields\n     */\n    toggleExtraToFields(): void\n    {\n        this.showExtraToFields = !this.showExtraToFields;\n    }\n}\n","<div class=\"dialog-content-wrapper\">\n    <mat-toolbar class=\"mat-accent m-0\">\n        <mat-toolbar-row fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n            <span class=\"title dialog-title\">New Message</span>\n            <button mat-icon-button (click)=\"matDialogRef.close()\" aria-label=\"Close dialog\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div mat-dialog-content class=\"p-24 m-0\" fusePerfectScrollbar>\n\n        <form name=\"composeForm\" [formGroup]=\"composeForm\" class=\"compose-form\" fxLayout=\"column\" fxFlex>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>From</mat-label>\n                <input matInput name=\"from\"\n                       formControlName=\"from\"\n                       type=\"email\">\n            </mat-form-field>\n\n            <div class=\"show-hide-extra-fields\" (click)=\"toggleExtraToFields()\">\n                <span [fxShow]=\"!showExtraToFields\">Show CC & BCC</span>\n                <span [fxShow]=\"showExtraToFields\">Hide CC & BCC</span>\n            </div>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>To</mat-label>\n                <input matInput name=\"to\"\n                       formControlName=\"to\"\n                       type=\"email\" required>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" [fxShow]=\"showExtraToFields\">\n                <mat-label>Cc</mat-label>\n                <input matInput\n                       name=\"cc\"\n                       formControlName=\"cc\"\n                       type=\"email\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" [fxShow]=\"showExtraToFields\">\n                <mat-label>Bcc</mat-label>\n                <input matInput\n                       name=\"bcc\"\n                       formControlName=\"bcc\"\n                       type=\"email\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Subject</mat-label>\n                <input matInput name=\"subject\"\n                       formControlName=\"subject\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Message</mat-label>\n                <textarea matInput name=\"message\"\n                          formControlName=\"message\"\n                          rows=\"6\">\n                </textarea>\n            </mat-form-field>\n\n            <div class=\"attachment-list\">\n\n                <div class=\"attachment\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                    <div>\n                        <span class=\"filename\">attachment-2.doc</span>\n                        <span class=\"size ml-4\">(12 Kb)</span>\n                    </div>\n\n                    <button mat-icon-button aria-label=\"Delete attachment\">\n                        <mat-icon class=\"s-16\">close</mat-icon>\n                    </button>\n                </div>\n\n                <div class=\"attachment\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                    <div>\n                        <span class=\"filename\">attachment-1.jpg</span>\n                        <span class=\"size ml-4\">(350 Kb)</span>\n                    </div>\n\n                    <button mat-icon-button aria-label=\"Delete attachment\">\n                        <mat-icon class=\"s-16\">close</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <div mat-dialog-actions class=\"m-0 p-16\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div>\n            <button mat-raised-button\n                    color=\"accent\"\n                    (click)=\"matDialogRef.close(['send',composeForm])\"\n                    class=\"save-button\"\n                    [disabled]=\"composeForm.invalid\"\n                    aria-label=\"SAVE\">\n                SEND\n            </button>\n\n            <button mat-icon-button matTooltip=\"Attach a file\">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n        </div>\n\n        <button mat-icon-button (click)=\"matDialogRef.close(['delete',composeForm])\"\n                aria-label=\"Delete\"\n                matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n        </button>\n    </div>\n</div>\n"]}
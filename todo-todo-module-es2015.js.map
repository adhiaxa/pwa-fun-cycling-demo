{"version":3,"sources":["./src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.ts","./src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.html","./src/app/main/apps/todo/sidebars/main/main-sidebar.component.ts","./src/app/main/apps/todo/sidebars/main/main-sidebar.component.html","./src/app/main/apps/todo/todo.service.ts","./src/app/main/apps/todo/todo-list/todo-list.component.ts","./src/app/main/apps/todo/todo-list/todo-list.component.html","./src/app/main/apps/todo/todo.component.ts","./src/app/main/apps/todo/todo.component.html","./src/app/main/apps/todo/todo.model.ts","./src/app/main/apps/todo/todo.module.ts","./src/app/main/apps/todo/todo-details/todo-details.component.ts","./src/app/main/apps/todo/todo-details/todo-details.component.html"],"names":[],"mappings":"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","file":"todo-todo-module-es2015.js","sourcesContent":["import { Component, HostBinding, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { Todo } from 'app/main/apps/todo/todo.model';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector     : 'todo-list-item',\n    templateUrl  : './todo-list-item.component.html',\n    styleUrls    : ['./todo-list-item.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TodoListItemComponent implements OnInit, OnDestroy\n{\n    tags: any[];\n\n    @Input()\n    todo: Todo;\n\n    @HostBinding('class.selected')\n    selected: boolean;\n\n    @HostBinding('class.completed')\n    completed: boolean;\n\n    @HostBinding('class.move-disabled')\n    moveDisabled: boolean;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {TodoService} _todoService\n     * @param {ActivatedRoute} _activatedRoute\n     */\n    constructor(\n        private _todoService: TodoService,\n        private _activatedRoute: ActivatedRoute\n    )\n    {\n        // Disable move if path is not /all\n        if ( _activatedRoute.snapshot.url[0].path !== 'all' )\n        {\n            this.moveDisabled = true;\n        }\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Set the initial values\n        this.todo = new Todo(this.todo);\n        this.completed = this.todo.completed;\n\n        // Subscribe to update on selected todo change\n        this._todoService.onSelectedTodosChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedTodos => {\n                this.selected = false;\n\n                if ( selectedTodos.length > 0 )\n                {\n                    for ( const todo of selectedTodos )\n                    {\n                        if ( todo.id === this.todo.id )\n                        {\n                            this.selected = true;\n                            break;\n                        }\n                    }\n                }\n            });\n\n        // Subscribe to update on tag change\n        this._todoService.onTagsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(tags => {\n                this.tags = tags;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On selected change\n     */\n    onSelectedChange(): void\n    {\n        this._todoService.toggleSelectedTodo(this.todo.id);\n    }\n\n    /**\n     * Toggle star\n     */\n    toggleStar(event): void\n    {\n        event.stopPropagation();\n\n        this.todo.toggleStar();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle Important\n     */\n    toggleImportant(event): void\n    {\n        event.stopPropagation();\n\n        this.todo.toggleImportant();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle Completed\n     */\n    toggleCompleted(event): void\n    {\n        event.stopPropagation();\n\n        this.todo.toggleCompleted();\n        this._todoService.updateTodo(this.todo);\n    }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n    <mat-icon class=\"handle mr-16\" ngxDragHandle fxFlex=\"0 1 auto\" fxHide.xs>\n        drag_handle\n    </mat-icon>\n\n    <mat-checkbox [(ngModel)]=\"selected\" (ngModelChange)=\"onSelectedChange()\"\n                  class=\"mr-16\" fxFlex=\"0 1 auto\" (click)=\"$event.stopPropagation()\">\n    </mat-checkbox>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex>\n\n        <div class=\"info\" fxFlex fxFlexLayout=\"column\">\n\n            <div class=\"title\">\n                {{todo.title}}\n            </div>\n\n            <div class=\"notes\">\n                {{todo.notes}}\n            </div>\n\n            <div class=\"tags\" fxLayout=\"row wrap\" fxLayoutAlign=\"start center\">\n\n                <div class=\"tag\" fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngFor=\"let tagId of todo.tags\">\n                    <div class=\"tag-color\" [ngStyle]=\"{'background-color': tags | getById:tagId:'color'}\"></div>\n                    <div class=\"tag-label\">{{tags | getById:tagId:'title'}}</div>\n                </div>\n\n            </div>\n\n        </div>\n\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <button mat-icon-button (click)=\"toggleImportant($event)\"\n                    aria-label=\"Toggle important\" fxHide.xs>\n                <mat-icon class=\"red-fg\" *ngIf=\"todo.important\">error</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.important\">error_outline</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)=\"toggleStar($event)\"\n                    aria-label=\"Toggle star\" fxHide.xs>\n                <mat-icon class=\"amber-fg\" *ngIf=\"todo.starred\">star</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.starred\">star_border</mat-icon>\n            </button>\n\n            <button mat-icon-button [matMenuTriggerFor]=\"moreMenu\" aria-label=\"More\" (click)=\"$event.stopPropagation()\"\n                    fxHide.xs>\n                <mat-icon class=\"secondary-text\">more_vert</mat-icon>\n            </button>\n\n            <mat-menu #moreMenu=\"matMenu\">\n                <button mat-menu-item aria-label=\"toggle done\" (click)=\"toggleCompleted($event)\">\n                    <ng-container *ngIf=\"todo.completed\">\n                        <mat-icon>check_box</mat-icon>\n                        <span>Mark as undone</span>\n                    </ng-container>\n                    <ng-container *ngIf=\"!todo.completed\">\n                        <mat-icon>check_box_outline_blank</mat-icon>\n                        <span>Mark as done</span>\n                    </ng-container>\n                </button>\n\n                <button mat-menu-item aria-label=\"toggle important\" (click)=\"toggleImportant($event)\">\n                    <ng-container *ngIf=\"todo.important\">\n                        <mat-icon>error</mat-icon>\n                        <span>Remove important</span>\n                    </ng-container>\n                    <ng-container *ngIf=\"!todo.important\">\n                        <mat-icon>error_outline</mat-icon>\n                        <span>Mark as important</span>\n                    </ng-container>\n                </button>\n\n                <button mat-menu-item aria-label=\"toggle star\" (click)=\"toggleStar($event)\">\n                    <ng-container *ngIf=\"todo.starred\">\n                        <mat-icon>star</mat-icon>\n                        <span>Remove star</span>\n                    </ng-container>\n                    <ng-container *ngIf=\"!todo.starred\">\n                        <mat-icon>star_border</mat-icon>\n                        <span>Add star</span>\n                    </ng-container>\n                </button>\n            </mat-menu>\n\n        </div>\n\n    </div>\n\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { TodoService } from 'app/main/apps/todo/todo.service';\n\n@Component({\n    selector     : 'todo-main-sidebar',\n    templateUrl  : './main-sidebar.component.html',\n    styleUrls    : ['./main-sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class TodoMainSidebarComponent implements OnInit, OnDestroy\n{\n    folders: any[];\n    filters: any[];\n    tags: any[];\n    accounts: object;\n    selectedAccount: string;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {TodoService} _todoService\n     * @param {Router} _router\n     */\n    constructor(\n        private _todoService: TodoService,\n        private _router: Router\n    )\n    {\n        // Set the defaults\n        this.accounts = {\n            creapond    : 'johndoe@creapond.com',\n            withinpixels: 'johndoe@withinpixels.com'\n        };\n        this.selectedAccount = 'creapond';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._todoService.onFiltersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(filters => {\n                this.filters = filters;\n            });\n\n        this._todoService.onTagsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(tags => {\n                this.tags = tags;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * New todo\n     */\n    newTodo(): void\n    {\n        this._router.navigate(['/apps/todo/all']).then(() => {\n            setTimeout(() => {\n                this._todoService.onNewTodoClicked.next('');\n            });\n        });\n    }\n}\n","<!-- SIDEBAR HEADER -->\n<div fxLayout=\"column\" fxLayoutAlign=\"space-between start\"\n     class=\"header accent p-24 pb-4\">\n    <div class=\"logo\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <mat-icon class=\"logo-icon s-32\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n            check_box\n        </mat-icon>\n        <span class=\"logo-text\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">To-Do</span>\n    </div>\n\n    <div class=\"account\" fxLayout=\"column\" [@animate]=\"{value:'*',params:{delay:'300ms'}}\">\n        <div class=\"title\">John Doe</div>\n        <mat-form-field floatLabel=\"never\">\n            <mat-select class=\"account-selection\" placeholder=\"Todo Selection\"\n                        [ngModel]=\"selectedAccount\">\n                <mat-option *ngFor=\"let account of (accounts | keys)\" [value]=\"account.key\">\n                    {{account.value}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n</div>\n<!-- / SIDEBAR HEADER -->\n\n<!-- SIDEBAR CONTENT -->\n<div class=\"content\" fusePerfectScrollbar [@animate]=\"{value:'*',params:{y:'50px'}}\">\n\n    <div class=\"p-24\">\n        <button mat-raised-button\n                class=\"mat-accent add-todo-button w-100-p\"\n                (click)=\"newTodo()\"\n                aria-label=\"ADD TASK\">\n            ADD TASK\n        </button>\n    </div>\n\n    <div class=\"nav material2\">\n\n        <div class=\"nav-item\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/all'\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\">view_headline</mat-icon>\n                <span>All</span>\n            </a>\n        </div>\n\n        <div class=\"nav-subheader\">FILTERS</div>\n\n        <div class=\"nav-item\" *ngFor=\"let filter of filters\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/filter/' + filter.handle\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\" *ngIf=\"filter.icon\">{{filter.icon}}</mat-icon>\n                <span>{{filter.title}}</span>\n            </a>\n        </div>\n\n        <div class=\"nav-subheader\">TAGS</div>\n\n        <div class=\"nav-item\" *ngFor=\"let tag of tags\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/tag/' + tag.handle\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\" [ngStyle]=\"{'color':tag.color}\">label</mat-icon>\n                <span>{{tag.title}}</span>\n            </a>\n        </div>\n\n    </div>\n\n</div>\n<!-- / SIDEBAR CONTENT -->\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { FuseUtils } from '@fuse/utils';\n\nimport { Todo } from 'app/main/apps/todo/todo.model';\n\n@Injectable()\nexport class TodoService implements Resolve<any>\n{\n    todos: Todo[];\n    selectedTodos: Todo[];\n    currentTodo: Todo;\n    searchText: string;\n    filters: any[];\n    tags: any[];\n    routeParams: any;\n\n    onTodosChanged: BehaviorSubject<any>;\n    onSelectedTodosChanged: BehaviorSubject<any>;\n    onCurrentTodoChanged: BehaviorSubject<any>;\n    onFiltersChanged: BehaviorSubject<any>;\n    onTagsChanged: BehaviorSubject<any>;\n    onSearchTextChanged: BehaviorSubject<any>;\n    onNewTodoClicked: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     * @param {Location} _location\n     */\n    constructor(\n        private _httpClient: HttpClient,\n        private _location: Location\n    )\n    {\n        // Set the defaults\n        this.selectedTodos = [];\n        this.searchText = '';\n        this.onTodosChanged = new BehaviorSubject([]);\n        this.onSelectedTodosChanged = new BehaviorSubject([]);\n        this.onCurrentTodoChanged = new BehaviorSubject([]);\n        this.onFiltersChanged = new BehaviorSubject([]);\n        this.onTagsChanged = new BehaviorSubject([]);\n        this.onSearchTextChanged = new BehaviorSubject('');\n        this.onNewTodoClicked = new Subject();\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        this.routeParams = route.params;\n\n        return new Promise((resolve, reject) => {\n\n            Promise.all([\n                this.getFilters(),\n                this.getTags(),\n                this.getTodos()\n            ]).then(\n                () => {\n                    if ( this.routeParams.todoId )\n                    {\n                        this.setCurrentTodo(this.routeParams.todoId);\n                    }\n                    else\n                    {\n                        this.setCurrentTodo(null);\n                    }\n\n                    this.onSearchTextChanged.subscribe(searchText => {\n                        if ( searchText !== '' )\n                        {\n                            this.searchText = searchText;\n                            this.getTodos();\n                        }\n                        else\n                        {\n                            this.searchText = searchText;\n                            this.getTodos();\n                        }\n                    });\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get all filters\n     *\n     * @returns {Promise<any>}\n     */\n    getFilters(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/todo-filters')\n                .subscribe((response: any) => {\n                    this.filters = response;\n                    this.onFiltersChanged.next(this.filters);\n                    resolve(this.filters);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get all tags\n     *\n     * @returns {Promise<any>}\n     */\n    getTags(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/todo-tags')\n                .subscribe((response: any) => {\n                    this.tags = response;\n                    this.onTagsChanged.next(this.tags);\n                    resolve(this.tags);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get todos\n     *\n     * @returns {Promise<Todo[]>}\n     */\n    getTodos(): Promise<Todo[]>\n    {\n        if ( this.routeParams.tagHandle )\n        {\n            return this.getTodosByTag(this.routeParams.tagHandle);\n        }\n\n        if ( this.routeParams.filterHandle )\n        {\n            return this.getTodosByFilter(this.routeParams.filterHandle);\n        }\n\n        return this.getTodosByParams(this.routeParams);\n    }\n\n    /**\n     * Get todos by params\n     *\n     * @param handle\n     * @returns {Promise<Todo[]>}\n     */\n    getTodosByParams(handle): Promise<Todo[]>\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.get('api/todo-todos')\n                .subscribe((todos: any) => {\n                    this.todos = todos.map(todo => {\n                        return new Todo(todo);\n                    });\n\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\n\n                    this.onTodosChanged.next(this.todos);\n\n                    resolve(this.todos);\n                });\n        });\n    }\n\n    /**\n     * Get todos by filter\n     *\n     * @param handle\n     * @returns {Promise<Todo[]>}\n     */\n    getTodosByFilter(handle): Promise<Todo[]>\n    {\n\n        let param = handle + '=true';\n\n        if ( handle === 'dueDate' )\n        {\n            param = handle + '=^$|\\\\s+';\n        }\n\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.get('api/todo-todos?' + param)\n                .subscribe((todos: any) => {\n\n                    this.todos = todos.map(todo => {\n                        return new Todo(todo);\n                    });\n\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\n\n                    this.onTodosChanged.next(this.todos);\n\n                    resolve(this.todos);\n\n                }, reject);\n        });\n    }\n\n    /**\n     * Get todos by tag\n     *\n     * @param handle\n     * @returns {Promise<Todo[]>}\n     */\n    getTodosByTag(handle): Promise<Todo[]>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/todo-tags?handle=' + handle)\n                .subscribe((tags: any) => {\n\n                    const tagId = tags[0].id;\n\n                    this._httpClient.get('api/todo-todos?tags=' + tagId)\n                        .subscribe((todos: any) => {\n\n                            this.todos = todos.map(todo => {\n                                return new Todo(todo);\n                            });\n\n                            this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\n\n                            this.onTodosChanged.next(this.todos);\n\n                            resolve(this.todos);\n\n                        }, reject);\n                });\n        });\n    }\n\n    /**\n     * Toggle selected todo by id\n     *\n     * @param id\n     */\n    toggleSelectedTodo(id): void\n    {\n        // First, check if we already have that todo as selected...\n        if ( this.selectedTodos.length > 0 )\n        {\n            for ( const todo of this.selectedTodos )\n            {\n                // ...delete the selected todo\n                if ( todo.id === id )\n                {\n                    const index = this.selectedTodos.indexOf(todo);\n\n                    if ( index !== -1 )\n                    {\n                        this.selectedTodos.splice(index, 1);\n\n                        // Trigger the next event\n                        this.onSelectedTodosChanged.next(this.selectedTodos);\n\n                        // Return\n                        return;\n                    }\n                }\n            }\n        }\n\n        // If we don't have it, push as selected\n        this.selectedTodos.push(\n            this.todos.find(todo => {\n                return todo.id === id;\n            })\n        );\n\n        // Trigger the next event\n        this.onSelectedTodosChanged.next(this.selectedTodos);\n    }\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll(): void\n    {\n        if ( this.selectedTodos.length > 0 )\n        {\n            this.deselectTodos();\n        }\n        else\n        {\n            this.selectTodos();\n        }\n\n    }\n\n    /**\n     * Select todos\n     *\n     * @param filterParameter\n     * @param filterValue\n     */\n    selectTodos(filterParameter?, filterValue?): void\n    {\n        this.selectedTodos = [];\n\n        // If there is no filter, select all todos\n        if ( filterParameter === undefined || filterValue === undefined )\n        {\n            this.selectedTodos = this.todos;\n        }\n        else\n        {\n            this.selectedTodos.push(...\n                this.todos.filter(todo => {\n                    return todo[filterParameter] === filterValue;\n                })\n            );\n        }\n\n        // Trigger the next event\n        this.onSelectedTodosChanged.next(this.selectedTodos);\n    }\n\n    /**\n     * Deselect todos\n     */\n    deselectTodos(): void\n    {\n        this.selectedTodos = [];\n\n        // Trigger the next event\n        this.onSelectedTodosChanged.next(this.selectedTodos);\n    }\n\n    /**\n     * Set current todo by id\n     *\n     * @param id\n     */\n    setCurrentTodo(id): void\n    {\n        this.currentTodo = this.todos.find(todo => {\n            return todo.id === id;\n        });\n\n        this.onCurrentTodoChanged.next([this.currentTodo, 'edit']);\n\n        const tagHandle    = this.routeParams.tagHandle,\n              filterHandle = this.routeParams.filterHandle;\n\n        if ( tagHandle )\n        {\n            this._location.go('apps/todo/tag/' + tagHandle + '/' + id);\n        }\n        else if ( filterHandle )\n        {\n            this._location.go('apps/todo/filter/' + filterHandle + '/' + id);\n        }\n        else\n        {\n            this._location.go('apps/todo/all/' + id);\n        }\n    }\n\n    /**\n     * Toggle tag on selected todos\n     *\n     * @param tagId\n     */\n    toggleTagOnSelectedTodos(tagId): void\n    {\n        this.selectedTodos.map(todo => {\n            this.toggleTagOnTodo(tagId, todo);\n        });\n    }\n\n    /**\n     * Toggle tag on todo\n     *\n     * @param tagId\n     * @param todo\n     */\n    toggleTagOnTodo(tagId, todo): void\n    {\n        const index = todo.tags.indexOf(tagId);\n\n        if ( index !== -1 )\n        {\n            todo.tags.splice(index, 1);\n        }\n        else\n        {\n            todo.tags.push(tagId);\n        }\n\n        this.updateTodo(todo);\n    }\n\n    /**\n     * Has tag?\n     *\n     * @param tagId\n     * @param todo\n     * @returns {boolean}\n     */\n    hasTag(tagId, todo): any\n    {\n        if ( !todo.tags )\n        {\n            return false;\n        }\n\n        return todo.tags.indexOf(tagId) !== -1;\n    }\n\n    /**\n     * Update the todo\n     *\n     * @param todo\n     * @returns {Promise<any>}\n     */\n    updateTodo(todo): any\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.post('api/todo-todos/' + todo.id, {...todo})\n                .subscribe(response => {\n\n                    this.getTodos().then(todos => {\n\n                        resolve(todos);\n\n                    }, reject);\n                });\n        });\n    }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { Todo } from 'app/main/apps/todo/todo.model';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector     : 'todo-list',\n    templateUrl  : './todo-list.component.html',\n    styleUrls    : ['./todo-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class TodoListComponent implements OnInit, OnDestroy\n{\n    todos: Todo[];\n    currentTodo: Todo;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ActivatedRoute} _activatedRoute\n     * @param {TodoService} _todoService\n     * @param {Location} _location\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _todoService: TodoService,\n        private _location: Location\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update todos on changes\n        this._todoService.onTodosChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(todos => {\n                this.todos = todos;\n            });\n\n        // Subscribe to update current todo on changes\n        this._todoService.onCurrentTodoChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(currentTodo => {\n                if ( !currentTodo )\n                {\n                    // Set the current todo id to null to deselect the current todo\n                    this.currentTodo = null;\n\n                    // Handle the location changes\n                    const tagHandle    = this._activatedRoute.snapshot.params.tagHandle,\n                          filterHandle = this._activatedRoute.snapshot.params.filterHandle;\n\n                    if ( tagHandle )\n                    {\n                        this._location.go('apps/todo/tag/' + tagHandle);\n                    }\n                    else if ( filterHandle )\n                    {\n                        this._location.go('apps/todo/filter/' + filterHandle);\n                    }\n                    else\n                    {\n                        this._location.go('apps/todo/all');\n                    }\n                }\n                else\n                {\n                    this.currentTodo = currentTodo;\n                }\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Read todo\n     *\n     * @param todoId\n     */\n    readTodo(todoId): void\n    {\n        // Set current todo\n        this._todoService.setCurrentTodo(todoId);\n    }\n\n    /**\n     * On drop\n     *\n     * @param ev\n     */\n    onDrop(ev): void\n    {\n\n    }\n}\n","<div *ngIf=\"todos.length === 0\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlexFill>\n    <span class=\"no-todos-text hint-text\">There are no todos!</span>\n</div>\n<div class=\"todo-list\" ngxDroppable [model]=\"todos\" (out)=\"onDrop($event)\" [@animateStagger]=\"{value:'50'}\">\n    <todo-list-item class=\"todo-list-item has-handle\"\n                    *ngFor=\"let todo of todos\" [todo]=\"todo\"\n                    ngxDraggable\n                    [model]=\"todo\"\n                    (click)=\"readTodo(todo.id)\"\n                    [ngClass]=\"{'current-todo':todo?.id == currentTodo?.id}\"\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\n    </todo-list-item>\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\n\nimport { Todo } from 'app/main/apps/todo/todo.model';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\n\n@Component({\n    selector     : 'todo',\n    templateUrl  : './todo.component.html',\n    styleUrls    : ['./todo.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class TodoComponent implements OnInit, OnDestroy\n{\n    hasSelectedTodos: boolean;\n    isIndeterminate: boolean;\n    filters: any[];\n    tags: any[];\n    searchInput: FormControl;\n    currentTodo: Todo;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {FuseSidebarService} _fuseSidebarService\n     * @param {TodoService} _todoService\n     */\n    constructor(\n        private _fuseSidebarService: FuseSidebarService,\n        private _todoService: TodoService\n    )\n    {\n        // Set the defaults\n        this.searchInput = new FormControl('');\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._todoService.onSelectedTodosChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedTodos => {\n\n                setTimeout(() => {\n                    this.hasSelectedTodos = selectedTodos.length > 0;\n                    this.isIndeterminate = (selectedTodos.length !== this._todoService.todos.length && selectedTodos.length > 0);\n                }, 0);\n            });\n\n        this._todoService.onFiltersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(folders => {\n                this.filters = this._todoService.filters;\n            });\n\n        this._todoService.onTagsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(tags => {\n                this.tags = this._todoService.tags;\n            });\n\n        this.searchInput.valueChanges\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                debounceTime(300),\n                distinctUntilChanged()\n            )\n            .subscribe(searchText => {\n                this._todoService.onSearchTextChanged.next(searchText);\n            });\n\n        this._todoService.onCurrentTodoChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(([currentTodo, formType]) => {\n                if ( !currentTodo )\n                {\n                    this.currentTodo = null;\n                }\n                else\n                {\n                    this.currentTodo = currentTodo;\n                }\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Deselect current todo\n     */\n    deselectCurrentTodo(): void\n    {\n        this._todoService.onCurrentTodoChanged.next([null, null]);\n    }\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll(): void\n    {\n        this._todoService.toggleSelectAll();\n    }\n\n    /**\n     * Select todos\n     *\n     * @param filterParameter\n     * @param filterValue\n     */\n    selectTodos(filterParameter?, filterValue?): void\n    {\n        this._todoService.selectTodos(filterParameter, filterValue);\n    }\n\n    /**\n     * Deselect todos\n     */\n    deselectTodos(): void\n    {\n        this._todoService.deselectTodos();\n    }\n\n    /**\n     * Toggle tag on selected todos\n     *\n     * @param tagId\n     */\n    toggleTagOnSelectedTodos(tagId): void\n    {\n        this._todoService.toggleTagOnSelectedTodos(tagId);\n    }\n\n    /**\n     * Toggle the sidebar\n     *\n     * @param name\n     */\n    toggleSidebar(name): void\n    {\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\n    }\n}\n","<div id=\"todo\" class=\"page-layout carded left-sidebar inner-scroll\">\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n\n    <!-- SIDEBAR -->\n    <fuse-sidebar class=\"sidebar\" name=\"todo-main-sidebar\" position=\"left\" lockedOpen=\"gt-md\">\n        <todo-main-sidebar></todo-main-sidebar>\n    </fuse-sidebar>\n    <!-- / SIDEBAR -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- CONTENT HEADER -->\n        <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <div class=\"search-wrapper\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <button mat-icon-button class=\"sidebar-toggle\" fxHide.gt-md\n                        (click)=\"toggleSidebar('todo-main-sidebar')\">\n                    <mat-icon>menu</mat-icon>\n                </button>\n\n                <div class=\"search\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"secondary-text\">search</mat-icon>\n                    <input [formControl]=\"searchInput\" placeholder=\"Search for a task\" fxFlex>\n                </div>\n\n            </div>\n\n        </div>\n        <!-- / CONTENT HEADER -->\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card\" [ngClass]=\"{'current-todo-selected':currentTodo}\">\n\n            <!-- CONTENT TOOLBAR -->\n            <div class=\"toolbar px-24 py-8\">\n\n                <div class=\"todo-selection\" fxFlex=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-checkbox (click)=\"toggleSelectAll()\" [checked]=\"hasSelectedTodos\"\n                                  [indeterminate]=\"isIndeterminate\"></mat-checkbox>\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"selectMenu\">\n                        <mat-icon>arrow_drop_down</mat-icon>\n                    </button>\n                    <mat-menu #selectMenu=\"matMenu\">\n                        <button mat-menu-item (click)=\"selectTodos()\">All</button>\n                        <button mat-menu-item (click)=\"deselectTodos()\">None</button>\n                        <button mat-menu-item (click)=\"selectTodos('read', true)\">Read</button>\n                        <button mat-menu-item (click)=\"selectTodos('read', false)\">Unread</button>\n                        <button mat-menu-item (click)=\"selectTodos('starred', true)\">Starred</button>\n                        <button mat-menu-item (click)=\"selectTodos('starred', false)\">Unstarred</button>\n                        <button mat-menu-item (click)=\"selectTodos('important', true)\">Important</button>\n                        <button mat-menu-item (click)=\"selectTodos('important', false)\">Unimportant</button>\n                    </mat-menu>\n\n                    <div class=\"toolbar-separator\" *ngIf=\"hasSelectedTodos\"></div>\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" *ngIf=\"hasSelectedTodos\">\n                        <mat-icon class=\"secondary-text\">label</mat-icon>\n                    </button>\n                    <mat-menu #labelMenu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let tag of tags\" (click)=\"toggleTagOnSelectedTodos(tag.id)\">\n                            {{tag.title}}\n                        </button>\n                    </mat-menu>\n                </div>\n\n                <div *ngIf=\"currentTodo\" fxHide.gt-lg>\n                    <button mat-icon-button (click)=\"deselectCurrentTodo()\">\n                        <mat-icon class=\"secondary-text\">arrow_back</mat-icon>\n                    </button>\n                </div>\n\n            </div>\n            <!-- / CONTENT TOOLBAR -->\n\n            <!-- CONTENT -->\n            <div class=\"content\" fxFlexAlign=\"row\">\n                <todo-list fusePerfectScrollbar fxFlex></todo-list>\n                <todo-details fusePerfectScrollbar fxFlex></todo-details>\n            </div>\n            <!-- / CONTENT -->\n\n        </div>\n        <!-- / CONTENT CARD -->\n\n    </div>\n    <!-- / CENTER -->\n\n</div>\n","export class Todo\n{\n    id: string;\n    title: string;\n    notes: string;\n    startDate: string;\n    dueDate: boolean;\n    completed: boolean;\n    starred: boolean;\n    important: boolean;\n    deleted: boolean;\n    tags: [\n        {\n            'id': number,\n            'name': string,\n            'label': string,\n            'color': string\n        }\n        ];\n\n    /**\n     * Constructor\n     *\n     * @param todo\n     */\n    constructor(todo)\n    {\n        {\n            this.id = todo.id;\n            this.title = todo.title;\n            this.notes = todo.notes;\n            this.startDate = todo.startDate;\n            this.dueDate = todo.dueDate;\n            this.completed = todo.completed;\n            this.starred = todo.starred;\n            this.important = todo.important;\n            this.deleted = todo.deleted;\n            this.tags = todo.tags || [];\n        }\n    }\n\n    /**\n     * Toggle star\n     */\n    toggleStar(): void\n    {\n        this.starred = !this.starred;\n    }\n\n    /**\n     * Toggle important\n     */\n    toggleImportant(): void\n    {\n        this.important = !this.important;\n    }\n\n    /**\n     * Toggle completed\n     */\n    toggleCompleted(): void\n    {\n        this.completed = !this.completed;\n    }\n\n    /**\n     * Toggle deleted\n     */\n    toggleDeleted(): void\n    {\n        this.deleted = !this.deleted;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgxDnDModule } from '@swimlane/ngx-dnd';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseSidebarModule } from '@fuse/components';\n\nimport { TodoService } from 'app/main/apps/todo/todo.service';\nimport { TodoComponent } from 'app/main/apps/todo/todo.component';\nimport { TodoMainSidebarComponent } from 'app/main/apps/todo/sidebars/main/main-sidebar.component';\nimport { TodoListItemComponent } from 'app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component';\nimport { TodoListComponent } from 'app/main/apps/todo/todo-list/todo-list.component';\nimport { TodoDetailsComponent } from 'app/main/apps/todo/todo-details/todo-details.component';\n\nconst routes: Routes = [\n    {\n        path     : 'all',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'all/:todoId',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'tag/:tagHandle',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'tag/:tagHandle/:todoId',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'filter/:filterHandle',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'filter/:filterHandle/:todoId',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path      : '**',\n        redirectTo: 'all'\n    }\n];\n\n@NgModule({\n    declarations: [\n        TodoComponent,\n        TodoMainSidebarComponent,\n        TodoListItemComponent,\n        TodoListComponent,\n        TodoDetailsComponent\n    ],\n    imports     : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatMenuModule,\n        MatRippleModule,\n        MatSelectModule,\n\n        NgxDnDModule,\n\n        FuseSharedModule,\n        FuseSidebarModule\n    ],\n    providers   : [\n        TodoService\n    ]\n})\nexport class TodoModule\n{\n}\n","import { Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { FuseUtils } from '@fuse/utils';\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { Todo } from 'app/main/apps/todo/todo.model';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\n\n@Component({\n    selector     : 'todo-details',\n    templateUrl  : './todo-details.component.html',\n    styleUrls    : ['./todo-details.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class TodoDetailsComponent implements OnInit, OnDestroy\n{\n    todo: Todo;\n    tags: any[];\n    formType: string;\n    todoForm: FormGroup;\n\n    @ViewChild('titleInput')\n    titleInputField;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {TodoService} _todoService\n     * @param {FormBuilder} _formBuilder\n     */\n    constructor(\n        private _todoService: TodoService,\n        private _formBuilder: FormBuilder\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update the current todo\n        this._todoService.onCurrentTodoChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(([todo, formType]) => {\n\n                if ( todo && formType === 'edit' )\n                {\n                    this.formType = 'edit';\n                    this.todo = todo;\n                    this.todoForm = this.createTodoForm();\n\n                    this.todoForm.valueChanges\n                        .pipe(\n                            takeUntil(this._unsubscribeAll),\n                            debounceTime(500),\n                            distinctUntilChanged()\n                        )\n                        .subscribe(data => {\n                            this._todoService.updateTodo(data);\n                        });\n                }\n            });\n\n        // Subscribe to update on tag change\n        this._todoService.onTagsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.tags = labels;\n            });\n\n        // Subscribe to update on tag change\n        this._todoService.onNewTodoClicked\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(() => {\n                this.todo = new Todo({});\n                this.todo.id = FuseUtils.generateGUID();\n                this.formType = 'new';\n                this.todoForm = this.createTodoForm();\n                this.focusTitleField();\n                this._todoService.onCurrentTodoChanged.next([this.todo, 'new']);\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Focus title field\n     */\n    focusTitleField(): void\n    {\n        setTimeout(() => {\n            this.titleInputField.nativeElement.focus();\n        });\n    }\n\n    /**\n     * Create todo form\n     *\n     * @returns {FormGroup}\n     */\n    createTodoForm(): FormGroup\n    {\n        return this._formBuilder.group({\n            id       : [this.todo.id],\n            title    : [this.todo.title],\n            notes    : [this.todo.notes],\n            startDate: [this.todo.startDate],\n            dueDate  : [this.todo.dueDate],\n            completed: [this.todo.completed],\n            starred  : [this.todo.starred],\n            important: [this.todo.important],\n            deleted  : [this.todo.deleted],\n            tags     : [this.todo.tags]\n        });\n    }\n\n    /**\n     * Toggle star\n     *\n     * @param event\n     */\n    toggleStar(event): void\n    {\n        event.stopPropagation();\n        this.todo.toggleStar();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle important\n     *\n     * @param event\n     */\n    toggleImportant(event): void\n    {\n        event.stopPropagation();\n        this.todo.toggleImportant();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle Completed\n     *\n     * @param event\n     */\n    toggleCompleted(event): void\n    {\n        event.stopPropagation();\n        this.todo.toggleCompleted();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle Deleted\n     *\n     * @param event\n     */\n    toggleDeleted(event): void\n    {\n        event.stopPropagation();\n        this.todo.toggleDeleted();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle tag on todo\n     *\n     * @param tagId\n     */\n    toggleTagOnTodo(tagId): void\n    {\n        this._todoService.toggleTagOnTodo(tagId, this.todo);\n    }\n\n    /**\n     * Has tag?\n     *\n     * @param tagId\n     * @returns {any}\n     */\n    hasTag(tagId): any\n    {\n        return this._todoService.hasTag(tagId, this.todo);\n    }\n\n    /**\n     * Add todo\n     */\n    addTodo(): void\n    {\n        this._todoService.updateTodo(this.todoForm.getRawValue());\n    }\n}\n","<div *ngIf=\"!todo\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex>\n    <mat-icon class=\"s-120 mb-12 select-todo-icon hint-text\"\n              [@animate]=\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\">check_box\n    </mat-icon>\n    <span class=\"hint-text mat-h1 select-todo-text\" [@animate]=\"{value:'*',params:{delay:'400ms'}}\">\n        Select a todo\n    </span>\n</div>\n\n<div *ngIf=\"todo\">\n\n    <div class=\"todo-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n        <button mat-button class=\"toggle-complete-button\" (click)=\"toggleCompleted($event)\"\n                aria-label=\"Toggle completed\" fxFlex=\"0 1 auto\">\n            <mat-icon *ngIf=\"todo.completed\">check_box</mat-icon>\n            <mat-icon *ngIf=\"!todo.completed\">check_box_outline_blank</mat-icon>\n            <span class=\"ml-8\">Mark as Done</span>\n        </button>\n\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <button mat-icon-button (click)=\"toggleImportant($event)\" aria-label=\"Toggle important\">\n                <mat-icon class=\"red-fg\" *ngIf=\"todo.important\">error</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.important\">error_outline</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)=\"toggleStar($event)\" aria-label=\"Toggle star\">\n                <mat-icon class=\"amber-fg\" *ngIf=\"todo.starred\">star</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.starred\">star_border</mat-icon>\n            </button>\n\n            <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" fxFlex=\"0 1 auto\">\n                <mat-icon class=\"secondary-text\">label</mat-icon>\n            </button>\n\n            <mat-menu #labelMenu=\"matMenu\">\n                <button mat-menu-item *ngFor=\"let tag of tags\"\n                        (click)=\"toggleTagOnTodo(tag.id)\">\n                    <mat-icon *ngIf=\"hasTag(tag.id)\">check</mat-icon>\n                    <mat-icon *ngIf=\"!hasTag(tag.id)\"></mat-icon>\n                    <span>{{tag.title}}</span>\n                </button>\n            </mat-menu>\n\n            <button mat-icon-button (click)=\"toggleDeleted($event)\" aria-label=\"Toggle delete\">\n                <mat-icon class=\"secondary-text\" *ngIf=\"todo.deleted\">delete_forever</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.deleted\">delete</mat-icon>\n            </button>\n\n        </div>\n    </div>\n\n    <div class=\"todo-content\">\n\n        <form [formGroup]=\"todoForm\" (submit)=\"addTodo()\">\n\n            <div class=\"tags mb-24\" fxFlexFill fxLayout=\"row wrap\">\n                <div class=\"tag\" fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngFor=\"let tagId of todo.tags\">\n                    <div class=\"tag-color\" [ngStyle]=\"{'background-color': tags | getById:tagId:'color'}\"></div>\n                    <div class=\"tag-label\">{{tags | getById:tagId:'title'}}</div>\n                </div>\n            </div>\n\n            <mat-form-field appearance=\"outline\" class=\"title mt-8\" fxFill>\n                <mat-label>Title</mat-label>\n                <textarea matInput\n                          #titleInput\n                          name=\"title\"\n                          formControlName=\"title\"\n                          required>\n                </textarea>\n            </mat-form-field>\n\n            <div class=\"dates\" fxFlexFill fxLayout=\"column\" fxLayout.gt-xs=\"row\">\n\n                <mat-form-field appearance=\"outline\" class=\"mr-sm-12\" fxFlex>\n                    <mat-label>Start Date</mat-label>\n                    <input matInput [matDatepicker]=\"startDatePicker\">\n                    <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #startDatePicker></mat-datepicker>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" class=\"ml-sm-12\" fxFlex>\n                    <mat-label>Due Date</mat-label>\n                    <input matInput [matDatepicker]=\"dueDatePicker\" placeholder=\"Due Date\">\n                    <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #dueDatePicker></mat-datepicker>\n                </mat-form-field>\n\n            </div>\n\n            <mat-form-field appearance=\"outline\" fxFill>\n                <mat-label>Notes</mat-label>\n                <textarea matInput #notes\n                          name=\"notes\"\n                          formControlName=\"notes\"\n                          maxlength=\"500\">\n                </textarea>\n                <mat-hint align=\"end\">{{notes.value.length}} / 500</mat-hint>\n            </mat-form-field>\n\n            <button *ngIf=\"formType === 'new'\"\n                    mat-raised-button color=\"accent\"\n                    [disabled]=\"todoForm.invalid\">\n                SAVE\n            </button>\n        </form>\n\n    </div>\n</div>\n"],"sourceRoot":"webpack:///"}
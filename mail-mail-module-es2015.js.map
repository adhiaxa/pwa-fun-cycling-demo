{"version":3,"sources":["./src/app/main/apps/mail/sidebars/main/main-sidebar.component.ts","./src/app/main/apps/mail/sidebars/main/main-sidebar.component.html","./src/app/main/apps/mail/mail-list/mail-list-item/mail-list-item.component.ts","./src/app/main/apps/mail/mail-list/mail-list-item/mail-list-item.component.html","./src/app/main/apps/mail/i18n/tr.ts","./src/app/main/apps/mail/i18n/en.ts","./src/app/main/apps/mail/mail.module.ts","./src/app/main/apps/mail/mail.service.ts","./src/app/main/apps/mail/mail.component.ts","./src/app/main/apps/mail/mail.component.html","./src/app/main/apps/mail/mail.model.ts","./src/app/main/apps/mail/mail-list/mail-list.component.ts","./src/app/main/apps/mail/mail-list/mail-list.component.html","./src/app/main/apps/mail/mail-details/mail-details.component.ts","./src/app/main/apps/mail/mail-details/mail-details.component.html","./src/app/main/apps/mail/dialogs/compose/compose.component.ts","./src/app/main/apps/mail/dialogs/compose/compose.component.html"],"names":[],"mappings":"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","file":"mail-mail-module-es2015.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { MailService } from 'app/main/apps/mail/mail.service';\nimport { MailComposeDialogComponent } from 'app/main/apps/mail/dialogs/compose/compose.component';\n\n@Component({\n    selector     : 'mail-main-sidebar',\n    templateUrl  : './main-sidebar.component.html',\n    styleUrls    : ['./main-sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class MailMainSidebarComponent implements OnInit, OnDestroy\n{\n    folders: any[];\n    filters: any[];\n    labels: any[];\n    accounts: object;\n    selectedAccount: string;\n    dialogRef: any;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {MailService} _mailService\n     * @param {MatDialog} _matDialog\n     */\n    constructor(\n        private _mailService: MailService,\n        public _matDialog: MatDialog\n    )\n    {\n        // Set the defaults\n        this.accounts = {\n            creapond    : 'johndoe@creapond.com',\n            withinpixels: 'johndoe@withinpixels.com'\n        };\n        this.selectedAccount = 'creapond';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._mailService.onFoldersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(folders => {\n                this.folders = folders;\n            });\n\n        this._mailService.onFiltersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(filters => {\n                this.filters = filters;\n            });\n\n        this._mailService.onLabelsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.labels = labels;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Compose dialog\n     */\n    composeDialog(): void\n    {\n        this.dialogRef = this._matDialog.open(MailComposeDialogComponent, {\n            panelClass: 'mail-compose-dialog'\n        });\n        this.dialogRef.afterClosed()\n            .subscribe(response => {\n                if ( !response )\n                {\n                    return;\n                }\n                const actionType: string = response[0];\n                const formData: FormGroup = response[1];\n                switch ( actionType )\n                {\n                    /**\n                     * Send\n                     */\n                    case 'send':\n                        console.log('new Mail', formData.getRawValue());\n                        break;\n                    /**\n                     * Delete\n                     */\n                    case 'delete':\n                        console.log('delete Mail');\n                        break;\n                }\n            });\n    }\n}\n","<!-- SIDEBAR HEADER -->\n<div fxLayout=\"column\" fxLayoutAlign=\"space-between start\"\n     class=\"header accent p-24 pb-4\">\n\n    <div class=\"logo\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <mat-icon class=\"logo-icon s-32\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">mail\n        </mat-icon>\n        <span class=\"logo-text\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">Mailbox</span>\n    </div>\n\n    <div class=\"account\" fxLayout=\"column\" [@animate]=\"{value:'*',params:{delay:'300ms'}}\">\n        <div class=\"title\">John Doe</div>\n        <mat-form-field floatLabel=\"never\">\n            <mat-select class=\"account-selection\" placeholder=\"Mail Selection\"\n                        [ngModel]=\"selectedAccount\">\n                <mat-option *ngFor=\"let account of (accounts | keys)\" [value]=\"account.key\">\n                    {{account.value}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n</div>\n<!-- / SIDEBAR HEADER -->\n\n<!-- SIDEBAR CONTENT -->\n<div class=\"content\" fusePerfectScrollbar [@animate]=\"{value:'*',params:{y:'50px'}}\">\n\n    <div class=\"px-24 pt-32 pb-12\">\n        <button mat-raised-button\n                class=\"mat-accent compose-dialog-button w-100-p\"\n                (click)=\"composeDialog()\"\n                aria-label=\"Compose\">\n            {{ 'MAIL.COMPOSE' | translate }}\n        </button>\n    </div>\n\n    <div class=\"nav material2\">\n\n        <div class=\"nav-subheader\">{{ 'MAIL.FOLDERS' | translate }}</div>\n\n        <div class=\"nav-item\" *ngFor=\"let folder of folders\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/mail/' + folder.handle\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\" *ngIf=\"folder.icon\">{{folder.icon}}</mat-icon>\n                <span>{{folder.title}}</span>\n            </a>\n        </div>\n\n        <div class=\"nav-subheader\">{{ 'MAIL.FILTERS' | translate }}</div>\n\n        <div class=\"nav-item\" *ngFor=\"let filter of filters\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/mail/filter/' + filter.handle\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\" [ngClass]=\"filter.color\" *ngIf=\"filter.icon\">{{filter.icon}}</mat-icon>\n                <span>{{filter.title}}</span>\n            </a>\n        </div>\n\n        <div class=\"nav-subheader\">{{ 'MAIL.LABELS' | translate }}</div>\n\n        <div class=\"nav-item\" *ngFor=\"let label of labels\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/mail/label/' + label.handle\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\" [ngStyle]=\"{'color':label.color}\">label</mat-icon>\n                <span>{{label.title}}</span>\n            </a>\n        </div>\n\n    </div>\n\n</div>\n<!-- / SIDEBAR CONTENT -->\n","import { Component, HostBinding, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\nimport { MailService } from 'app/main/apps/mail/mail.service';\n\n@Component({\n    selector     : 'mail-list-item',\n    templateUrl  : './mail-list-item.component.html',\n    styleUrls    : ['./mail-list-item.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MailListItemComponent implements OnInit, OnDestroy\n{\n    @Input() mail: Mail;\n    labels: any[];\n\n    @HostBinding('class.selected')\n    selected: boolean;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {MailService} _mailService\n     */\n    constructor(\n        private _mailService: MailService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Set the initial values\n        this.mail = new Mail(this.mail);\n\n        // Subscribe to update on selected mail change\n        this._mailService.onSelectedMailsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedMails => {\n                this.selected = false;\n\n                if ( selectedMails.length > 0 )\n                {\n                    for ( const mail of selectedMails )\n                    {\n                        if ( mail.id === this.mail.id )\n                        {\n                            this.selected = true;\n                            break;\n                        }\n                    }\n                }\n            });\n\n        // Subscribe to update on label change\n        this._mailService.onLabelsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.labels = labels;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On selected change\n     */\n    onSelectedChange(): void\n    {\n        this._mailService.toggleSelectedMail(this.mail.id);\n    }\n\n    /**\n     * Toggle star\n     *\n     * @param event\n     */\n    toggleStar(event): void\n    {\n        event.stopPropagation();\n\n        this.mail.toggleStar();\n\n        this._mailService.updateMail(this.mail);\n    }\n\n    /**\n     * Toggle Important\n     *\n     * @param event\n     */\n    toggleImportant(event): void\n    {\n        event.stopPropagation();\n\n        this.mail.toggleImportant();\n\n        this._mailService.updateMail(this.mail);\n    }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n    <mat-checkbox [(ngModel)]=\"selected\" (ngModelChange)=\"onSelectedChange()\"\n                  (click)=\"$event.stopPropagation();\"></mat-checkbox>\n\n    <div class=\"info\" fxFlex FlexLayout=\"column\">\n\n        <div class=\"row-1\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <div class=\"name\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex>\n                <img class=\"avatar\" *ngIf=\"mail.from?.avatar\" alt=\"{{mail.from?.name}}\" src=\"{{mail.from?.avatar}}\"/>\n                <div class=\"avatar accent\" *ngIf=\"!mail.from?.avatar\">{{mail.from?.name[0]}}</div>\n                <span class=\"text-truncate\" *ngIf=\"mail?.from\">{{mail.from?.name}}</span>\n                <mat-icon class=\"s-16 ml-8\" *ngIf=\"mail.hasAttachments\">attachment</mat-icon>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <div class=\"time\">{{mail.time}}</div>\n\n            </div>\n\n        </div>\n\n        <div class=\"row-2\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n\n                <div class=\"subject text-truncate\">\n                    {{mail.subject}}\n                </div>\n\n                <div class=\"message text-truncate\" *ngIf=\"mail?.message\">\n                    {{mail.message | htmlToPlaintext | slice:0:180}}{{mail.message.length > 180 ? '...' : ''}}\n                </div>\n\n                <div class=\"labels\" fxLayout=\"row wrap\" fxHide fxShow.gt-sm>\n                    <div class=\"label\" *ngFor=\"let labelId of mail.labels\"\n                         fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                        <div class=\"label-color\"\n                             [ngStyle]=\"{'background-color': labels | getById:labelId:'color'}\"></div>\n                        <div class=\"label-title\">{{labels | getById:labelId:'title'}}</div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n","export const locale = {\n    lang: 'tr',\n    data: {\n        MAIL: {\n            COMPOSE                 : 'YENİ E-POSTA',\n            FOLDERS                 : 'KLASÖRLER',\n            FILTERS                 : 'FİLTRELER',\n            LABELS                  : 'ETİKETLER',\n            NO_MESSAGES             : 'Mesajiniz bulunmamakta!',\n            SELECT_A_MESSAGE_TO_READ: 'Okumak için bir mesaj seçin',\n            SEARCH_PLACEHOLDER      : 'E-mail yada bir kişi arayın'\n        }\n    }\n};\n","export const locale = {\n    lang: 'en',\n    data: {\n        MAIL: {\n            COMPOSE                 : 'COMPOSE',\n            FOLDERS                 : 'FOLDERS',\n            FILTERS                 : 'FILTERS',\n            LABELS                  : 'LABELS',\n            NO_MESSAGES             : 'There are no messages!',\n            SELECT_A_MESSAGE_TO_READ: 'Select a message to read',\n            SEARCH_PLACEHOLDER      : 'Search for an e-mail or contact'\n        }\n    }\n};\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseSidebarModule } from '@fuse/components';\n\nimport { MailService } from 'app/main/apps/mail/mail.service';\nimport { MailComponent } from 'app/main/apps/mail/mail.component';\nimport { MailListComponent } from 'app/main/apps/mail/mail-list/mail-list.component';\nimport { MailListItemComponent } from 'app/main/apps/mail/mail-list/mail-list-item/mail-list-item.component';\nimport { MailDetailsComponent } from 'app/main/apps/mail/mail-details/mail-details.component';\nimport { MailMainSidebarComponent } from 'app/main/apps/mail/sidebars/main/main-sidebar.component';\nimport { MailComposeDialogComponent } from 'app/main/apps/mail/dialogs/compose/compose.component';\n\nconst routes: Routes = [\n    {\n        path     : 'label/:labelHandle',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : 'label/:labelHandle/:mailId',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : 'filter/:filterHandle',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : 'filter/:filterHandle/:mailId',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : ':folderHandle',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : ':folderHandle/:mailId',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path      : '**',\n        redirectTo: 'inbox'\n    }\n];\n\n@NgModule({\n    declarations   : [\n        MailComponent,\n        MailListComponent,\n        MailListItemComponent,\n        MailDetailsComponent,\n        MailMainSidebarComponent,\n        MailComposeDialogComponent\n    ],\n    imports        : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatMenuModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatToolbarModule,\n\n        TranslateModule,\n\n        FuseSharedModule,\n        FuseSidebarModule\n    ],\n    providers      : [\n        MailService\n    ],\n    entryComponents: [\n        MailComposeDialogComponent\n    ]\n})\nexport class MailModule\n{\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { FuseUtils } from '@fuse/utils';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\n\n@Injectable()\nexport class MailService implements Resolve<any>\n{\n    mails: Mail[];\n    selectedMails: Mail[];\n    currentMail: Mail;\n    searchText = '';\n\n    folders: any[];\n    filters: any[];\n    labels: any[];\n    routeParams: any;\n\n    onMailsChanged: BehaviorSubject<any>;\n    onSelectedMailsChanged: BehaviorSubject<any>;\n    onCurrentMailChanged: BehaviorSubject<any>;\n    onFoldersChanged: BehaviorSubject<any>;\n    onFiltersChanged: BehaviorSubject<any>;\n    onLabelsChanged: BehaviorSubject<any>;\n    onSearchTextChanged: BehaviorSubject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpClient\n    )\n    {\n        // Set the defaults\n        this.selectedMails = [];\n        this.onMailsChanged = new BehaviorSubject([]);\n        this.onSelectedMailsChanged = new BehaviorSubject([]);\n        this.onCurrentMailChanged = new BehaviorSubject([]);\n        this.onFoldersChanged = new BehaviorSubject([]);\n        this.onFiltersChanged = new BehaviorSubject([]);\n        this.onLabelsChanged = new BehaviorSubject([]);\n        this.onSearchTextChanged = new BehaviorSubject('');\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        this.routeParams = route.params;\n\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                this.getFolders(),\n                this.getFilters(),\n                this.getLabels(),\n                this.getMails()\n            ]).then(\n                () => {\n                    if ( this.routeParams.mailId )\n                    {\n                        this.setCurrentMail(this.routeParams.mailId);\n                    }\n                    else\n                    {\n                        this.setCurrentMail(null);\n                    }\n\n                    this.onSearchTextChanged.subscribe(searchText => {\n                        if ( searchText !== '' )\n                        {\n                            this.searchText = searchText;\n                            this.getMails();\n                        }\n                        else\n                        {\n                            this.searchText = searchText;\n                            this.getMails();\n                        }\n                    });\n\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get all folders\n     *\n     * @returns {Promise<any>}\n     */\n    getFolders(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/mail-folders')\n                .subscribe((response: any) => {\n                    this.folders = response;\n                    this.onFoldersChanged.next(this.folders);\n                    resolve(this.folders);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get all filters\n     *\n     * @returns {Promise<any>}\n     */\n    getFilters(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/mail-filters')\n                .subscribe((response: any) => {\n                    this.filters = response;\n                    this.onFiltersChanged.next(this.filters);\n                    resolve(this.filters);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get all labels\n     *\n     * @returns {Promise<any>}\n     */\n    getLabels(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/mail-labels')\n                .subscribe((response: any) => {\n                    this.labels = response;\n                    this.onLabelsChanged.next(this.labels);\n                    resolve(this.labels);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get all mails\n     *\n     * @returns {Promise<Mail[]>}\n     */\n    getMails(): Promise<Mail[]>\n    {\n        if ( this.routeParams.labelHandle )\n        {\n            return this.getMailsByLabel(this.routeParams.labelHandle);\n        }\n\n        if ( this.routeParams.filterHandle )\n        {\n            return this.getMailsByFilter(this.routeParams.filterHandle);\n        }\n\n        return this.getMailsByFolder(this.routeParams.folderHandle);\n    }\n\n    /**\n     * Get mails by folder\n     *\n     * @param handle\n     * @returns {Promise<Mail[]>}\n     */\n    getMailsByFolder(handle): Promise<Mail[]>\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.get('api/mail-folders?handle=' + handle)\n                .subscribe((folders: any) => {\n\n                    const folderId = folders[0].id;\n\n                    this._httpClient.get('api/mail-mails?folder=' + folderId)\n                        .subscribe((mails: any) => {\n\n                            this.mails = mails.map(mail => {\n                                return new Mail(mail);\n                            });\n\n                            this.mails = FuseUtils.filterArrayByString(this.mails, this.searchText);\n\n                            this.onMailsChanged.next(this.mails);\n\n                            resolve(this.mails);\n\n                        }, reject);\n                });\n        });\n    }\n\n    /**\n     * Get mails by filter\n     *\n     * @param handle\n     * @returns {Promise<Mail[]>}\n     */\n    getMailsByFilter(handle): Promise<Mail[]>\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.get('api/mail-mails?' + handle + '=true')\n                .subscribe((mails: any) => {\n\n                    this.mails = mails.map(mail => {\n                        return new Mail(mail);\n                    });\n\n                    this.mails = FuseUtils.filterArrayByString(this.mails, this.searchText);\n\n                    this.onMailsChanged.next(this.mails);\n\n                    resolve(this.mails);\n\n                }, reject);\n        });\n    }\n\n    /**\n     * Get mails by label\n     *\n     * @param handle\n     * @returns {Promise<Mail[]>}\n     */\n    getMailsByLabel(handle): Promise<Mail[]>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/mail-labels?handle=' + handle)\n                .subscribe((labels: any) => {\n\n                    const labelId = labels[0].id;\n\n                    this._httpClient.get('api/mail-mails?labels=' + labelId)\n                        .subscribe((mails: any) => {\n\n                            this.mails = mails.map(mail => {\n                                return new Mail(mail);\n                            });\n\n                            this.mails = FuseUtils.filterArrayByString(this.mails, this.searchText);\n\n                            this.onMailsChanged.next(this.mails);\n\n                            resolve(this.mails);\n\n                        }, reject);\n                });\n        });\n    }\n\n    /**\n     * Toggle selected mail by id\n     *\n     * @param id\n     */\n    toggleSelectedMail(id): void\n    {\n        // First, check if we already have that mail as selected...\n        if ( this.selectedMails.length > 0 )\n        {\n            for ( const mail of this.selectedMails )\n            {\n                // ...delete the selected mail\n                if ( mail.id === id )\n                {\n                    const index = this.selectedMails.indexOf(mail);\n\n                    if ( index !== -1 )\n                    {\n                        this.selectedMails.splice(index, 1);\n\n                        // Trigger the next event\n                        this.onSelectedMailsChanged.next(this.selectedMails);\n\n                        // Return\n                        return;\n                    }\n                }\n            }\n        }\n\n        // If we don't have it, push as selected\n        this.selectedMails.push(\n            this.mails.find(mail => {\n                return mail.id === id;\n            })\n        );\n\n        // Trigger the next event\n        this.onSelectedMailsChanged.next(this.selectedMails);\n    }\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll(): void\n    {\n        if ( this.selectedMails.length > 0 )\n        {\n            this.deselectMails();\n        }\n        else\n        {\n            this.selectMails();\n        }\n\n    }\n\n    /**\n     * Select mails\n     *\n     * @param filterParameter\n     * @param filterValue\n     */\n    selectMails(filterParameter?, filterValue?): void\n    {\n        this.selectedMails = [];\n\n        // If there is no filter, select all mails\n        if ( filterParameter === undefined || filterValue === undefined )\n        {\n            this.selectedMails = this.mails;\n        }\n        else\n        {\n            this.selectedMails.push(...\n                this.mails.filter(mail => {\n                    return mail[filterParameter] === filterValue;\n                })\n            );\n        }\n\n        // Trigger the next event\n        this.onSelectedMailsChanged.next(this.selectedMails);\n    }\n\n    /**\n     * Deselect mails\n     */\n    deselectMails(): void\n    {\n        this.selectedMails = [];\n\n        // Trigger the next event\n        this.onSelectedMailsChanged.next(this.selectedMails);\n    }\n\n    /**\n     * Set current mail by id\n     *\n     * @param id\n     */\n    setCurrentMail(id): void\n    {\n        this.currentMail = this.mails.find(mail => {\n            return mail.id === id;\n        });\n\n        this.onCurrentMailChanged.next(this.currentMail);\n    }\n\n    /**\n     * Toggle label on selected mails\n     *\n     * @param labelId\n     */\n    toggleLabelOnSelectedMails(labelId): void\n    {\n        this.selectedMails.map(mail => {\n\n            const index = mail.labels.indexOf(labelId);\n\n            if ( index !== -1 )\n            {\n                mail.labels.splice(index, 1);\n            }\n            else\n            {\n                mail.labels.push(labelId);\n            }\n\n            this.updateMail(mail);\n        });\n    }\n\n    /**\n     * Set folder on selected mails\n     *\n     * @param folderId\n     */\n    setFolderOnSelectedMails(folderId): void\n    {\n        this.selectedMails.map(mail => {\n            mail.folder = folderId;\n\n            this.updateMail(mail);\n        });\n\n        this.deselectMails();\n    }\n\n    /**\n     * Update the mail\n     *\n     * @param mail\n     * @returns {Promise<any>}\n     */\n    updateMail(mail): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.post('api/mail-mails/' + mail.id, {...mail})\n                .subscribe(response => {\n\n                    this.getMails().then(mails => {\n\n                        if ( mails && this.currentMail )\n                        {\n                            this.setCurrentMail(this.currentMail.id);\n                        }\n\n                        resolve(mails);\n\n                    }, reject);\n                });\n        });\n    }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\nimport { FuseTranslationLoaderService } from '@fuse/services/translation-loader.service';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\nimport { MailService } from 'app/main/apps/mail/mail.service';\n\nimport { locale as english } from 'app/main/apps/mail//i18n/en';\nimport { locale as turkish } from 'app/main/apps/mail//i18n/tr';\n\n@Component({\n    selector     : 'mail',\n    templateUrl  : './mail.component.html',\n    styleUrls    : ['./mail.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MailComponent implements OnInit, OnDestroy\n{\n    hasSelectedMails: boolean;\n    isIndeterminate: boolean;\n    folders: any[];\n    filters: any[];\n    labels: any[];\n    searchInput: FormControl;\n    currentMail: Mail;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {MailService} _mailService\n     * @param {FuseSidebarService} _fuseSidebarService\n     * @param {FuseTranslationLoaderService} _fuseTranslationLoaderService\n     */\n    constructor(\n        private _mailService: MailService,\n        private _fuseSidebarService: FuseSidebarService,\n        private _fuseTranslationLoaderService: FuseTranslationLoaderService\n    )\n    {\n        // Load the translations\n        this._fuseTranslationLoaderService.loadTranslations(english, turkish);\n\n        // Set the defaults\n        this.searchInput = new FormControl('');\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._mailService.onSelectedMailsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedMails => {\n                setTimeout(() => {\n                    this.hasSelectedMails = selectedMails.length > 0;\n                    this.isIndeterminate = (selectedMails.length !== this._mailService.mails.length && selectedMails.length > 0);\n                }, 0);\n            });\n\n        this._mailService.onFoldersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(folders => {\n                this.folders = this._mailService.folders;\n            });\n\n        this._mailService.onFiltersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(folders => {\n                this.filters = this._mailService.filters;\n            });\n\n        this._mailService.onLabelsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.labels = this._mailService.labels;\n            });\n\n        this._mailService.onCurrentMailChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(currentMail => {\n                if ( !currentMail )\n                {\n                    this.currentMail = null;\n                }\n                else\n                {\n                    this.currentMail = currentMail;\n                }\n            });\n\n        this.searchInput.valueChanges.pipe(\n            takeUntil(this._unsubscribeAll),\n            debounceTime(300),\n            distinctUntilChanged()\n        )\n            .subscribe(searchText => {\n                this._mailService.onSearchTextChanged.next(searchText);\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll(): void\n    {\n        this._mailService.toggleSelectAll();\n    }\n\n    /**\n     * Select mails\n     *\n     * @param filterParameter\n     * @param filterValue\n     */\n    selectMails(filterParameter?, filterValue?): void\n    {\n        this._mailService.selectMails(filterParameter, filterValue);\n    }\n\n    /**\n     * Deselect mails\n     */\n    deselectMails(): void\n    {\n        this._mailService.deselectMails();\n    }\n\n    /**\n     * Deselect current mail\n     */\n    deselectCurrentMail(): void\n    {\n        this._mailService.onCurrentMailChanged.next(null);\n    }\n\n    /**\n     * Toggle label on selected mails\n     *\n     * @param labelId\n     */\n    toggleLabelOnSelectedMails(labelId): void\n    {\n        this._mailService.toggleLabelOnSelectedMails(labelId);\n    }\n\n    /**\n     * Set folder on selected mails\n     *\n     * @param folderId\n     */\n    setFolderOnSelectedMails(folderId): void\n    {\n        this._mailService.setFolderOnSelectedMails(folderId);\n    }\n\n    /**\n     * Toggle the sidebar\n     *\n     * @param name\n     */\n    toggleSidebar(name): void\n    {\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\n    }\n}\n","<div id=\"mail\" class=\"page-layout carded left-sidebar inner-scroll\">\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n\n    <!-- SIDEBAR -->\n    <fuse-sidebar class=\"sidebar\" name=\"mail-main-sidebar\" position=\"left\" lockedOpen=\"gt-md\">\n        <mail-main-sidebar></mail-main-sidebar>\n    </fuse-sidebar>\n    <!-- / SIDEBAR -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- CONTENT HEADER -->\n        <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <div class=\"search-wrapper\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <button mat-icon-button class=\"sidebar-toggle\" fxHide.gt-md\n                        (click)=\"toggleSidebar('mail-main-sidebar')\">\n                    <mat-icon>menu</mat-icon>\n                </button>\n\n                <div class=\"search\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"secondary-text\">search</mat-icon>\n                    <input [formControl]=\"searchInput\" [placeholder]=\"'MAIL.SEARCH_PLACEHOLDER' | translate\" fxFlex>\n                </div>\n\n            </div>\n\n        </div>\n        <!-- / CONTENT HEADER -->\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card\" [ngClass]=\"{'current-mail-selected':currentMail}\">\n\n            <!-- CONTENT TOOLBAR -->\n            <div class=\"toolbar px-24 py-8\">\n\n                <div class=\"mail-selection\" fxFlex=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-checkbox (click)=\"toggleSelectAll()\" [checked]=\"hasSelectedMails\"\n                                  [indeterminate]=\"isIndeterminate\"></mat-checkbox>\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"selectMenu\">\n                        <mat-icon>arrow_drop_down</mat-icon>\n                    </button>\n                    <mat-menu #selectMenu=\"matMenu\">\n                        <button mat-menu-item (click)=\"selectMails()\">All</button>\n                        <button mat-menu-item (click)=\"deselectMails()\">None</button>\n                        <button mat-menu-item (click)=\"selectMails('read', true)\">Read</button>\n                        <button mat-menu-item (click)=\"selectMails('read', false)\">Unread</button>\n                        <button mat-menu-item (click)=\"selectMails('starred', true)\">Starred</button>\n                        <button mat-menu-item (click)=\"selectMails('starred', false)\">Unstarred</button>\n                        <button mat-menu-item (click)=\"selectMails('important', true)\">Important</button>\n                        <button mat-menu-item (click)=\"selectMails('important', false)\">Unimportant</button>\n                    </mat-menu>\n\n                    <div class=\"toolbar-separator\" *ngIf=\"hasSelectedMails\"></div>\n\n                    <button mat-icon-button (click)=\"setFolderOnSelectedMails(4)\" *ngIf=\"hasSelectedMails\">\n                        <mat-icon class=\"secondary-text\">delete</mat-icon>\n                    </button>\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"folderMenu\" *ngIf=\"hasSelectedMails\">\n                        <mat-icon class=\"secondary-text\">folder</mat-icon>\n                    </button>\n                    <mat-menu #folderMenu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let folder of folders\"\n                                (click)=\"setFolderOnSelectedMails(folder.id)\">{{folder.title}}\n                        </button>\n                    </mat-menu>\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" *ngIf=\"hasSelectedMails\">\n                        <mat-icon class=\"secondary-text\">label</mat-icon>\n                    </button>\n                    <mat-menu #labelMenu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let label of labels\"\n                                (click)=\"toggleLabelOnSelectedMails(label.id)\">{{label.title}}\n                        </button>\n                    </mat-menu>\n                </div>\n\n                <div *ngIf=\"currentMail\" fxHide.gt-xs>\n                    <button mat-icon-button (click)=\"deselectCurrentMail()\">\n                        <mat-icon class=\"secondary-text\">arrow_back</mat-icon>\n                    </button>\n                </div>\n            </div>\n            <!-- / CONTENT TOOLBAR -->\n\n            <!-- CONTENT -->\n            <div class=\"content\" fxLayout=\"row\">\n\n                <mail-list fusePerfectScrollbar fxFlex></mail-list>\n                <mail-details fusePerfectScrollbar fxFlex></mail-details>\n\n            </div>\n            <!-- / CONTENT -->\n\n        </div>\n        <!-- / CONTENT CARD -->\n\n    </div>\n    <!-- / CENTER -->\n\n</div>\n","export class Mail\n{\n    id: string;\n    from: {\n        name: string,\n        avatar: string,\n        email: string\n    };\n    to: {\n        name: string,\n        email: string\n    }[];\n    subject: string;\n    message: string;\n    time: string;\n    read: boolean;\n    starred: boolean;\n    important: boolean;\n    hasAttachments: boolean;\n    attachments: {\n        type: string,\n        fileName: string,\n        preview: string,\n        url: string,\n        size: string\n    }[];\n    labels: string[];\n    folder: string;\n\n    /**\n     * Constructor\n     *\n     * @param mail\n     */\n    constructor(mail)\n    {\n        this.id = mail.id;\n        this.from = mail.from;\n        this.to = mail.to;\n        this.subject = mail.subject;\n        this.message = mail.message;\n        this.time = mail.time;\n        this.read = mail.read;\n        this.starred = mail.starred;\n        this.important = mail.important;\n        this.hasAttachments = mail.hasAttachments;\n        this.attachments = mail.attachments;\n        this.labels = mail.labels;\n        this.folder = mail.folder;\n    }\n\n    /**\n     * Toggle star\n     */\n    toggleStar(): void\n    {\n        this.starred = !this.starred;\n    }\n\n    /**\n     * Toggle important\n     */\n    toggleImportant(): void\n    {\n        this.important = !this.important;\n    }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\nimport { MailService } from 'app/main/apps/mail/mail.service';\n\n@Component({\n    selector     : 'mail-list',\n    templateUrl  : './mail-list.component.html',\n    styleUrls    : ['./mail-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class MailListComponent implements OnInit, OnDestroy\n{\n    mails: Mail[];\n    currentMail: Mail;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ActivatedRoute} _activatedRoute\n     * @param {MailService} _mailService\n     * @param {Location} _location\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _mailService: MailService,\n        private _location: Location\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update mails on changes\n        this._mailService.onMailsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(mails => {\n                this.mails = mails;\n            });\n\n        // Subscribe to update current mail on changes\n        this._mailService.onCurrentMailChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(currentMail => {\n                if ( !currentMail )\n                {\n                    // Set the current mail id to null to deselect the current mail\n                    this.currentMail = null;\n\n                    // Handle the location changes\n                    const labelHandle  = this._activatedRoute.snapshot.params.labelHandle,\n                          filterHandle = this._activatedRoute.snapshot.params.filterHandle,\n                          folderHandle = this._activatedRoute.snapshot.params.folderHandle;\n\n                    if ( labelHandle )\n                    {\n                        this._location.go('apps/mail/label/' + labelHandle);\n                    }\n                    else if ( filterHandle )\n                    {\n                        this._location.go('apps/mail/filter/' + filterHandle);\n                    }\n                    else\n                    {\n                        this._location.go('apps/mail/' + folderHandle);\n                    }\n                }\n                else\n                {\n                    this.currentMail = currentMail;\n                }\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Read mail\n     *\n     * @param mailId\n     */\n    readMail(mailId): void\n    {\n        const labelHandle  = this._activatedRoute.snapshot.params.labelHandle,\n              filterHandle = this._activatedRoute.snapshot.params.filterHandle,\n              folderHandle = this._activatedRoute.snapshot.params.folderHandle;\n\n        if ( labelHandle )\n        {\n            this._location.go('apps/mail/label/' + labelHandle + '/' + mailId);\n        }\n        else if ( filterHandle )\n        {\n            this._location.go('apps/mail/filter/' + filterHandle + '/' + mailId);\n        }\n        else\n        {\n            this._location.go('apps/mail/' + folderHandle + '/' + mailId);\n        }\n\n        // Set current mail\n        this._mailService.setCurrentMail(mailId);\n    }\n}\n","<div *ngIf=\"mails.length === 0\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlexFill>\n    <span class=\"no-messages-text hint-text\">{{ 'MAIL.NO_MESSAGES' | translate }}</span>\n</div>\n\n<div class=\"mail-list\" [@animateStagger]=\"{value:'50'}\">\n    <mail-list-item *ngFor=\"let mail of mails\" [mail]=\"mail\" (click)=\"readMail(mail.id)\"\n                    [ngClass]=\"{'current-mail':mail?.id == currentMail?.id}\"\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\n    </mail-list-item>\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\nimport { MailService } from 'app/main/apps/mail/mail.service';\n\n@Component({\n    selector     : 'mail-details',\n    templateUrl  : './mail-details.component.html',\n    styleUrls    : ['./mail-details.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class MailDetailsComponent implements OnInit, OnDestroy\n{\n    mail: Mail;\n    labels: any[];\n    showDetails: boolean;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {MailService} _mailService\n     */\n    constructor(\n        private _mailService: MailService\n    )\n    {\n        // Set the defaults\n        this.showDetails = false;\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update the current mail\n        this._mailService.onCurrentMailChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(currentMail => {\n                this.mail = currentMail;\n            });\n\n        // Subscribe to update on label change\n        this._mailService.onLabelsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.labels = labels;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Toggle star\n     *\n     * @param event\n     */\n    toggleStar(event): void\n    {\n        event.stopPropagation();\n\n        this.mail.toggleStar();\n\n        this._mailService.updateMail(this.mail);\n    }\n\n    /**\n     * Toggle important\n     *\n     * @param event\n     */\n    toggleImportant(event): void\n    {\n        event.stopPropagation();\n\n        this.mail.toggleImportant();\n\n        this._mailService.updateMail(this.mail);\n    }\n}\n","<div *ngIf=\"!mail\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex>\n    <mat-icon class=\"s-128 mb-16 select-message-icon hint-text\"\n              [@animate]=\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\">\n        email\n    </mat-icon>\n    <span class=\"select-message-text hint-text\" [@animate]=\"{value:'*',params:{delay:'400ms'}}\">\n        <span>{{ 'MAIL.SELECT_A_MESSAGE_TO_READ' | translate }}</span>\n    </span>\n</div>\n\n<div *ngIf=\"mail\">\n\n    <div class=\"mail-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n        <div>\n            <div class=\"subject\">{{mail.subject}}</div>\n\n            <div class=\"labels mt-8\" fxLayout=\"row wrap\">\n                <div class=\"label\" *ngFor=\"let labelId of mail.labels\"\n                     fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <div class=\"label-color\" [ngStyle]=\"{'background-color': labels | getById:labelId:'color'}\"></div>\n                    <div class=\"label-title\">{{labels | getById:labelId:'title'}}</div>\n                </div>\n            </div>\n\n        </div>\n\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            <button mat-icon-button (click)=\"toggleStar($event)\" aria-label=\"Toggle star\">\n                <mat-icon class=\"amber-fg\" *ngIf=\"mail.starred\">star</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!mail.starred\">star_border</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)=\"toggleImportant($event)\" aria-label=\"Toggle important\">\n                <mat-icon class=\"red-fg\" *ngIf=\"mail.important\">label</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!mail.important\">label_outline</mat-icon>\n            </button>\n        </div>\n    </div>\n\n    <div class=\"mail-content\">\n\n        <div class=\"info\" fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\n\n            <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"start start\">\n\n                <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n\n                    <div>\n                        <img *ngIf=\"mail.from.avatar\" alt=\"{{mail.from.name}}\"\n                             src=\"{{mail.from.avatar}}\" class=\"avatar\"/>\n\n                        <div *ngIf=\"!mail.from.avatar\" class=\"avatar\" ms-random-class=\"vm.colors\">\n                            {{mail.from.name[0]}}\n                        </div>\n                    </div>\n\n                    <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n\n                        <div class=\"name\">\n                            {{mail.from.name}}\n                        </div>\n\n                        <div class=\"to\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                            <div class=\"to-text\">to</div>\n                            <div>{{mail.to[0].name}}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <a class=\"toggle-details\" (click)=\"showDetails = !showDetails\">\n                    <span *ngIf=\"!showDetails\">Show Details</span>\n                    <span *ngIf=\"showDetails\">Hide Details</span>\n                </a>\n\n                <div *ngIf=\"showDetails\" class=\"details\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n\n                    <div fxLayout=\"column\">\n                        <span class=\"title\">From:</span>\n                        <span class=\"title\">To:</span>\n                        <span class=\"title\">Date:</span>\n                    </div>\n\n                    <div fxLayout=\"column\">\n                        <span class=\"detail\">{{mail.from.email}}</span>\n                        <span class=\"detail\">{{mail.to[0].email}}</span>\n                        <span class=\"detail\">{{mail.time}}</span>\n                    </div>\n                </div>\n            </div>\n\n            <button mat-icon-button [matMenuTriggerFor]=\"moreMenu\" aria-label=\"More\" (click)=\"$event.stopPropagation()\">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n\n            <mat-menu #moreMenu=\"matMenu\">\n                <button mat-menu-item aria-label=\"Reply\">\n                    <mat-icon>reply</mat-icon>\n                    <span>Reply</span>\n                </button>\n\n                <button mat-menu-item aria-label=\"Forward\">\n                    <mat-icon>forward</mat-icon>\n                    <span>Forward</span>\n                </button>\n\n                <button mat-menu-item aria-label=\"Print\">\n                    <mat-icon>print</mat-icon>\n                    <span>Print</span>\n                </button>\n            </mat-menu>\n        </div>\n\n        <div [innerHTML]=\"mail.message\"></div>\n\n    </div>\n\n    <div *ngIf=\"mail.attachments\" class=\"mail-attachments\">\n\n        <div class=\"title\">\n            <span>Attachments</span>\n            ({{mail.attachments.length}})\n        </div>\n\n        <div class=\"attachment-list\" fxLayout=\"row wrap\">\n\n            <div class=\"attachment\" fxLayout=\"column\"\n                 *ngFor=\"let attachment of mail.attachments\">\n\n                <img class=\"preview\" src=\"{{attachment.preview}}\">\n\n                <div fxLayout=\"column\">\n                    <a href=\"#\" onclick=\"event.preventDefault()\">View</a>\n                    <a href=\"#\" onclick=\"event.preventDefault()\">Download</a>\n                    <div class=\"size\">({{attachment.size}})</div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector     : 'mail-compose',\n    templateUrl  : './compose.component.html',\n    styleUrls    : ['./compose.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MailComposeDialogComponent\n{\n    showExtraToFields: boolean;\n    composeForm: FormGroup;\n\n    /**\n     * Constructor\n     *\n     * @param {MatDialogRef<MailComposeDialogComponent>} matDialogRef\n     * @param _data\n     */\n    constructor(\n        public matDialogRef: MatDialogRef<MailComposeDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: any\n    )\n    {\n        // Set the defaults\n        this.composeForm = this.createComposeForm();\n        this.showExtraToFields = false;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Create compose form\n     *\n     * @returns {FormGroup}\n     */\n    createComposeForm(): FormGroup\n    {\n        return new FormGroup({\n            from   : new FormControl({\n                value   : 'johndoe@creapond.com',\n                disabled: true\n            }),\n            to     : new FormControl(''),\n            cc     : new FormControl(''),\n            bcc    : new FormControl(''),\n            subject: new FormControl(''),\n            message: new FormControl('')\n        });\n    }\n\n    /**\n     * Toggle extra to fields\n     */\n    toggleExtraToFields(): void\n    {\n        this.showExtraToFields = !this.showExtraToFields;\n    }\n}\n","<div class=\"dialog-content-wrapper\">\n    <mat-toolbar class=\"mat-accent m-0\">\n        <mat-toolbar-row fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n            <span class=\"title dialog-title\">New Message</span>\n            <button mat-icon-button (click)=\"matDialogRef.close()\" aria-label=\"Close dialog\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div mat-dialog-content class=\"p-24 m-0\" fusePerfectScrollbar>\n\n        <form name=\"composeForm\" [formGroup]=\"composeForm\" class=\"compose-form\" fxLayout=\"column\" fxFlex>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>From</mat-label>\n                <input matInput name=\"from\"\n                       formControlName=\"from\"\n                       type=\"email\">\n            </mat-form-field>\n\n            <div class=\"show-hide-extra-fields\" (click)=\"toggleExtraToFields()\">\n                <span [fxShow]=\"!showExtraToFields\">Show CC & BCC</span>\n                <span [fxShow]=\"showExtraToFields\">Hide CC & BCC</span>\n            </div>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>To</mat-label>\n                <input matInput name=\"to\"\n                       formControlName=\"to\"\n                       type=\"email\" required>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" [fxShow]=\"showExtraToFields\">\n                <mat-label>Cc</mat-label>\n                <input matInput\n                       name=\"cc\"\n                       formControlName=\"cc\"\n                       type=\"email\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" [fxShow]=\"showExtraToFields\">\n                <mat-label>Bcc</mat-label>\n                <input matInput\n                       name=\"bcc\"\n                       formControlName=\"bcc\"\n                       type=\"email\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Subject</mat-label>\n                <input matInput name=\"subject\"\n                       formControlName=\"subject\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Message</mat-label>\n                <textarea matInput name=\"message\"\n                          formControlName=\"message\"\n                          rows=\"6\">\n                </textarea>\n            </mat-form-field>\n\n            <div class=\"attachment-list\">\n\n                <div class=\"attachment\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                    <div>\n                        <span class=\"filename\">attachment-2.doc</span>\n                        <span class=\"size ml-4\">(12 Kb)</span>\n                    </div>\n\n                    <button mat-icon-button aria-label=\"Delete attachment\">\n                        <mat-icon class=\"s-16\">close</mat-icon>\n                    </button>\n                </div>\n\n                <div class=\"attachment\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                    <div>\n                        <span class=\"filename\">attachment-1.jpg</span>\n                        <span class=\"size ml-4\">(350 Kb)</span>\n                    </div>\n\n                    <button mat-icon-button aria-label=\"Delete attachment\">\n                        <mat-icon class=\"s-16\">close</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <div mat-dialog-actions class=\"m-0 p-16\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div>\n            <button mat-raised-button\n                    color=\"accent\"\n                    (click)=\"matDialogRef.close(['send',composeForm])\"\n                    class=\"save-button\"\n                    [disabled]=\"composeForm.invalid\"\n                    aria-label=\"SAVE\">\n                SEND\n            </button>\n\n            <button mat-icon-button matTooltip=\"Attach a file\">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n        </div>\n\n        <button mat-icon-button (click)=\"matDialogRef.close(['delete',composeForm])\"\n                aria-label=\"Delete\"\n                matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n        </button>\n    </div>\n</div>\n"],"sourceRoot":"webpack:///"}
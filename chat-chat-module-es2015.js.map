{"version":3,"sources":["./src/app/main/apps/chat/sidenavs/left/left.component.ts","./src/app/main/apps/chat/sidenavs/left/left.component.html","./src/app/main/apps/chat/chat.service.ts","./src/app/main/apps/chat/chat.component.ts","./src/app/main/apps/chat/chat.component.html","./src/app/main/apps/chat/chat-view/chat-view.component.ts","./src/app/main/apps/chat/chat-view/chat-view.component.html","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","./src/app/main/apps/chat/sidenavs/left/chats/chats.component.ts","./src/app/main/apps/chat/sidenavs/left/chats/chats.component.html","./src/app/main/apps/chat/sidenavs/left/user/user.component.ts","./src/app/main/apps/chat/sidenavs/left/user/user.component.html","./src/app/main/apps/chat/sidenavs/right/right.component.ts","./src/app/main/apps/chat/sidenavs/right/right.component.html","./src/app/main/apps/chat/sidenavs/right/contact/contact.component.ts","./src/app/main/apps/chat/sidenavs/right/contact/contact.component.html","./src/app/main/apps/chat/chat.module.ts","./src/app/main/apps/chat/chat-start/chat-start.component.ts","./src/app/main/apps/chat/chat-start/chat-start.component.html"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACY;AAEO;;;;;;;;ICH9C,mFAGqB;;IADD,oFAAe;;;IAGnC,kFAIoB;;IAFD,mFAAc;;ADO9B,MAAM,wBAAwB;IAOjC;;;;OAIG;IACH,YACY,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAGjC,mBAAmB;QACnB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QAEpB,2BAA2B;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,4CAAO,EAAE,CAAC;IACzC,CAAC;IAED,wGAAwG;IACxG,oBAAoB;IACpB,wGAAwG;IAExG;;OAEG;IACH,QAAQ;QAEJ,IAAI,CAAC,YAAY,CAAC,wBAAwB;aACrC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACrC,SAAS,CAAC,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;IACX,CAAC;IAED;;OAEG;IACH,WAAW;QAEP,qCAAqC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;;gGA/CQ,wBAAwB;wGAAxB,wBAAwB;QCfrC,yEACI;QAAA,kJAGqB;QAErB,gJAIoB;QACxB,4DAAM;;QAXD,8EAAiB;QAEG,0DAAqB;QAArB,iFAAqB;QAKtB,0DAAoB;QAApB,gFAAoB;kxDDMzB,+DAAc;;;;;;;;;;;;;AEVjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AAEpB;;;AAGjC,MAAM,WAAW;IAYpB;;;;OAIG;IACH,YACY,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAG/B,mBAAmB;QACnB,IAAI,CAAC,cAAc,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,iBAAiB,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,GAAG,IAAI,4CAAO,EAAE,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,IAAI,4CAAO,EAAE,CAAC;QACnC,IAAI,CAAC,wBAAwB,GAAG,IAAI,4CAAO,EAAE,CAAC;QAC9C,IAAI,CAAC,yBAAyB,GAAG,IAAI,4CAAO,EAAE,CAAC;IACnD,CAAC;IAED;;;;;;OAMG;IACH,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAE7D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,OAAO,CAAC,GAAG,CAAC;gBACR,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,OAAO,EAAE;aACjB,CAAC,CAAC,IAAI,CACH,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE;gBACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,OAAO,EAAE,CAAC;YACd,CAAC,EACD,MAAM,CACT,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,SAAS;QAEb,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YAC9C,OAAO,IAAI,CAAC,SAAS,KAAK,SAAS,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,4CAA4C;QAC5C,IAAK,CAAC,QAAQ,EACd;YACI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;gBAC5C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;YACH,OAAO;SACV;QAED,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,iBAAiB,GAAG,QAAQ,CAAC,EAAE,CAAC;iBAChD,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;gBACzB,MAAM,IAAI,GAAG,QAAQ,CAAC;gBAEtB,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;oBAC/C,OAAO,OAAO,CAAC,EAAE,KAAK,SAAS,CAAC;gBACpC,CAAC,CAAC,CAAC;gBAEH,MAAM,QAAQ,GAAG;oBACb,MAAM,EAAG,IAAI,CAAC,EAAE;oBAChB,MAAM,EAAG,IAAI,CAAC,MAAM;oBACpB,OAAO,EAAE,WAAW;iBACvB,CAAC;gBAEF,IAAI,CAAC,cAAc,CAAC,IAAI,mBAAK,QAAQ,EAAE,CAAC;YAE5C,CAAC,EAAE,MAAM,CAAC,CAAC;QAEnB,CAAC,CAAC,CAAC;IAEP,CAAC;IAED;;;;;OAKG;IACH,aAAa,CAAC,SAAS;QAEnB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAEnC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;gBACxC,OAAO,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC;YACjC,CAAC,CAAC,CAAC;YAEH,MAAM,MAAM,GAAG,qDAAS,CAAC,YAAY,EAAE,CAAC;YAExC,MAAM,IAAI,GAAG;gBACT,EAAE,EAAM,MAAM;gBACd,MAAM,EAAE,EAAE;aACb,CAAC;YAEF,MAAM,YAAY,GAAG;gBACjB,SAAS,EAAQ,SAAS;gBAC1B,EAAE,EAAe,MAAM;gBACvB,eAAe,EAAE,0BAA0B;gBAC3C,IAAI,EAAa,OAAO,CAAC,IAAI;gBAC7B,MAAM,EAAW,IAAI;aACxB,CAAC;YAEF,iDAAiD;YACjD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAEtC,wBAAwB;YACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,oBAAM,IAAI,EAAE;iBAC7C,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;gBAEzB,6BAA6B;gBAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;qBAC5D,SAAS,CAAC,WAAW,CAAC,EAAE;oBAErB,mCAAmC;oBACnC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;wBAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;wBACrC,OAAO,CAAC,WAAW,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACX,CAAC,EAAE,MAAM,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,aAAa,CAAC,OAAO;QAEjB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACH,aAAa,CAAC,MAAM;QAEhB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC9B,CAAC;IAED;;;;OAIG;IACH,cAAc,CAAC,QAAQ;QAEnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC;aAC3D,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACrB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACzB,CAAC,CACJ,CAAC;IACV,CAAC;IAED;;;;;;OAMG;IACH,YAAY,CAAC,MAAM,EAAE,MAAM;QAEvB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAEnC,MAAM,OAAO,GAAG;gBACZ,EAAE,EAAM,MAAM;gBACd,MAAM,EAAE,MAAM;aACjB,CAAC;YAEF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,GAAG,MAAM,EAAE,OAAO,CAAC;iBACrD,SAAS,CAAC,WAAW,CAAC,EAAE;gBACrB,OAAO,CAAC,WAAW,CAAC,CAAC;YACzB,CAAC,EAAE,MAAM,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,WAAW;QAEP,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,mBAAmB,CAAC;iBACpC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;gBACzB,OAAO,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC,EAAE,MAAM,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,QAAQ;QAEJ,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC;iBACjC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;gBACzB,OAAO,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC,EAAE,MAAM,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,OAAO;QAEH,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC;iBAChC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;gBACzB,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YACzB,CAAC,EAAE,MAAM,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;;sEA1PQ,WAAW;8FAAX,WAAW,WAAX,WAAW;;;;;;;;;;;;;ACPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACY;AAEO;;;;;;;;;;;;ICkBlC,wEAA+C;;;IAE/C,uEAA4C;;ADTrD,MAAM,aAAa;IAOtB;;;;OAIG;IACH,YACY,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAGjC,2BAA2B;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,4CAAO,EAAE,CAAC;IACzC,CAAC;IAED,wGAAwG;IACxG,oBAAoB;IACpB,wGAAwG;IAExG;;OAEG;IACH,QAAQ;QAEJ,IAAI,CAAC,YAAY,CAAC,cAAc;aAC3B,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACrC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QACjC,CAAC,CAAC,CAAC;IACX,CAAC;IAED;;OAEG;IACH,WAAW;QAEP,qCAAqC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;;0EA5CQ,aAAa;6FAAb,aAAa;QCf1B,yEAEI;QACA,oEAAiC;QAIjC,yEAEI;QACA,yEAEI;QAAA,wFAEI;QACA,iFAEI;QAAA,+EAAuC;QAC3C,4DAAc;QAId,uHAA+C;QAE/C,qHAA4C;QAI5C,iFAEI;QAAA,iFAAyC;QAC7C,4DAAc;QAGlB,4DAAwB;QAE5B,4DAAM;QAGV,4DAAM;QAGV,4DAAM;;QApBuB,0DAAmB;QAAnB,mFAAmB;QAEpB,0DAAkB;QAAlB,kFAAkB;+rsTDX3B,+DAAc;;;;;;;;;;;;;AEXjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACY;AAE8E;;;;;;;;;;;;;;;;;;ICmEzG,qEAIA;;;IAHK,8JAAwB;;;;IATjC,0EAQI;IAAA,qHAIA;IAAA,0EACI;IAAA,0EAAqB;IAAA,uDAAmB;IAAA,4DAAM;IAC9C,0EAAiC;IAAA,uDAA+B;;IAAA,4DAAM;IAC1E,4DAAM;IAEV,4DAAM;;;;;IAhBD,+SAKa;IAER,0DAAyC;IAAzC,kHAAyC;IAKtB,0DAAmB;IAAnB,mFAAmB;IACP,0DAA+B;IAA/B,0JAA+B;;AD/D7E,MAAM,iBAAiB;IAqB1B;;;;OAIG;IACH,YACY,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAGjC,2BAA2B;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,4CAAO,EAAE,CAAC;IACzC,CAAC;IAED,wGAAwG;IACxG,oBAAoB;IACpB,wGAAwG;IAExG;;OAEG;IACH,QAAQ;QAEJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;QACnC,IAAI,CAAC,YAAY,CAAC,cAAc;aAC3B,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACrC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAK,QAAQ,EACb;gBACI,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;gBAC7B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;gBAChC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;gBAC9B,IAAI,CAAC,YAAY,EAAE,CAAC;aACvB;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED;;OAEG;IACH,eAAe;QAEX,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,aAAa,CAAC;QAC3D,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED;;OAEG;IACH,WAAW;QAEP,qCAAqC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;IAED,wGAAwG;IACxG,mBAAmB;IACnB,wGAAwG;IAExG;;;;;;OAMG;IACH,uBAAuB,CAAC,OAAO,EAAE,CAAC;QAE9B,OAAO,CACH,OAAO,CAAC,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,EAAE;YAC/B,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAC9F,CAAC;IACN,CAAC;IAED;;;;;;OAMG;IACH,qBAAqB,CAAC,OAAO,EAAE,CAAC;QAE5B,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC;IACrF,CAAC;IAED;;;;;;OAMG;IACH,oBAAoB,CAAC,OAAO,EAAE,CAAC;QAE3B,OAAO,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC;IAC1G,CAAC;IAED;;OAEG;IACH,aAAa;QAET,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IAED;;OAEG;IACH,YAAY;QAER,UAAU,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,eAAe;QAEX,UAAU,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,cAAc,CAAC,KAAc;QAEzB,KAAK,GAAG,KAAK,IAAI,GAAG,CAAC;QACrB,IAAK,IAAI,CAAC,eAAe,EACzB;YACI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;YAE9B,UAAU,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,KAAK;QAEP,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,IAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EACvC;YACI,OAAO;SACV;QAED,UAAU;QACV,MAAM,OAAO,GAAG;YACZ,GAAG,EAAM,IAAI,CAAC,IAAI,CAAC,EAAE;YACrB,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;YAC1C,IAAI,EAAK,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SACpC,CAAC;QAEF,8BAA8B;QAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE1B,uBAAuB;QACvB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAEvB,oBAAoB;QACpB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAClF,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;;kFAnMQ,iBAAiB;iGAAjB,iBAAiB;kEASf,sIAA6B;;;;;;;;;QCvB5C,yEAEI;QACA,iFAEI;QAAA,yEAEI;QAAA,yEAEI;QACA,4EAGI;QAAA,2EAAU;QAAA,+DAAI;QAAA,4DAAW;QAC7B,4DAAS;QAIT,yEAGI;QAF4C,sIAAS,mBAAe,IAAC;QAErE,yEAEI;QAAA,oEAIA;QAAA,0EAEW;QACf,4DAAM;QAEN,0EACI;QAAA,wDACJ;QAAA,4DAAM;QAEV,4DAAM;QAEV,4DAAM;QAEN,uEACI;QAAA,8EACI;QAAA,4EAAU;QAAA,qEAAS;QAAA,4DAAW;QAClC,4DAAS;QAET,sFACI;QAAA,8EACI;QAD6D,0IAAS,mBAAe,IAAC;QACtF,0EACJ;QAAA,4DAAS;QACb,4DAAW;QACf,4DAAM;QAEV,4DAAM;QACV,4DAAc;QAId,2EAEI;QACA,2EAEI;QACA,iHAiBM;QAGV,4DAAM;QAGV,4DAAM;QAIN,2EAEI;QACA,2EAEI;QAAA,gFAKI;QAJE,oJAAY,iBAAa,IAAC,sGACT,iBAAa,IADJ;QAI5B,sFACI;QAAA,+EACoF;QACxF,4DAAiB;QAEjB,8EACI;QAAA,gFAAiC;QAAA,gEAAI;QAAA,4DAAW;QACpD,4DAAS;QAEb,4DAAO;QAEX,4DAAM;QAGV,4DAAM;QAGV,4DAAM;;;QA5FuB,0DAAsB;QAAtB,4FAAsB;QAFtB,gJAAsB;QAKjB,0DAA0B;QAA1B,uFAA0B;QAKpC,0DACJ;QADI,4FACJ;QAOoB,0DAAiC;QAAjC,kFAAiC;QAsBpC,0DAAW;QAAX,+EAAW;QAuCK,0DAAU;QAAV,mEAAU;;;;;;;;;;;;;;ACvG/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoI;AACvD;AACpB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,sBAAsB,+DAAwB,EAAE,wJAAwJ;AACxM,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF,oBAAoB,+DAAwB,EAAE,8IAA8I;AAC5L,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,qCAAqC;AACjG,uBAAuB,+DAAwB,EAAE,6JAA6J;AAC9M,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,sBAAsB,+DAAwB,EAAE,wKAAwK;AACxN,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,iBAAiB,gCAAgC;AACnE;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC;AAC3F,qBAAqB,+DAAwB,EAAE,2FAA2F;AAC1I,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF,oBAAoB,+DAAwB,EAAE,0HAA0H;AACxK,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,sBAAsB,+DAAwB,EAAE,uIAAuI;AACvL,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,sBAAsB,+DAAwB,EAAE,wIAAwI;AACxL,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,sBAAsB,+DAAwB,EAAE,uIAAuI;AACvL,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,sBAAsB,+DAAwB,EAAE,wIAAwI;AACxL,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC;AAC3F,qBAAqB,+DAAwB,EAAE,8HAA8H;AAC7K,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B,+DAAwB,CAAC,0FAAqB,MAAM;AAC3H,eAAe,+DAAwB,EAAE,iKAAiK;AAC1M,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,mHAAmH;AAC1H,QAAQ,6DAAsB;AAC9B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,sBAAsB,yDAAyD,cAAc,kBAAkB,aAAa,kBAAkB,kCAAkC,gBAAgB,eAAe,kCAAkC,kBAAkB,OAAO,WAAW,4CAA4C,UAAU,QAAQ,oDAAoD,gBAAgB,SAAS,8DAA8D,eAAe,oCAAoC,kBAAkB,uDAAuD,cAAc,mBAAmB,gBAAgB,cAAc,kBAAkB,kBAAkB,iBAAiB,kBAAkB,cAAc,4BAA4B,aAAa,yBAAyB,gBAAgB,wBAAwB,0BAA0B,iBAAiB,cAAc,2BAA2B,yGAAyG,aAAa,iBAAiB,aAAa,mBAAmB,iCAAiC,mBAAmB,sBAAsB,cAAc,iBAAiB,YAAY,WAAW,kBAAkB,cAAc,iBAAiB,sBAAsB,aAAa,8BAA8B,mBAAmB,WAAW,YAAY,mBAAmB,YAAY,aAAa,mBAAmB,YAAY,aAAa,mBAAmB,YAAY,aAAa,YAAY,yCAAyC,kBAAkB,yBAAyB,sBAAsB,SAAS,mBAAmB,cAAc,gBAAgB,sDAAsD,aAAa,gGAAgG,gBAAgB,4BAA4B,iBAAiB,+BAA+B,gCAAgC,uCAAuC,mBAAmB,iBAAiB,6IAA6I,cAAc,eAAe,uEAAuE,gBAAgB,sDAAsD,gBAAgB,yCAAyC,gBAAgB,wCAAwC,mBAAmB,4CAA4C;AAC3/E;AACA,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI;AACrG;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA,iBAAiB;AACjB,oCAAoC,yDAAyD,cAAc,kBAAkB,aAAa,kBAAkB,kCAAkC,gBAAgB,eAAe,kCAAkC,kBAAkB,OAAO,WAAW,4CAA4C,UAAU,QAAQ,oDAAoD,gBAAgB,SAAS,8DAA8D,eAAe,oCAAoC,kBAAkB,uDAAuD,cAAc,mBAAmB,gBAAgB,cAAc,kBAAkB,kBAAkB,iBAAiB,kBAAkB,cAAc,4BAA4B,aAAa,yBAAyB,gBAAgB,wBAAwB,0BAA0B,iBAAiB,cAAc,2BAA2B,yGAAyG,aAAa,iBAAiB,aAAa,mBAAmB,iCAAiC,mBAAmB,sBAAsB,cAAc,iBAAiB,YAAY,WAAW,kBAAkB,cAAc,iBAAiB,sBAAsB,aAAa,8BAA8B,mBAAmB,WAAW,YAAY,mBAAmB,YAAY,aAAa,mBAAmB,YAAY,aAAa,mBAAmB,YAAY,aAAa,YAAY,yCAAyC,kBAAkB,yBAAyB,sBAAsB,SAAS,mBAAmB,cAAc,gBAAgB,sDAAsD,aAAa,gGAAgG,gBAAgB,4BAA4B,iBAAiB,+BAA+B,gCAAgC,uCAAuC,mBAAmB,iBAAiB,6IAA6I,cAAc,eAAe,uEAAuE,gBAAgB,sDAAsD,gBAAgB,yCAAyC,gBAAgB,wCAAwC,mBAAmB;AACt9E,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,0FAAqB;AAC5C,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC;AAC3F,qBAAqB,+DAAwB,EAAE,kOAAkO;AACjR,QAAQ,6DAAsB;AAC9B,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,wCAAwC;AAC/C,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,uCAAuC;AACvG,yBAAyB,+DAAwB,EAAE,6MAA6M;AAChQ,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,wCAAwC;AAC/C,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAuB,EAAE,sBAAsB;AACpE,qBAAqB,8DAAuB,EAAE,6CAA6C,mCAAmC,EAAE,aAAa,sEAAe,GAAG,sEAAe,GAAG;AACjL,cAAc,oDAAoD,gEAAyB,iBAAiB,4BAA4B,+NAA+N,EAAE,wBAAwB,SAAS,sEAAe,EAAE,EAAE,wBAAwB,+NAA+N,sEAAe,EAAE,EAAE,EAAE,EAAE,EAAE;AAC7qB,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA,0BAA0B,sEAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE+O;;AAE/O,gC;;;;;;;;;;;;ACrWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACY;AAEO;;;;;;;;;;;;;;;;;;;ICuGtC,0EACI;IAAA,kEACJ;IAAA,4DAAM;;;IA0BU,0EAAkE;IAAA,uDAAe;IAAA,4DAAM;;;IAArB,0DAAe;IAAf,+EAAe;;;;;;IAxBjG,6EAKI;IAHI,yXAAiC;IAGrC,yEAEI;IAAA,0EACI;IAAA,qEAEA;;;IAAA,0EAAgG;;IACpG,4DAAM;IAEN,0EAEI;IAAA,0EACI;IAAA,2EAA0B;IAAA,wDAA4C;;IAAA,4DAAM;IAC5E,2EAAkC;IAAA,wDAAoB;IAAA,4DAAM;IAChE,4DAAM;IAEN,2EACI;IAAA,2EACI;IAAA,wDACJ;;IAAA,4DAAM;IACN,wIAAuF;IAC3F,4DAAM;IAEV,4DAAM;IAEV,4DAAM;IAEV,4DAAS;;;;IA5BD,oNAA0C;IAMjC,0DAAkD;IAAlD,wLAAkD;IADnC,2OAAkD;IAExC,0DAAsD;IAAtD,mLAAsD;IAMtD,0DAA4C;IAA5C,8KAA4C;IACpC,0DAAoB;IAApB,oFAAoB;IAKlD,0DACJ;IADI,sKACJ;IACM,0DAAiB;IAAjB,gFAAiB;;;IAevC,0EACI;IAAA,qEACJ;IAAA,4DAAM;;;;IAEN,6EAKI;IAHI,0XAA6B;IAGjC,yEAEI;IAAA,0EACI;IAAA,qEACA;IAAA,0EAAoE;IACxE,4DAAM;IAEN,0EACI;IAAA,0EAA0B;IAAA,uDAAgB;IAAA,4DAAM;IAChD,wEAAwB;IAAA,uDAAgB;IAAA,4DAAI;IAChD,4DAAM;IAEV,4DAAM;IAEV,4DAAS;;;IAhBD,kNAA0C;IAKjC,0DAAwB;IAAxB,2JAAwB;IAA2B,4FAAsB;IAChD,0DAA0B;IAA1B,uFAA0B;IAI9B,0DAAgB;IAAhB,iFAAgB;IAClB,0DAAgB;IAAhB,iFAAgB;;;IAWxD,0EACI;IAAA,yEACJ;IAAA,4DAAM;;;;IA/EV,sEAEI;IACA,0EAEI;IAAA,6HAEM;;IAEN,qIA+BS;;IAEb,4DAAM;IAIN,0EAEI;IAAA,6HAEM;;IAEN,oIAmBS;;IAEb,4DAAM;IAIN,+HAEM;;IAGV,4DAAM;;;IAlFY,mJAAgC;IAKvB,0DAAqD;IAArD,qLAAqD;IAK/C,0DAAqC;IAArC,6KAAqC;IAsC3C,0DAAgD;IAAhD,iLAAgD;IAKvC,0DAA+B;IAA/B,0KAA+B;IAwBzD,0DAAkD;IAAlD,oLAAkD;;ADnKzD,MAAM,yBAAyB;IAWlC;;;;;;OAMG;IACH,YACY,YAAyB,EACzB,4BAAyD,EAC1D,cAA6B;QAF5B,iBAAY,GAAZ,YAAY,CAAa;QACzB,iCAA4B,GAA5B,4BAA4B,CAA6B;QAC1D,mBAAc,GAAd,cAAc,CAAe;QAGpC,mBAAmB;QACnB,IAAI,CAAC,UAAU,GAAG;YACd,IAAI,EAAE,EAAE;SACX,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,2BAA2B;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,4CAAO,EAAE,CAAC;IACzC,CAAC;IAED,wGAAwG;IACxG,oBAAoB;IACpB,wGAAwG;IAExG;;OAEG;IACH,QAAQ;QAEJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QAE3C,IAAI,CAAC,YAAY,CAAC,cAAc;aAC3B,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACrC,SAAS,CAAC,YAAY,CAAC,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,YAAY,CAAC,aAAa;aAC1B,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACrC,SAAS,CAAC,WAAW,CAAC,EAAE;YACrB,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QAC5B,CAAC,CAAC,CAAC;IACX,CAAC;IAED;;OAEG;IACH,WAAW;QAEP,qCAAqC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;IAED,wGAAwG;IACxG,mBAAmB;IACnB,wGAAwG;IAExG;;;;OAIG;IACH,OAAO,CAAC,OAAO;QAEX,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAEnC,IAAK,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC3C;YACI,IAAI,CAAC,4BAA4B,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,MAAM,EAAE,CAAC;SAC9E;IACL,CAAC;IAED;;;;OAIG;IACH,aAAa,CAAC,MAAM;QAEhB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED;;;;OAIG;IACH,qBAAqB,CAAC,IAAI;QAEtB,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED;;OAEG;IACH,MAAM;QAEF,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IACpC,CAAC;;kGAnHQ,yBAAyB;yGAAzB,yBAAyB;QChBtC,yEACI;QACA,8EAEI;QACA,qFAEI;QACA,yEAEI;QACA,yEAIA;QAJK,8IAAS,0BAAsB,MAAM,CAAC,IAAC;QAA5C,4DAIA;QAEA,yEAC0D;QAG1D,iFAEI;QAAA,4EACI;QADkB,iJAAS,kBAAc,QAAQ,CAAC,IAAC;QACnD,yEACI;QAAA,0EAAgD;QAChD,wEAAM;QAAA,kEAAM;QAAA,4DAAO;QACvB,4DAAM;QACV,4DAAS;QAET,6EACI;QADkB,kJAAS,kBAAc,MAAM,CAAC,IAAC;QACjD,0EACI;QAAA,2EAA8C;QAC9C,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACrB,4DAAM;QACV,4DAAS;QAET,6EACI;QADkB,kJAAS,kBAAc,gBAAgB,CAAC,IAAC;QAC3D,0EACI;QAAA,2EAAwD;QACxD,wEAAM;QAAA,0EAAc;QAAA,4DAAO;QAC/B,4DAAM;QACV,4DAAS;QAET,6EACI;QADkB,kJAAS,kBAAc,SAAS,CAAC,IAAC;QACpD,0EACI;QAAA,2EAAiD;QACjD,wEAAM;QAAA,mEAAO;QAAA,4DAAO;QACxB,4DAAM;QACV,4DAAS;QACb,4DAAW;QAGf,4DAAM;QAGN,uEACI;QAAA,8EAGI;QAAA,4EAAU;QAAA,qEAAS;QAAA,4DAAW;QAClC,4DAAS;QACT,sFACI;QAAA,6EACI;QADkB,kJAAS,0BAAsB,MAAM,CAAC,IAAC;QACzD,qEACJ;QAAA,4DAAS;QACT,6EACI;QADkB,kJAAS,YAAQ,IAAC;QACpC,oEACJ;QAAA,4DAAS;QACb,4DAAW;QACf,4DAAM;QAEV,4DAAkB;QAIlB,mFAEI;QACA,2EAEI;QAAA,2EACI;QAAA,gFAAsC;QAAA,kEAAM;QAAA,4DAAW;QACvD,6EACJ;QADW,kMAAwB;QAA/B,4DACJ;QAAA,4DAAM;QAEV,4DAAM;QAGV,4DAAkB;QAGtB,4DAAc;QAGlB,4DAAM;QAIN,2EAEI;QACA,0HAkFM;QAGV,4DAAM;;;;QA/Ke,0DAAqB;QAArB,wJAAqB;QAErB,yFAAmB;QAGM,0DAAuB;QAAvB,oFAAuB;QAyC7C,2DAA8B;QAA9B,kFAA8B;QAyB3B,2DAAwB;QAAxB,mFAAwB;mt0TDrEhC,+DAAc;;;;;;;;;;;;;AEdjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACzB;AACgD;;;;;;;;;;;AAUxE,MAAM,wBAAwB;IAQjC;;;;OAIG;IACH,YACY,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAGjC,2BAA2B;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,4CAAO,EAAE,CAAC;IACzC,CAAC;IAED,wGAAwG;IACxG,oBAAoB;IACpB,wGAAwG;IAExG;;OAEG;IACH,QAAQ;QAEJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;QAEnC,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAS,CAAC;YAC1B,IAAI,EAAI,IAAI,0DAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACvC,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SAC5C,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,YAAY;aACrB,IAAI,CACD,gEAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAC/B,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,CACzB;aACA,SAAS,CAAC,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACX,CAAC;IAED;;OAEG;IACH,WAAW;QAEP,qCAAqC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;IAED,wGAAwG;IACxG,mBAAmB;IACnB,wGAAwG;IAExG;;;;OAIG;IACH,qBAAqB,CAAC,IAAI;QAEtB,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;;gGAxEQ,wBAAwB;wGAAxB,wBAAwB;QCZrC,yEAEI;QACA,iFAEI;QACA,qFAEI;QAAA,4EACI;QADoB,gJAAS,0BAAsB,OAAO,CAAC,IAAC;QAC5D,2EAAU;QAAA,qEAAU;QAAA,4DAAW;QACnC,4DAAS;QAEb,4DAAkB;QAIlB,qFAEI;QAAA,oEACA;QAAA,yEAA4B;QAAA,uDAAa;QAAA,4DAAM;QAEnD,4DAAkB;QAGtB,4DAAc;QAElB,4DAAM;QAGN,0EAEI;QACA,2EAEI;QAAA,qFACI;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,2EAA0E;QAC9E,4DAAiB;QAEjB,uFAEI;QAAA,wFACI;QAAA,2EACI;QAAA,2EAAgD;QAChD,4EAAyB;QAAA,kEAAM;QAAA,4DAAO;QAC1C,4DAAM;QACV,4DAAmB;QAEnB,wFACI;QAAA,2EACI;QAAA,2EAA8C;QAC9C,4EAAyB;QAAA,gEAAI;QAAA,4DAAO;QACxC,4DAAM;QACV,4DAAmB;QAEnB,wFACI;QAAA,2EACI;QAAA,2EAAwD;QACxD,4EAAyB;QAAA,0EAAc;QAAA,4DAAO;QAClD,4DAAM;QACV,4DAAmB;QAEnB,wFACI;QAAA,2EACI;QAAA,2EAAiD;QACjD,4EAAyB;QAAA,mEAAO;QAAA,4DAAO;QAC3C,4DAAM;QACV,4DAAmB;QACvB,4DAAkB;QAEtB,4DAAO;QAGX,4DAAM;;QAvD+D,0DAAmB;QAAnB,yFAAmB;QAAvE,6IAAmB;QACI,0DAAa;QAAb,8EAAa;QAa3C,0DAAsB;QAAtB,mFAAsB;;;;;;;;;;;;;;AChChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACY;AAEO;;;;;;;ICF9C,qFAIuB;;IAFD,oFAAe;;ADWlC,MAAM,yBAAyB;IAOlC,YACY,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAGjC,mBAAmB;QACnB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QAEtB,2BAA2B;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,4CAAO,EAAE,CAAC;IACzC,CAAC;IAED,wGAAwG;IACxG,oBAAoB;IACpB,wGAAwG;IAExG;;OAEG;IACH,QAAQ;QAEJ,IAAI,CAAC,YAAY,CAAC,yBAAyB;aACtC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACrC,SAAS,CAAC,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;IACX,CAAC;IAED;;OAEG;IACH,WAAW;QAEP,qCAAqC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;;kGA1CQ,yBAAyB;yGAAzB,yBAAyB;QCftC,yEAEI;QAAA,uJAIuB;QAE3B,4DAAM;;QARD,8EAAiB;QAGK,0DAAuB;QAAvB,mFAAuB;irDDU/B,+DAAc;;;;;;;;;;;;;AEZjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACY;;;;;;;;;;ICD3C,yEAEI;IACA,iFAEI;IACA,qFAEI;IAAA,sEAAK;IAAA,uEAAY;IAAA,4DAAM;IAEvB,4EACI;IAAA,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC9B,4DAAS;IAEb,4DAAkB;IAIlB,qFACI;IAAA,oEACA;IAAA,0EAA+B;IAAA,wDAAgB;IAAA,4DAAM;IACzD,4DAAkB;IAGtB,4DAAc;IAElB,4DAAM;;;IAPqE,0DAAsB;IAAtB,+FAAsB;IAAhF,mJAAsB;IACI,0DAAgB;IAAhB,oFAAgB;;;IAS3D,yEAEI;IACA,0EAAiC;IAAA,+DAAI;IAAA,4DAAM;IAC3C,sEAAK;IAAA,uDAAgB;IAAA,4DAAM;IAG/B,4DAAM;;;IAHG,0DAAgB;IAAhB,oFAAgB;;ADtBlB,MAAM,2BAA2B;IAOpC;;;;OAIG;IACH,YACY,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAGjC,2BAA2B;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,4CAAO,EAAE,CAAC;IACzC,CAAC;IAED,wGAAwG;IACxG,oBAAoB;IACpB,wGAAwG;IAExG;;OAEG;IACH,QAAQ;QAEJ,IAAI,CAAC,YAAY,CAAC,iBAAiB;aAC9B,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACrC,SAAS,CAAC,OAAO,CAAC,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAC3B,CAAC,CAAC,CAAC;IACX,CAAC;IAED;;OAEG;IACH,WAAW;QAEP,qCAAqC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;;sGA5CQ,2BAA2B;2GAA3B,2BAA2B;QCXxC,wHA0BM;QAGN,uHAOM;;QApCuB,6EAAa;QA6ByB,0DAAa;QAAb,6EAAa;;;;;;;;;;;;;;AC7BhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEI;AACJ;AACW;AACX;AACE;AACF;AACA;AACE;AACI;AACA;AAEN;AAEO;AACI;AACsB;AACH;AACc;AACH;AACL;AACG;AACY;;;AAE1G,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,gFAAa;QACxB,QAAQ,EAAE,EAAE;QACZ,OAAO,EAAE;YACL,IAAI,EAAE,4EAAW;SACpB;KACJ;CACJ,CAAC;AAiCK,MAAM,UAAU;;0FAAV,UAAU;+IAAV,UAAU,mBAJL;QACV,4EAAW;KACd,YAlBa;YACV,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAE7B,wEAAe;YACf,oEAAa;YACb,+EAAkB;YAClB,oEAAa;YACb,sEAAc;YACd,oEAAa;YACb,oEAAa;YACb,sEAAc;YACd,0EAAgB;YAChB,2EAAgB;YAEhB,qEAAgB;SACnB;oIAKQ,UAAU,mBA7Bf,gFAAa;QACb,mGAAiB;QACjB,sGAAkB;QAClB,iHAAyB;QACzB,8GAAwB;QACxB,yGAAwB;QACxB,4GAAyB;QACzB,wHAA2B,2EAK3B,wEAAe;QACf,oEAAa;QACb,+EAAkB;QAClB,oEAAa;QACb,sEAAc;QACd,oEAAa;QACb,oEAAa;QACb,sEAAc;QACd,0EAAgB;QAChB,2EAAgB;QAEhB,qEAAgB;;;;;;;;;;;;;AC5DxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;AAS3C,MAAM,kBAAkB;IAE3B;IAEA,CAAC;;oFAJQ,kBAAkB;kGAAlB,kBAAkB;QCX/B,yEAEI;QAAA,yEAEI;QAAA,8EAA2C;QAAA,+DAAI;QAAA,4DAAW;QAC9D,4DAAM;QAEN,0EACI;QAAA,qEACJ;QAAA,4DAAO;QAEP,0EACI;QAAA,8FACJ;QAAA,4DAAO;QAEP,4EACI;QAAA,8FACJ;QAAA,4DAAS;QAEb,4DAAM;;QAhBG,0DAA0D;QAA1D,kNAA0D;QAI5B,0DAAwD;QAAxD,kNAAwD;QAI7C,0DAAwD;QAAxD,mNAAwD;yopTDFvF,+DAAc","file":"chat-chat-module-es2015.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-left-sidenav',\n    templateUrl  : './left.component.html',\n    styleUrls    : ['./left.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatLeftSidenavComponent implements OnInit, OnDestroy\n{\n    view: string;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the defaults\n        this.view = 'chats';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._chatService.onLeftSidenavViewChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(view => {\n                this.view = view;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n}\n","<div [ngSwitch]=\"view\" class=\"views\">\n    <chat-chats-sidenav class=\"view\"\n                        *ngSwitchCase=\"'chats'\"\n                        [@slideInRight]>\n    </chat-chats-sidenav>\n\n    <chat-user-sidenav class=\"view\"\n                       *ngSwitchCase=\"'user'\"\n                       [@slideInLeft]\n                       fusePerfectScrollbar>\n    </chat-user-sidenav>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { FuseUtils } from '@fuse/utils';\n\n@Injectable()\nexport class ChatService implements Resolve<any>\n{\n    contacts: any[];\n    chats: any[];\n    user: any;\n    onChatSelected: BehaviorSubject<any>;\n    onContactSelected: BehaviorSubject<any>;\n    onChatsUpdated: Subject<any>;\n    onUserUpdated: Subject<any>;\n    onLeftSidenavViewChanged: Subject<any>;\n    onRightSidenavViewChanged: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpClient\n    )\n    {\n        // Set the defaults\n        this.onChatSelected = new BehaviorSubject(null);\n        this.onContactSelected = new BehaviorSubject(null);\n        this.onChatsUpdated = new Subject();\n        this.onUserUpdated = new Subject();\n        this.onLeftSidenavViewChanged = new Subject();\n        this.onRightSidenavViewChanged = new Subject();\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                this.getContacts(),\n                this.getChats(),\n                this.getUser()\n            ]).then(\n                ([contacts, chats, user]) => {\n                    this.contacts = contacts;\n                    this.chats = chats;\n                    this.user = user;\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get chat\n     *\n     * @param contactId\n     * @returns {Promise<any>}\n     */\n    getChat(contactId): Promise<any>\n    {\n        const chatItem = this.user.chatList.find((item) => {\n            return item.contactId === contactId;\n        });\n\n        // Create new chat, if it's not created yet.\n        if ( !chatItem )\n        {\n            this.createNewChat(contactId).then((newChats) => {\n                this.getChat(contactId);\n            });\n            return;\n        }\n\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/chat-chats/' + chatItem.id)\n                .subscribe((response: any) => {\n                    const chat = response;\n\n                    const chatContact = this.contacts.find((contact) => {\n                        return contact.id === contactId;\n                    });\n\n                    const chatData = {\n                        chatId : chat.id,\n                        dialog : chat.dialog,\n                        contact: chatContact\n                    };\n\n                    this.onChatSelected.next({...chatData});\n\n                }, reject);\n\n        });\n\n    }\n\n    /**\n     * Create new chat\n     *\n     * @param contactId\n     * @returns {Promise<any>}\n     */\n    createNewChat(contactId): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n\n            const contact = this.contacts.find((item) => {\n                return item.id === contactId;\n            });\n\n            const chatId = FuseUtils.generateGUID();\n\n            const chat = {\n                id    : chatId,\n                dialog: []\n            };\n\n            const chatListItem = {\n                contactId      : contactId,\n                id             : chatId,\n                lastMessageTime: '2017-02-18T10:30:18.931Z',\n                name           : contact.name,\n                unread         : null\n            };\n\n            // Add new chat list item to the user's chat list\n            this.user.chatList.push(chatListItem);\n\n            // Post the created chat\n            this._httpClient.post('api/chat-chats', {...chat})\n                .subscribe((response: any) => {\n\n                    // Post the new the user data\n                    this._httpClient.post('api/chat-user/' + this.user.id, this.user)\n                        .subscribe(newUserData => {\n\n                            // Update the user data from server\n                            this.getUser().then(updatedUser => {\n                                this.onUserUpdated.next(updatedUser);\n                                resolve(updatedUser);\n                            });\n                        });\n                }, reject);\n        });\n    }\n\n    /**\n     * Select contact\n     *\n     * @param contact\n     */\n    selectContact(contact): void\n    {\n        this.onContactSelected.next(contact);\n    }\n\n    /**\n     * Set user status\n     *\n     * @param status\n     */\n    setUserStatus(status): void\n    {\n        this.user.status = status;\n    }\n\n    /**\n     * Update user data\n     *\n     * @param userData\n     */\n    updateUserData(userData): void\n    {\n        this._httpClient.post('api/chat-user/' + this.user.id, userData)\n            .subscribe((response: any) => {\n                    this.user = userData;\n                }\n            );\n    }\n\n    /**\n     * Update the chat dialog\n     *\n     * @param chatId\n     * @param dialog\n     * @returns {Promise<any>}\n     */\n    updateDialog(chatId, dialog): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n\n            const newData = {\n                id    : chatId,\n                dialog: dialog\n            };\n\n            this._httpClient.post('api/chat-chats/' + chatId, newData)\n                .subscribe(updatedChat => {\n                    resolve(updatedChat);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get contacts\n     *\n     * @returns {Promise<any>}\n     */\n    getContacts(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/chat-contacts')\n                .subscribe((response: any) => {\n                    resolve(response);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get chats\n     *\n     * @returns {Promise<any>}\n     */\n    getChats(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/chat-chats')\n                .subscribe((response: any) => {\n                    resolve(response);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get user\n     *\n     * @returns {Promise<any>}\n     */\n    getUser(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/chat-user')\n                .subscribe((response: any) => {\n                    resolve(response[0]);\n                }, reject);\n        });\n    }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat',\n    templateUrl  : './chat.component.html',\n    styleUrls    : ['./chat.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatComponent implements OnInit, OnDestroy\n{\n    selectedChat: any;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._chatService.onChatSelected\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(chatData => {\n                this.selectedChat = chatData;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n}\n","<div id=\"chat\" class=\"page-layout carded fullwidth inner-scroll\">\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card\">\n\n            <mat-sidenav-container>\n\n                <!-- LEFT SIDENAV -->\n                <mat-sidenav class=\"sidenav\" position=\"start\" opened=\"true\" mode=\"side\"\n                             fuseMatSidenavHelper=\"chat-left-sidenav\" matIsLockedOpen=\"gt-md\">\n                    <chat-left-sidenav></chat-left-sidenav>\n                </mat-sidenav>\n                <!-- / LEFT SIDENAV -->\n\n                <!-- CONTENT -->\n                <chat-start *ngIf=\"!selectedChat\"></chat-start>\n\n                <chat-view *ngIf=\"selectedChat\"></chat-view>\n                <!-- / CONTENT -->\n\n                <!-- RIGHT SIDENAV -->\n                <mat-sidenav class=\"sidenav\" position=\"end\" opened=\"false\" mode=\"over\"\n                             fuseMatSidenavHelper=\"chat-right-sidenav\">\n                    <chat-right-sidenav></chat-right-sidenav>\n                </mat-sidenav>\n                <!-- / RIGHT SIDENAV -->\n\n            </mat-sidenav-container>\n\n        </div>\n        <!-- / CONTENT CARD -->\n\n    </div>\n    <!-- / CENTER -->\n\n</div>\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild, ViewChildren, ViewEncapsulation } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { FusePerfectScrollbarDirective } from '@fuse/directives/fuse-perfect-scrollbar/fuse-perfect-scrollbar.directive';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-view',\n    templateUrl  : './chat-view.component.html',\n    styleUrls    : ['./chat-view.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ChatViewComponent implements OnInit, OnDestroy, AfterViewInit\n{\n    user: any;\n    chat: any;\n    dialog: any;\n    contact: any;\n    replyInput: any;\n    selectedChat: any;\n\n    @ViewChild(FusePerfectScrollbarDirective)\n    directiveScroll: FusePerfectScrollbarDirective;\n\n    @ViewChildren('replyInput')\n    replyInputField;\n\n    @ViewChild('replyForm')\n    replyForm: NgForm;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this.user = this._chatService.user;\n        this._chatService.onChatSelected\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(chatData => {\n                if ( chatData )\n                {\n                    this.selectedChat = chatData;\n                    this.contact = chatData.contact;\n                    this.dialog = chatData.dialog;\n                    this.readyToReply();\n                }\n            });\n    }\n\n    /**\n     * After view init\n     */\n    ngAfterViewInit(): void\n    {\n        this.replyInput = this.replyInputField.first.nativeElement;\n        this.readyToReply();\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Decide whether to show or not the contact's avatar in the message row\n     *\n     * @param message\n     * @param i\n     * @returns {boolean}\n     */\n    shouldShowContactAvatar(message, i): boolean\n    {\n        return (\n            message.who === this.contact.id &&\n            ((this.dialog[i + 1] && this.dialog[i + 1].who !== this.contact.id) || !this.dialog[i + 1])\n        );\n    }\n\n    /**\n     * Check if the given message is the first message of a group\n     *\n     * @param message\n     * @param i\n     * @returns {boolean}\n     */\n    isFirstMessageOfGroup(message, i): boolean\n    {\n        return (i === 0 || this.dialog[i - 1] && this.dialog[i - 1].who !== message.who);\n    }\n\n    /**\n     * Check if the given message is the last message of a group\n     *\n     * @param message\n     * @param i\n     * @returns {boolean}\n     */\n    isLastMessageOfGroup(message, i): boolean\n    {\n        return (i === this.dialog.length - 1 || this.dialog[i + 1] && this.dialog[i + 1].who !== message.who);\n    }\n\n    /**\n     * Select contact\n     */\n    selectContact(): void\n    {\n        this._chatService.selectContact(this.contact);\n    }\n\n    /**\n     * Ready to reply\n     */\n    readyToReply(): void\n    {\n        setTimeout(() => {\n            this.focusReplyInput();\n            this.scrollToBottom();\n        });\n    }\n\n    /**\n     * Focus to the reply input\n     */\n    focusReplyInput(): void\n    {\n        setTimeout(() => {\n            this.replyInput.focus();\n        });\n    }\n\n    /**\n     * Scroll to the bottom\n     *\n     * @param {number} speed\n     */\n    scrollToBottom(speed?: number): void\n    {\n        speed = speed || 400;\n        if ( this.directiveScroll )\n        {\n            this.directiveScroll.update();\n\n            setTimeout(() => {\n                this.directiveScroll.scrollToBottom(0, speed);\n            });\n        }\n    }\n\n    /**\n     * Reply\n     */\n    reply(event): void\n    {\n        event.preventDefault();\n\n        if ( !this.replyForm.form.value.message )\n        {\n            return;\n        }\n\n        // Message\n        const message = {\n            who    : this.user.id,\n            message: this.replyForm.form.value.message,\n            time   : new Date().toISOString()\n        };\n\n        // Add the message to the chat\n        this.dialog.push(message);\n\n        // Reset the reply form\n        this.replyForm.reset();\n\n        // Update the server\n        this._chatService.updateDialog(this.selectedChat.chatId, this.dialog).then(response => {\n            this.readyToReply();\n        });\n    }\n}\n","<!-- CHAT -->\n<div class=\"chat\" fxFlex fxLayout=\"column\">\n\n    <!-- CHAT TOOLBAR -->\n    <mat-toolbar class=\"chat-toolbar\">\n\n        <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <!-- RESPONSIVE CHATS BUTTON-->\n                <button mat-icon-button fxHide.gt-md class=\"responsive-chats-button mr-16\"\n                        fuseMatSidenavToggler=\"chat-left-sidenav\"\n                        aria-label=\"chats button\">\n                    <mat-icon>chat</mat-icon>\n                </button>\n                <!-- / RESPONSIVE CHATS BUTTON-->\n\n                <!-- CHAT CONTACT-->\n                <div class=\"chat-contact\" fxLayout=\"row\" fxLayoutAlign=\"start center\"\n                     fuseMatSidenavToggler=\"chat-right-sidenav\" (click)=\"selectContact()\">\n\n                    <div class=\"avatar-wrapper\">\n\n                        <img [src]=\"contact.avatar\"\n                             class=\"avatar\"\n                             alt=\"{{contact.name}}\"/>\n\n                        <mat-icon class=\"s-16 status\"\n                                  [ngClass]=\"contact.status\">\n                        </mat-icon>\n                    </div>\n\n                    <div class=\"chat-contact-name\">\n                        {{contact.name}}\n                    </div>\n\n                </div>\n                <!-- / CHAT CONTACT-->\n            </div>\n\n            <div>\n                <button mat-icon-button [matMenuTriggerFor]=\"contactMenu\" aria-label=\"more\">\n                    <mat-icon>more_vert</mat-icon>\n                </button>\n\n                <mat-menu #contactMenu=\"matMenu\">\n                    <button mat-menu-item fuseMatSidenavToggler=\"chat-right-sidenav\" (click)=\"selectContact()\">\n                        Contact Info\n                    </button>\n                </mat-menu>\n            </div>\n\n        </div>\n    </mat-toolbar>\n    <!-- / CHAT TOOLBAR -->\n\n    <!-- CHAT CONTENT -->\n    <div id=\"chat-content\" fxFlex=\"1 1 auto\"  fusePerfectScrollbar>\n\n        <!-- CHAT MESSAGES -->\n        <div class=\"chat-messages\">\n\n            <!-- MESSAGE -->\n            <div *ngFor=\"let message of dialog; let i = index\" class=\"message-row\"\n                 [ngClass]=\"{\n                            'me': message.who === user.id,\n                            'contact': message.who !== user.id,\n                            'first-of-group': isFirstMessageOfGroup(message, i),\n                            'last-of-group': isLastMessageOfGroup(message, i)\n                            }\">\n\n                <img *ngIf=\"shouldShowContactAvatar(message, i)\"\n                     src=\"{{contact.avatar}}\"\n                     class=\"avatar\">\n\n                <div class=\"bubble\">\n                    <div class=\"message\">{{message.message}}</div>\n                    <div class=\"time secondary-text\">{{message.time | date:'short'}}</div>\n                </div>\n\n            </div>\n            <!-- / MESSAGE -->\n\n        </div>\n        <!-- CHAT MESSAGES -->\n\n    </div>\n    <!-- / CHAT CONTENT -->\n\n    <!-- CHAT FOOTER -->\n    <div class=\"chat-footer\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n\n        <!-- REPLY FORM -->\n        <div class=\"reply-form\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n            <form #replyForm=\"ngForm\"\n                  (ngSubmit)=\"reply($event)\"\n                  (keydown.enter)=\"reply($event)\"\n                  fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <mat-form-field class=\"message-text\" fxFlex floatLabel=\"never\" appearance=\"standard\">\n                    <textarea matInput #replyInput placeholder=\"Type your message\"\n                              ngModel name=\"message\" [rows]=\"1\" [matTextareaAutosize]=\"true\"></textarea>\n                </mat-form-field>\n\n                <button class=\"send-message-button\" mat-icon-button type=\"submit\" aria-label=\"Send message\">\n                    <mat-icon class=\"secondary-text\">send</mat-icon>\n                </button>\n\n            </form>\n\n        </div>\n        <!-- / REPLY FORM -->\n\n    </div>\n    <!-- / CHAT FOOTER-->\n\n</div>\n<!-- / CHAT -->\n","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MediaObserver } from '@angular/flex-layout';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseMatSidenavHelperService } from '@fuse/directives/fuse-mat-sidenav/fuse-mat-sidenav.service';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-chats-sidenav',\n    templateUrl  : './chats.component.html',\n    styleUrls    : ['./chats.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatChatsSidenavComponent implements OnInit, OnDestroy\n{\n    chats: any[];\n    chatSearch: any;\n    contacts: any[];\n    searchText: string;\n    user: any;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     * @param {FuseMatSidenavHelperService} _fuseMatSidenavHelperService\n     * @param {MediaObserver} _mediaObserver\n     */\n    constructor(\n        private _chatService: ChatService,\n        private _fuseMatSidenavHelperService: FuseMatSidenavHelperService,\n        public _mediaObserver: MediaObserver\n    )\n    {\n        // Set the defaults\n        this.chatSearch = {\n            name: ''\n        };\n        this.searchText = '';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this.user = this._chatService.user;\n        this.chats = this._chatService.chats;\n        this.contacts = this._chatService.contacts;\n\n        this._chatService.onChatsUpdated\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(updatedChats => {\n                this.chats = updatedChats;\n            });\n\n        this._chatService.onUserUpdated\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(updatedUser => {\n                this.user = updatedUser;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get chat\n     *\n     * @param contact\n     */\n    getChat(contact): void\n    {\n        this._chatService.getChat(contact);\n\n        if ( !this._mediaObserver.isActive('gt-md') )\n        {\n            this._fuseMatSidenavHelperService.getSidenav('chat-left-sidenav').toggle();\n        }\n    }\n\n    /**\n     * Set user status\n     *\n     * @param status\n     */\n    setUserStatus(status): void\n    {\n        this._chatService.setUserStatus(status);\n    }\n\n    /**\n     * Change left sidenav view\n     *\n     * @param view\n     */\n    changeLeftSidenavView(view): void\n    {\n        this._chatService.onLeftSidenavViewChanged.next(view);\n    }\n\n    /**\n     * Logout\n     */\n    logout(): void\n    {\n        console.log('logout triggered');\n    }\n}\n","<!-- SIDENAV HEADER -->\n<div class=\"sidenav-header\">\n    <!-- CHATS TOOLBAR -->\n    <mat-toolbar>\n\n        <!-- TOOLBAR TOP -->\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n            <!-- USER AVATAR WRAPPER -->\n            <div class=\"avatar-wrapper\">\n\n                <!-- USER AVATAR -->\n                <img (click)=\"changeLeftSidenavView('user')\"\n                     src=\"{{user.avatar}}\"\n                     class=\"mat-avatar avatar\"\n                     alt=\"{{user.name}}\"/>\n                <!-- / USER AVATAR -->\n\n                <mat-icon class=\"s-16 status\" [ngClass]=\"user.status\"\n                          [matMenuTriggerFor]=\"userStatusMenu\"></mat-icon>\n\n                <!-- USER STATUS -->\n                <mat-menu id=\"user-status-menu\" #userStatusMenu=\"matMenu\">\n\n                    <button mat-menu-item (click)=\"setUserStatus('online')\">\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                            <mat-icon class=\"s-16 status online\"></mat-icon>\n                            <span>Online</span>\n                        </div>\n                    </button>\n\n                    <button mat-menu-item (click)=\"setUserStatus('away')\">\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                            <mat-icon class=\"s-16 status away\"></mat-icon>\n                            <span>Away</span>\n                        </div>\n                    </button>\n\n                    <button mat-menu-item (click)=\"setUserStatus('do-not-disturb')\">\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                            <mat-icon class=\"s-16 status do-not-disturb\"></mat-icon>\n                            <span>Do not disturb</span>\n                        </div>\n                    </button>\n\n                    <button mat-menu-item (click)=\"setUserStatus('offline')\">\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                            <mat-icon class=\"s-16 status offline\"></mat-icon>\n                            <span>Offline</span>\n                        </div>\n                    </button>\n                </mat-menu>\n                <!-- / USER STATUS -->\n\n            </div>\n            <!-- / USER AVATAR -->\n\n            <div>\n                <button mat-icon-button\n                        [matMenuTriggerFor]=\"userMenu\"\n                        aria-label=\"more\">\n                    <mat-icon>more_vert</mat-icon>\n                </button>\n                <mat-menu #userMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"changeLeftSidenavView('user')\">\n                        Profile\n                    </button>\n                    <button mat-menu-item (click)=\"logout()\">\n                        Logout\n                    </button>\n                </mat-menu>\n            </div>\n\n        </mat-toolbar-row>\n        <!-- / TOOLBAR TOP -->\n\n        <!-- TOOLBAR BOTTOM -->\n        <mat-toolbar-row>\n\n            <!-- SEARCH -->\n            <div class=\"search-wrapper\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"s-16 secondary-text\">search</mat-icon>\n                    <input [(ngModel)]=\"searchText\" type=\"text\" placeholder=\"Search or start new chat\" fxFlex>\n                </div>\n\n            </div>\n            <!-- / SEARCH -->\n\n        </mat-toolbar-row>\n        <!-- / TOOLBAR BOTTOM -->\n\n    </mat-toolbar>\n    <!-- / CHATS TOOLBAR -->\n\n</div>\n<!-- / SIDENAV HEADER -->\n\n<!-- SIDENAV CONTENT -->\n<div class=\"sidenav-content\" fusePerfectScrollbar fxFlex>\n\n    <!-- CHATS CONTENT -->\n    <div *fuseIfOnDom [@animateStagger]=\"{value:'50'}\">\n\n        <!-- CHATS LIST-->\n        <div class=\"chat-list\" fxLayout=\"column\">\n\n            <div matSubheader *ngIf=\"(user.chatList | filter: searchText).length > 0\">\n                Chats\n            </div>\n\n            <button mat-button class=\"contact\"\n                    *ngFor=\"let chat of user.chatList | filter: searchText\"\n                    (click)=\"getChat(chat.contactId)\" ngClass=\"{'unread':contact.unread}\"\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\n\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                    <div class=\"avatar-wrapper\" fxFlex=\"0 1 auto\" fxLayoutAlign=\"center center\">\n                        <img class=\"avatar\" [src]=\"contacts | getById:chat.contactId:'avatar'\"\n                             alt=\"{{contacts | getById:chat.contactId:'name'}}\"/>\n                        <mat-icon class=\"s-16 status\" [ngClass]=\"contacts | getById:chat.contactId:'status'\"></mat-icon>\n                    </div>\n\n                    <div fxLayout=\"row\" fxFlex>\n\n                        <div class=\"pr-4\" fxFlex fxLayout=\"column\" fxLayoutAlign=\"center start\">\n                            <div class=\"contact-name\">{{contacts | getById:chat.contactId:'name'}}</div>\n                            <div class=\"contact-last-message\">{{chat.lastMessage}}</div>\n                        </div>\n\n                        <div fxLayout=\"column\" fxLayoutAlign=\"start end\">\n                            <div class=\"contact-last-message-time\">\n                                {{chat.lastMessageTime | date}}\n                            </div>\n                            <div *ngIf=\"chat.unread\" class=\"mt-4 unread-message-count accent\">{{chat.unread}}</div>\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </button>\n\n        </div>\n        <!-- / CHATS LIST-->\n\n        <!-- CONTACTS LIST-->\n        <div class=\"contact-list\" fxLayout=\"column\">\n\n            <div matSubheader *ngIf=\"(contacts | filter: searchText).length > 0\">\n                Contacts\n            </div>\n\n            <button mat-button class=\"contact\"\n                    *ngFor=\"let contact of contacts| filter: searchText\"\n                    (click)=\"getChat(contact.id)\"\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\n\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                    <div class=\"avatar-wrapper\" fxFlex=\"0 1 auto\">\n                        <img src=\"{{contact.avatar}}\" class=\"mat-avatar avatar\" alt=\"{{contact.name}}\"/>\n                        <mat-icon class=\"s-16 status\" [ngClass]=\"contact.status\"></mat-icon>\n                    </div>\n\n                    <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n                        <div class=\"contact-name\">{{contact.name}}</div>\n                        <p class=\"contact-mood\">{{contact.mood}}</p>\n                    </div>\n\n                </div>\n\n            </button>\n\n        </div>\n        <!-- / CONTACTS LIST-->\n\n        <!-- NO RESULTS MESSAGE -->\n        <div *ngIf=\"(contacts | filter: searchText).length === 0\" class=\"no-results-message\">\n            No results..\n        </div>\n        <!-- NO RESULTS MESSAGE-->\n\n    </div>\n    <!-- / CHATS CONTENT -->\n\n</div>\n<!-- / SIDENAV CONTENT -->\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-user-sidenav',\n    templateUrl  : './user.component.html',\n    styleUrls    : ['./user.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ChatUserSidenavComponent implements OnInit, OnDestroy\n{\n    user: any;\n    userForm: FormGroup;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this.user = this._chatService.user;\n\n        this.userForm = new FormGroup({\n            mood  : new FormControl(this.user.mood),\n            status: new FormControl(this.user.status)\n        });\n\n        this.userForm.valueChanges\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                debounceTime(500),\n                distinctUntilChanged()\n            )\n            .subscribe(data => {\n                this.user.mood = data.mood;\n                this.user.status = data.status;\n                this._chatService.updateUserData(this.user);\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Change left sidenav view\n     *\n     * @param view\n     */\n    changeLeftSidenavView(view): void\n    {\n        this._chatService.onLeftSidenavViewChanged.next(view);\n    }\n\n}\n","<!-- SIDENAV HEADER -->\n<div class=\"sidenav-header\">\n\n    <!-- USER TOOLBAR -->\n    <mat-toolbar class=\"accent\">\n\n        <!-- TOOLBAR TOP -->\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n            <button mat-icon-button (click)=\"changeLeftSidenavView('chats')\" aria-label=\"back\">\n                <mat-icon>arrow_back</mat-icon>\n            </button>\n\n        </mat-toolbar-row>\n        <!-- / TOOLBAR TOP -->\n\n        <!-- TOOLBAR BOTTOM -->\n        <mat-toolbar-row class=\"toolbar-bottom\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n            <img [src]=\"user.avatar\" class=\"avatar user-avatar huge\" alt=\"{{user.name}}\"/>\n            <div class=\"user-name my-8\">{{user.name}}</div>\n\n        </mat-toolbar-row>\n        <!-- / TOOLBAR BOTTOM -->\n\n    </mat-toolbar>\n    <!-- / USER TOOLBAR -->\n</div>\n\n<!-- SIDENAV CONTENT -->\n<div class=\"sidenav-content py-32 px-24\" fxFlex>\n\n    <!-- USER MOOD -->\n    <form [formGroup]=\"userForm\" fxLayout=\"column\">\n\n        <mat-form-field appearance=\"outline\" fxFlex=\"0 1 auto\">\n            <mat-label>Mood</mat-label>\n            <textarea matInput name=\"mood\" formControlName=\"mood\" rows=\"3\"></textarea>\n        </mat-form-field>\n\n        <mat-radio-group formControlName=\"status\" fxLayout=\"column\">\n\n            <mat-radio-button value=\"online\" class=\"py-8\">\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"status online mr-8\"></mat-icon>\n                    <span class=\"mat-h4 m-0\">Online</span>\n                </div>\n            </mat-radio-button>\n\n            <mat-radio-button value=\"away\" class=\"py-8\">\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"status away mr-8\"></mat-icon>\n                    <span class=\"mat-h4 m-0\">Away</span>\n                </div>\n            </mat-radio-button>\n\n            <mat-radio-button value=\"do-not-disturb\" class=\"py-8\">\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"status do-not-disturb mr-8\"></mat-icon>\n                    <span class=\"mat-h4 m-0\">Do not disturb</span>\n                </div>\n            </mat-radio-button>\n\n            <mat-radio-button value=\"offline\" class=\"py-8\">\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"status offline mr-8\"></mat-icon>\n                    <span class=\"mat-h4 m-0\">Offline</span>\n                </div>\n            </mat-radio-button>\n        </mat-radio-group>\n\n    </form>\n    <!-- / USER MOOD -->\n\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-right-sidenav',\n    templateUrl  : './right.component.html',\n    styleUrls    : ['./right.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatRightSidenavComponent implements OnInit, OnDestroy\n{\n    view: string;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the defaults\n        this.view = 'contact';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._chatService.onRightSidenavViewChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(view => {\n                this.view = view;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n}\n","<div [ngSwitch]=\"view\" class=\"views\">\n\n    <chat-contact-sidenav class=\"view\"\n                          *ngSwitchCase=\"'contact'\"\n                          [@slideInRight]\n                          fusePerfectScrollbar>\n    </chat-contact-sidenav>\n\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-contact-sidenav',\n    templateUrl  : './contact.component.html',\n    styleUrls    : ['./contact.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ChatContactSidenavComponent implements OnInit, OnDestroy\n{\n    contact: any;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._chatService.onContactSelected\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(contact => {\n                this.contact = contact;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n}\n","<!-- SIDENAV HEADER -->\n<div class=\"sidenav-header\" *ngIf=\"contact\">\n\n    <!-- CONTACT TOOLBAR -->\n    <mat-toolbar class=\"accent\">\n\n        <!-- TOOLBAR TOP -->\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n            <div>Contact Info</div>\n\n            <button mat-icon-button fuseMatSidenavToggler=\"chat-right-sidenav\" aria-label=\"close\">\n                <mat-icon>close</mat-icon>\n            </button>\n\n        </mat-toolbar-row>\n        <!-- / TOOLBAR TOP -->\n\n        <!-- TOOLBAR BOTTOM -->\n        <mat-toolbar-row class=\"toolbar-bottom\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <img [src]=\"contact.avatar\" class=\"avatar contact-avatar huge\" alt=\"{{contact.name}}\"/>\n            <div class=\"contact-name my-8\">{{contact.name}}</div>\n        </mat-toolbar-row>\n        <!-- / TOOLBAR BOTTOM -->\n\n    </mat-toolbar>\n    <!-- / CONTACT TOOLBAR -->\n</div>\n\n<!-- SIDENAV CONTENT -->\n<div class=\"sidenav-content py-32 px-24\" fxFlex fxLayout=\"column\" *ngIf=\"contact\">\n\n    <!-- CONTACT MOOD -->\n    <div class=\"secondary-text mb-8\">Mood</div>\n    <div>{{contact.mood}}</div>\n    <!-- / CONTACT MOOD -->\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\nimport { ChatComponent } from 'app/main/apps/chat/chat.component';\nimport { ChatStartComponent } from 'app/main/apps/chat/chat-start/chat-start.component';\nimport { ChatViewComponent } from 'app/main/apps/chat/chat-view/chat-view.component';\nimport { ChatChatsSidenavComponent } from 'app/main/apps/chat/sidenavs/left/chats/chats.component';\nimport { ChatUserSidenavComponent } from 'app/main/apps/chat/sidenavs/left/user/user.component';\nimport { ChatLeftSidenavComponent } from 'app/main/apps/chat/sidenavs/left/left.component';\nimport { ChatRightSidenavComponent } from 'app/main/apps/chat/sidenavs/right/right.component';\nimport { ChatContactSidenavComponent } from 'app/main/apps/chat/sidenavs/right/contact/contact.component';\n\nconst routes: Routes = [\n    {\n        path: '**',\n        component: ChatComponent,\n        children: [],\n        resolve: {\n            chat: ChatService\n        }\n    }\n];\n\n@NgModule({\n    declarations: [\n        ChatComponent,\n        ChatViewComponent,\n        ChatStartComponent,\n        ChatChatsSidenavComponent,\n        ChatUserSidenavComponent,\n        ChatLeftSidenavComponent,\n        ChatRightSidenavComponent,\n        ChatContactSidenavComponent\n    ],\n    imports     : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatRadioModule,\n        MatSidenavModule,\n        MatToolbarModule,\n\n        FuseSharedModule\n    ],\n    providers   : [\n        ChatService\n    ]\n})\nexport class ChatModule\n{\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { fuseAnimations } from '@fuse/animations';\n\n@Component({\n    selector     : 'chat-start',\n    templateUrl  : './chat-start.component.html',\n    styleUrls    : ['./chat-start.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatStartComponent\n{\n    constructor()\n    {\n    }\n}\n","<div fxFlex fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <div class=\"big-circle app-logo\" fxLayout=\"column\" fxLayoutAlign=\"center center\"\n         [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n        <mat-icon class=\"s-64 s-md-128 mat-accent\">chat</mat-icon>\n    </div>\n\n    <span class=\"app-title mt-48 mb-8\" [@animate]=\"{value:'*',params:{delay:'100ms',y:'25px'}}\">\n        Chat App\n    </span>\n\n    <span fxHide fxShow.gt-md class=\"app-message\" [@animate]=\"{value:'*',params:{delay:'200ms',y:'50px'}}\">\n        Select a contact to start a chat!\n    </span>\n\n    <button mat-raised-button fxHide.gt-md fuseMatSidenavToggler=\"chat-left-sidenav\">\n        Select a contact to start a chat!\n    </button>\n\n</div>\n"],"sourceRoot":"webpack:///"}
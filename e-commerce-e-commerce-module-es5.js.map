{"version":3,"sources":["webpack:///src/app/main/apps/e-commerce/order/order.service.ts","webpack:///src/app/main/apps/e-commerce/orders/orders.service.ts","webpack:///src/app/main/apps/e-commerce/product/product.model.ts","webpack:///src/app/main/apps/e-commerce/product/product.component.ts","webpack:///src/app/main/apps/e-commerce/product/product.component.html","webpack:///src/app/main/apps/e-commerce/order/order-statuses.ts","webpack:///src/app/main/apps/e-commerce/products/products.service.ts","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js","webpack:///src/app/main/apps/e-commerce/orders/orders.component.ts","webpack:///src/app/main/apps/e-commerce/orders/orders.component.html","webpack:///src/app/main/apps/e-commerce/order/order.component.ts","webpack:///src/app/main/apps/e-commerce/order/order.component.html","webpack:///src/app/main/apps/e-commerce/products/products.component.ts","webpack:///src/app/main/apps/e-commerce/products/products.component.html","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/snack-bar.js","webpack:///src/app/main/apps/e-commerce/product/product.service.ts","webpack:///src/app/main/apps/e-commerce/e-commerce.module.ts","webpack:///src/app/main/apps/e-commerce/order/order.model.ts"],"names":["EcommerceOrderService","_httpClient","onOrderChanged","route","state","routeParams","params","Promise","resolve","reject","all","getOrder","then","get","id","subscribe","response","order","next","post","EcommerceOrdersService","onOrdersChanged","getOrders","orders","Product","product","generateGUID","name","handle","handleize","description","categories","tags","images","priceTaxExcl","priceTaxIncl","taxRate","comparedPrice","quantity","sku","width","height","depth","weight","extraShippingFee","active","event","input","value","push","category","index","indexOf","splice","tag","EcommerceProductComponent","_ecommerceProductService","_formBuilder","_location","_matSnackBar","_unsubscribeAll","onProductChanged","pipe","pageType","productForm","createProductForm","complete","group","data","getRawValue","saveProduct","open","verticalPosition","duration","addProduct","go","orderStatuses","color","EcommerceProductsService","onProductsChanged","getProducts","products","_c0","MatSortHeader_div_3_Template","rf","ctx","_r2","MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener","ctx_r1","_disableViewStateAnimation","MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener","ctx_r3","ctx_r0","_getArrowViewState","_getArrowDirectionState","_c1","getSortDuplicateSortableIdError","Error","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","direction","MatSortBase","_MatSortMixinBase","MatSort","arguments","sortables","Map","_stateChanges","start","_direction","sortChange","sortable","ngDevMode","has","set","getNextSortDirection","emit","disableClear","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","length","_markInitialized","_disableClear","v","ɵfac","MatSort_Factory","t","ɵMatSort_BaseFactory","ɵdir","type","selectors","hostAttrs","inputs","disabled","outputs","exportAs","features","propDecorators","args","selector","host","sortOrder","reverse","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","transform","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","allowChildren","optional","MatSortHeaderIntl","changes","sortButtonLabel","MatSortHeaderIntl_Factory","ɵprov","factory","token","providedIn","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","parentIntl","MAT_SORT_HEADER_INTL_PROVIDER","provide","deps","useFactory","MatSortHeaderBase","_MatSortHeaderMixinBase","MatSortHeader","_intl","_changeDetectorRef","_sort","_columnDef","_focusMonitor","_elementRef","_showIndicatorHint","_arrowDirection","_rerenderSubscription","_isSorted","_updateArrowDirection","_viewState","toState","_setAnimationTransitionState","fromState","markForCheck","register","monitor","origin","newState","_setIndicatorHintVisible","stopMonitoring","deregister","unsubscribe","visible","_isDisabled","viewState","sort","_toggleOnInteraction","keyCode","preventDefault","MatSortHeader_Factory","ɵcmp","hostVars","hostBindings","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","_handleClick","MatSortHeader_keydown_HostBindingHandler","$event","_handleKeydown","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","_getAriaSortAttribute","attrs","ngContentSelectors","decls","vars","consts","template","MatSortHeader_Template","_renderArrow","directives","styles","encapsulation","animation","changeDetection","ctorParameters","decorators","undefined","None","OnPush","animations","MatSortModule","ɵmod","ɵinj","MatSortModule_Factory","providers","imports","ngJitMode","declarations","exports","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","pageSizeOption_r6","$implicit","MatPaginator_div_2_mat_form_field_3_Template","_r8","MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener","ctx_r7","_changePageSize","_formFieldAppearance","pageSize","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r4","MatPaginator_div_2_Template","MatPaginator_button_6_Template","_r10","MatPaginator_button_6_Template_button_click_0_listener","ctx_r9","firstPage","firstPageLabel","_previousButtonsDisabled","MatPaginator_button_13_Template","_r12","MatPaginator_button_13_Template_button_click_0_listener","ctx_r11","lastPage","ctx_r2","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","nextPageLabel","previousPageLabel","getRangeLabel","page","Math","max","startIndex","endIndex","min","MatPaginatorIntl_Factory","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","MAT_PAGINATOR_INTL_PROVIDER","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginatorMixinBase","_MatPaginatorMixinBase","_MatPaginatorBase","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_initialized","_updateDisplayedPageSizeOptions","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","slice","a","b","map","p","_MatPaginatorBase_Factory","MatPaginator","intl","changeDetectorRef","formFieldAppearance","MatPaginator_Factory","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","previousPage","MatPaginator_Template_button_click_10_listener","nextPage","MatPaginatorModule","MatPaginatorModule_Factory","EcommerceOrdersComponent","_ecommerceOrdersService","displayedColumns","dataSource","FilesDataSource","paginator","filter","nativeElement","_matPaginator","_matSort","_filterChange","_filteredDataChange","filteredData","displayDataChanges","filterData","sortData","filterArrayByString","propertyA","propertyB","reference","customer","firstName","total","payment","method","status","date","valueA","isNaN","valueB","EcommerceOrderComponent","_ecommerceOrderService","statusForm","newStatus","newStatusId","Number","parseInt","find","Date","toString","unshift","updateStatus","EcommerceProductsComponent","_ecommerceProductsService","SimpleSnackBar_div_2_Template","SimpleSnackBar_div_2_Template_button_click_1_listener","action","MatSnackBarContainer_ng_template_1_Template","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","horizontalPosition","MAX_TIMEOUT","pow","MatSnackBarRef","containerInstance","_overlayRef","_afterDismissed","_afterOpened","_onAction","_dismissedByAction","onAction","dismiss","_onExit","_finishDismiss","closed","exit","clearTimeout","_durationTimeoutId","dismissWithAction","setTimeout","dispose","dismissedByAction","_onEnter","SimpleSnackBar","snackBarRef","SimpleSnackBar_Factory","SimpleSnackBar_Template","message","hasAction","matSnackBarAnimations","snackBarState","MatSnackBarContainer","_ngZone","_platform","snackBarConfig","_announceDelay","_destroyed","_onAnnounce","_animationState","attachDomPortal","portal","_assertNotAttached","_applySnackBarClasses","_portalOutlet","_live","FIREFOX","_role","attachComponentPortal","attachTemplatePortal","_completeExit","onEnter","run","detectChanges","_screenReaderAnnounce","setAttribute","_announceTimeoutId","onMicrotaskEmpty","element","panelClasses","panelClass","Array","isArray","forEach","cssClass","classList","add","hasAttached","runOutsideAngular","inertElement","querySelector","liveElement","focusedElement","isBrowser","document","activeElement","HTMLElement","contains","removeAttribute","appendChild","focus","MatSnackBarContainer_Factory","viewQuery","MatSnackBarContainer_Query","_t","first","MatSnackBarContainer_HostBindings","MatSnackBarContainer_animation_state_done_HostBindingHandler","onAnimationEnd","MatSnackBarContainer_Template","Default","MatSnackBarModule","MatSnackBarModule_Factory","entryComponents","MAT_SNACK_BAR_DEFAULT_OPTIONS","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MatSnackBar","_overlay","_injector","_breakpointObserver","_parentSnackBar","_defaultConfig","_snackBarRefAtThisLevel","simpleSnackBarComponent","snackBarContainerComponent","handsetCssClass","component","config","_attach","_config","Object","assign","openFromComponent","_openedSnackBarRef","overlayRef","userInjector","viewContainerRef","injector","create","parent","useValue","containerPortal","containerRef","attach","instance","content","userConfig","_createOverlay","container","_attachSnackBarContainer","_createInjector","contentRef","observe","HandsetPortrait","detachments","overlayElement","matches","remove","announce","_animateSnackBar","afterDismissed","clear","enter","afterOpened","_dismissAfter","overlayConfig","positionStrategy","position","global","isRtl","isLeft","isRight","left","right","centerHorizontally","top","bottom","MatSnackBar_Factory","EcommerceProductService","getProduct","routes","path","EcommerceModule","forChild","Order","subtotal","tax","discount","shippingDetails"],"mappings":"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","file":"e-commerce-e-commerce-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class EcommerceOrderService implements Resolve<any>\n{\n    routeParams: any;\n    order: any;\n    onOrderChanged: BehaviorSubject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpClient\n    )\n    {\n        // Set the defaults\n        this.onOrderChanged = new BehaviorSubject({});\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        this.routeParams = route.params;\n\n        return new Promise((resolve, reject) => {\n\n            Promise.all([\n                this.getOrder()\n            ]).then(\n                () => {\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get order\n     *\n     * @returns {Promise<any>}\n     */\n    getOrder(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/e-commerce-orders/' + this.routeParams.id)\n                .subscribe((response: any) => {\n                    this.order = response;\n                    this.onOrderChanged.next(this.order);\n                    resolve(response);\n                }, reject);\n        });\n    }\n\n    /**\n     * Save order\n     *\n     * @param order\n     * @returns {Promise<any>}\n     */\n    saveOrder(order): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.post('api/e-commerce-orders/' + order.id, order)\n                .subscribe((response: any) => {\n                    resolve(response);\n                }, reject);\n        });\n    }\n\n    /**\n     * Add order\n     *\n     * @param order\n     * @returns {Promise<any>}\n     */\n    addOrder(order): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.post('api/e-commerce-orders/', order)\n                .subscribe((response: any) => {\n                    resolve(response);\n                }, reject);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class EcommerceOrdersService implements Resolve<any>\n{\n    orders: any[];\n    onOrdersChanged: BehaviorSubject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpClient\n    )\n    {\n        // Set the defaults\n        this.onOrdersChanged = new BehaviorSubject({});\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        return new Promise((resolve, reject) => {\n\n            Promise.all([\n                this.getOrders()\n            ]).then(\n                () => {\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get orders\n     *\n     * @returns {Promise<any>}\n     */\n    getOrders(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/e-commerce-orders')\n                .subscribe((response: any) => {\n                    this.orders = response;\n                    this.onOrdersChanged.next(this.orders);\n                    resolve(response);\n                }, reject);\n        });\n    }\n}\n","import { MatChipInputEvent } from '@angular/material/chips';\n\nimport { FuseUtils } from '@fuse/utils';\n\nexport class Product\n{\n    id: string;\n    name: string;\n    handle: string;\n    description: string;\n    categories: string[];\n    tags: string[];\n    images: {\n        default: boolean,\n        id: string,\n        url: string,\n        type: string\n    }[];\n    priceTaxExcl: number;\n    priceTaxIncl: number;\n    taxRate: number;\n    comparedPrice: number;\n    quantity: number;\n    sku: string;\n    width: string;\n    height: string;\n    depth: string;\n    weight: string;\n    extraShippingFee: number;\n    active: boolean;\n\n    /**\n     * Constructor\n     *\n     * @param product\n     */\n    constructor(product?)\n    {\n        product = product || {};\n        this.id = product.id || FuseUtils.generateGUID();\n        this.name = product.name || '';\n        this.handle = product.handle || FuseUtils.handleize(this.name);\n        this.description = product.description || '';\n        this.categories = product.categories || [];\n        this.tags = product.tags || [];\n        this.images = product.images || [];\n        this.priceTaxExcl = product.priceTaxExcl || 0;\n        this.priceTaxIncl = product.priceTaxIncl || 0;\n        this.taxRate = product.taxRate || 0;\n        this.comparedPrice = product.comparedPrice || 0;\n        this.quantity = product.quantity || 0;\n        this.sku = product.sku || 0;\n        this.width = product.width || 0;\n        this.height = product.height || 0;\n        this.depth = product.depth || 0;\n        this.weight = product.weight || 0;\n        this.extraShippingFee = product.extraShippingFee || 0;\n        this.active = product.active || true;\n    }\n\n    /**\n     * Add category\n     *\n     * @param {MatChipInputEvent} event\n     */\n    addCategory(event: MatChipInputEvent): void\n    {\n        const input = event.input;\n        const value = event.value;\n\n        // Add category\n        if ( value )\n        {\n            this.categories.push(value);\n        }\n\n        // Reset the input value\n        if ( input )\n        {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove category\n     *\n     * @param category\n     */\n    removeCategory(category): void\n    {\n        const index = this.categories.indexOf(category);\n\n        if ( index >= 0 )\n        {\n            this.categories.splice(index, 1);\n        }\n    }\n\n    /**\n     * Add tag\n     *\n     * @param {MatChipInputEvent} event\n     */\n    addTag(event: MatChipInputEvent): void\n    {\n        const input = event.input;\n        const value = event.value;\n\n        // Add tag\n        if ( value )\n        {\n            this.tags.push(value);\n        }\n\n        // Reset the input value\n        if ( input )\n        {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove tag\n     *\n     * @param tag\n     */\n    removeTag(tag): void\n    {\n        const index = this.tags.indexOf(tag);\n\n        if ( index >= 0 )\n        {\n            this.tags.splice(index, 1);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseUtils } from '@fuse/utils';\n\nimport { Product } from 'app/main/apps/e-commerce/product/product.model';\nimport { EcommerceProductService } from 'app/main/apps/e-commerce/product/product.service';\n\n@Component({\n    selector     : 'e-commerce-product',\n    templateUrl  : './product.component.html',\n    styleUrls    : ['./product.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class EcommerceProductComponent implements OnInit, OnDestroy\n{\n    product: Product;\n    pageType: string;\n    productForm: FormGroup;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {EcommerceProductService} _ecommerceProductService\n     * @param {FormBuilder} _formBuilder\n     * @param {Location} _location\n     * @param {MatSnackBar} _matSnackBar\n     */\n    constructor(\n        private _ecommerceProductService: EcommerceProductService,\n        private _formBuilder: FormBuilder,\n        private _location: Location,\n        private _matSnackBar: MatSnackBar\n    )\n    {\n        // Set the default\n        this.product = new Product();\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update product on changes\n        this._ecommerceProductService.onProductChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(product => {\n\n                if ( product )\n                {\n                    this.product = new Product(product);\n                    this.pageType = 'edit';\n                }\n                else\n                {\n                    this.pageType = 'new';\n                    this.product = new Product();\n                }\n\n                this.productForm = this.createProductForm();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Create product form\n     *\n     * @returns {FormGroup}\n     */\n    createProductForm(): FormGroup\n    {\n        return this._formBuilder.group({\n            id              : [this.product.id],\n            name            : [this.product.name],\n            handle          : [this.product.handle],\n            description     : [this.product.description],\n            categories      : [this.product.categories],\n            tags            : [this.product.tags],\n            images          : [this.product.images],\n            priceTaxExcl    : [this.product.priceTaxExcl],\n            priceTaxIncl    : [this.product.priceTaxIncl],\n            taxRate         : [this.product.taxRate],\n            comparedPrice   : [this.product.comparedPrice],\n            quantity        : [this.product.quantity],\n            sku             : [this.product.sku],\n            width           : [this.product.width],\n            height          : [this.product.height],\n            depth           : [this.product.depth],\n            weight          : [this.product.weight],\n            extraShippingFee: [this.product.extraShippingFee],\n            active          : [this.product.active]\n        });\n    }\n\n    /**\n     * Save product\n     */\n    saveProduct(): void\n    {\n        const data = this.productForm.getRawValue();\n        data.handle = FuseUtils.handleize(data.name);\n\n        this._ecommerceProductService.saveProduct(data)\n            .then(() => {\n\n                // Trigger the subscription with new data\n                this._ecommerceProductService.onProductChanged.next(data);\n\n                // Show the success message\n                this._matSnackBar.open('Product saved', 'OK', {\n                    verticalPosition: 'top',\n                    duration        : 2000\n                });\n            });\n    }\n\n    /**\n     * Add product\n     */\n    addProduct(): void\n    {\n        const data = this.productForm.getRawValue();\n        data.handle = FuseUtils.handleize(data.name);\n\n        this._ecommerceProductService.addProduct(data)\n            .then(() => {\n\n                // Trigger the subscription with new data\n                this._ecommerceProductService.onProductChanged.next(data);\n\n                // Show the success message\n                this._matSnackBar.open('Product added', 'OK', {\n                    verticalPosition: 'top',\n                    duration        : 2000\n                });\n\n                // Change the location with new one\n                this._location.go('apps/e-commerce/products/' + this.product.id + '/' + this.product.handle);\n            });\n    }\n}\n","<div id=\"product\" class=\"page-layout carded fullwidth inner-scroll\">\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- HEADER -->\n        <div class=\"header accent\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n            <!-- APP TITLE -->\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <button mat-icon-button class=\"mr-0 mr-sm-16\" [routerLink]=\"'/apps/e-commerce/products'\">\n                    <mat-icon>arrow_back</mat-icon>\n                </button>\n\n                <div class=\"product-image mr-8 mr-sm-16\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n                    <img *ngIf=\"product.images[0]\" [src]=\"product.images[0].url\">\n                    <img *ngIf=\"!product.images[0]\" [src]=\"'assets/images/ecommerce/product-image-placeholder.png'\">\n                </div>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\"\n                     [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                    <div class=\"h2\" *ngIf=\"pageType ==='edit'\">\n                        {{product.name}}\n                    </div>\n                    <div class=\"h2\" *ngIf=\"pageType ==='new'\">\n                        New Product\n                    </div>\n                    <div class=\"subtitle secondary-text\">\n                        <span>Product Detail</span>\n                    </div>\n                </div>\n            </div>\n            <!-- / APP TITLE -->\n\n            <button mat-raised-button\n                    class=\"save-product-button\"\n                    [disabled]=\"productForm.invalid\"\n                    *ngIf=\"pageType ==='new'\" (click)=\"addProduct()\">\n                <span>ADD</span>\n            </button>\n\n            <button mat-raised-button\n                    class=\"save-product-button\"\n                    [disabled]=\"productForm.invalid || productForm.pristine\"\n                    *ngIf=\"pageType ==='edit'\" (click)=\"saveProduct()\">\n                <span>SAVE</span>\n            </button>\n        </div>\n        <!-- / HEADER -->\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card\">\n\n            <!-- CONTENT -->\n            <div class=\"content\">\n\n                <form name=\"productForm\" [formGroup]=\"productForm\" class=\"product w-100-p\" fxLayout=\"column\" fxFlex>\n\n                    <mat-tab-group>\n\n                        <mat-tab label=\"Basic Info\">\n\n                            <div class=\"tab-content p-24\" fusePerfectScrollbar>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                    <mat-label>Product Name</mat-label>\n                                    <input matInput placeholder=\"Product Name\"\n                                           name=\"name\"\n                                           formControlName=\"name\"\n                                           required>\n                                </mat-form-field>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                    <mat-label>Product Description</mat-label>\n                                    <textarea matInput placeholder=\"Product Description\"\n                                              name=\"description\"\n                                              formControlName=\"description\"\n                                              rows=\"5\">\n                                    </textarea>\n                                </mat-form-field>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n\n                                    <mat-label>Categories</mat-label>\n\n                                    <mat-chip-list #categoryList name=\"categories\" formControlName=\"categories\">\n\n                                        <mat-chip *ngFor=\"let category of product.categories\"\n                                                  [removable]=\"true\" (removed)=\"product.removeCategory(category)\">\n                                            {{category}}\n                                            <mat-icon matChipRemove>cancel</mat-icon>\n                                        </mat-chip>\n\n                                        <input [matChipInputFor]=\"categoryList\"\n                                               [matChipInputAddOnBlur]=\"true\"\n                                               (matChipInputTokenEnd)=\"product.addCategory($event)\"/>\n\n                                    </mat-chip-list>\n\n                                </mat-form-field>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n\n                                    <mat-label>Tags</mat-label>\n\n                                    <mat-chip-list #tagList name=\"tags\" formControlName=\"tags\">\n\n                                        <mat-chip *ngFor=\"let tag of product.tags\"\n                                                  [removable]=\"true\" (removed)=\"product.removeTag(tag)\">\n                                            {{tag}}\n                                            <mat-icon matChipRemove>cancel</mat-icon>\n                                        </mat-chip>\n\n                                        <input [matChipInputFor]=\"tagList\"\n                                               [matChipInputAddOnBlur]=\"true\"\n                                               (matChipInputTokenEnd)=\"product.addTag($event)\"/>\n\n                                    </mat-chip-list>\n\n                                </mat-form-field>\n\n                            </div>\n\n                        </mat-tab>\n\n                        <mat-tab label=\"Product Images\">\n\n                            <div class=\"tab-content p-24\" fusePerfectScrollbar>\n                                <div fxLayout=\"row wrap\" fxLayoutAlign=\"start start\">\n\n                                    <div *ngIf=\"product.images.length === 0\"\n                                         class=\"product-image\" fxlayout=\"row\" fxLayoutAlign=\"center center\">\n                                        <img class=\"media\"\n                                             [src]=\"'assets/images/ecommerce/product-image-placeholder.png'\">\n                                    </div>\n\n                                    <div *ngFor=\"let image of product.images\">\n                                        <div *ngIf=\"product.images.length > 0\"\n                                             class=\"product-image\" fxlayout=\"row\" fxLayoutAlign=\"center center\">\n                                            <img class=\"media\" [src]=\"image.url\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </mat-tab>\n\n                        <mat-tab label=\"Pricing\">\n\n                            <div class=\"tab-content p-24\" fusePerfectScrollbar>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                    <mat-label>Tax Excluded Price</mat-label>\n                                    <input matInput placeholder=\"Tax Excluded Price\"\n                                           name=\"priceTaxExcl\"\n                                           formControlName=\"priceTaxExcl\"\n                                           type=\"number\">\n                                    <span matPrefix>$&nbsp;</span>\n                                </mat-form-field>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                    <mat-label>Tax Included Price</mat-label>\n                                    <input matInput placeholder=\"Tax Included Price\"\n                                           name=\"priceTaxIncl\"\n                                           formControlName=\"priceTaxIncl\"\n                                           type=\"number\">\n                                    <span matPrefix>$&nbsp;</span>\n                                </mat-form-field>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                    <mat-label>Tax Rate</mat-label>\n                                    <input matInput placeholder=\"Tax Rate\"\n                                           name=\"taxRate\"\n                                           formControlName=\"taxRate\"\n                                           type=\"number\">\n                                    <span matPrefix>&#37;&nbsp;</span>\n                                </mat-form-field>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                    <mat-label>Compared Price</mat-label>\n                                    <input matInput placeholder=\"Compared Price\"\n                                           name=\"comparedPrice\"\n                                           formControlName=\"comparedPrice\"\n                                           type=\"number\">\n                                    <span matPrefix>$&nbsp;</span>\n                                    <mat-hint align=\"start\">Add a compare price to show next to the real price\n                                    </mat-hint>\n                                </mat-form-field>\n\n                            </div>\n                        </mat-tab>\n\n                        <mat-tab label=\"Inventory\">\n\n                            <div class=\"tab-content p-24\" fusePerfectScrollbar>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                    <mat-label>SKU</mat-label>\n                                    <input matInput placeholder=\"SKU\"\n                                           name=\"sku\"\n                                           formControlName=\"sku\">\n                                </mat-form-field>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                    <mat-label>Quantity</mat-label>\n                                    <input matInput placeholder=\"Quantity\"\n                                           name=\"quantity\"\n                                           formControlName=\"quantity\"\n                                           type=\"number\">\n                                </mat-form-field>\n\n                            </div>\n\n                        </mat-tab>\n\n                        <mat-tab label=\"Shipping\">\n\n                            <div class=\"tab-content p-24\" fusePerfectScrollbar fxLayout=\"column\">\n\n                                <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n\n                                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" fxFlex=\"30\">\n                                        <mat-label>Width</mat-label>\n                                        <input matInput placeholder=\"Width\"\n                                               name=\"Width\"\n                                               formControlName=\"width\">\n                                        <span matSuffix>cm</span>\n                                    </mat-form-field>\n\n                                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" fxFlex=\"30\">\n                                        <mat-label>Height</mat-label>\n                                        <input matInput placeholder=\"Height\"\n                                               name=\"Height\"\n                                               formControlName=\"height\">\n                                        <span matSuffix>cm</span>\n                                    </mat-form-field>\n\n                                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" fxFlex=\"30\">\n                                        <mat-label>Depth</mat-label>\n                                        <input matInput placeholder=\"Depth\"\n                                               name=\"Depth\"\n                                               formControlName=\"depth\">\n                                        <span matSuffix>cm</span>\n                                    </mat-form-field>\n\n                                </div>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                    <mat-label>Weight</mat-label>\n                                    <input matInput placeholder=\"Weight\"\n                                           name=\"Weight\"\n                                           formControlName=\"weight\">\n                                    <span matSuffix>kg</span>\n                                </mat-form-field>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                    <mat-label>Extra Shipping Fee</mat-label>\n                                    <input matInput placeholder=\"Extra Shipping Fee\"\n                                           name=\"extraShippingFee\"\n                                           formControlName=\"extraShippingFee\"\n                                           type=\"number\">\n                                    <span matPrefix>$&nbsp;</span>\n                                </mat-form-field>\n\n                            </div>\n\n                        </mat-tab>\n\n                    </mat-tab-group>\n\n                </form>\n\n            </div>\n            <!-- / CONTENT -->\n\n        </div>\n        <!-- / CONTENT CARD -->\n\n    </div>\n    <!-- / CENTER -->\n\n</div>\n","export const orderStatuses = [\n    {\n        id   : 1,\n        name : 'Awaiting check payment',\n        color: 'blue-500'\n    },\n    {\n        id   : 2,\n        name : 'Payment accepted',\n        color: 'green-500'\n    },\n    {\n        id   : 3,\n        name : 'Preparing the order',\n        color: 'orange-500'\n    },\n    {\n        id   : 4,\n        name : 'Shipped',\n        color: 'purple-500'\n    },\n    {\n        id   : 5,\n        name : 'Delivered',\n        color: 'green-800'\n    },\n    {\n        id   : 6,\n        name : 'Canceled',\n        color: 'pink-500'\n    },\n    {\n        id   : 7,\n        name : 'Refunded',\n        color: 'red-500'\n    },\n    {\n        id   : 8,\n        name : 'Payment error',\n        color: 'red-900'\n    },\n    {\n        id   : 9,\n        name : 'On pre-order (paid)',\n        color: 'purple-300'\n    },\n    {\n        id   : 10,\n        name : 'Awaiting bank wire payment',\n        color: 'blue-500'\n    },\n    {\n        id   : 11,\n        name : 'Awaiting PayPal payment',\n        color: 'blue-500'\n    },\n    {\n        id   : 12,\n        name : 'Remote payment accepted',\n        color: 'green-500'\n    },\n    {\n        id   : 13,\n        name : 'On pre-order (not paid)',\n        color: 'purple-300'\n    },\n    {\n        id   : 14,\n        name : 'Awaiting Cash-on-delivery payment',\n        color: 'blue-500'\n    }\n];\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class EcommerceProductsService implements Resolve<any>\n{\n    products: any[];\n    onProductsChanged: BehaviorSubject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpClient\n    )\n    {\n        // Set the defaults\n        this.onProductsChanged = new BehaviorSubject({});\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        return new Promise((resolve, reject) => {\n\n            Promise.all([\n                this.getProducts()\n            ]).then(\n                () => {\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get products\n     *\n     * @returns {Promise<any>}\n     */\n    getProducts(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/e-commerce-products')\n                .subscribe((response: any) => {\n                    this.products = response;\n                    this.onProductsChanged.next(this.products);\n                    resolve(response);\n                }, reject);\n        });\n    }\n}\n","import { EventEmitter, Directive, Input, Output, ɵɵdefineInjectable, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r0._getArrowViewState())(\"@arrowPosition\", ctx_r0._getArrowViewState())(\"@allowChildren\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r0._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nclass MatSortBase {\n}\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /** The sort direction of the currently active MatSortable. */\n    get direction() { return this._direction; }\n    set direction(direction) {\n        if (direction && direction !== 'asc' && direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); };\nMatSort.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\nconst ɵMatSort_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSort);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], null, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         * @deprecated Not used anymore. To be removed.\n         * @breaking-change 8.0.0\n         */\n        this.sortButtonLabel = (id) => {\n            return `Change sorting for ${id}`;\n        };\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\nMatSortHeaderIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nclass MatSortHeaderBase {\n}\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    constructor(_intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            _changeDetectorRef.markForCheck();\n        });\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._toggleOnInteraction();\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"keydown\", function MatSortHeader_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 6, consts: [[\"role\", \"button\", 1, \"mat-sort-header-container\", \"mat-focus-indicator\"], [1, \"mat-sort-header-content\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._isDisabled() ? null : 0);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     role=\\\"button\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSortModule {\n}\nMatSortModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule, MatCommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort, MatSortHeader]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSort, MatSortHeader]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map","import { CommonModule } from '@angular/common';\nimport { ɵɵdefineInjectable, Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, ChangeDetectorRef, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r6);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r6, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"appearance\", ctx_r3._formFieldAppearance)(\"color\", ctx_r3.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.pageSize)(\"disabled\", ctx_r3.disabled)(\"aria-label\", ctx_r3._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 6, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r2._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r2._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r2._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\nMatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nclass MatPaginatorMixinBase {\n}\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(MatPaginatorMixinBase));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons, } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() { return this._pageIndex; }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() { return this._length; }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() { return this._pageSize; }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() { return this._hidePageSize; }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\n_MatPaginatorBase.ɵfac = function _MatPaginatorBase_Factory(t) { return new (t || _MatPaginatorBase)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined)); };\n_MatPaginatorBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatPaginatorBase, inputs: { pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatPaginatorBase.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined }\n];\n_MatPaginatorBase.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatPaginatorBase, [{\n        type: Directive\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [1, \"mat-paginator\"], inputs: { disabled: \"disabled\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatCommonModule]; }, exports: function () { return [MatPaginator]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                    MatCommonModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n\n//# sourceMappingURL=paginator.js.map","import { Component, ElementRef, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, fromEvent, merge, Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseUtils } from '@fuse/utils';\n\nimport { EcommerceOrdersService } from 'app/main/apps/e-commerce/orders/orders.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector     : 'e-commerce-orders',\n    templateUrl  : './orders.component.html',\n    styleUrls    : ['./orders.component.scss'],\n    animations   : fuseAnimations,\n    encapsulation: ViewEncapsulation.None\n})\nexport class EcommerceOrdersComponent implements OnInit, OnDestroy\n{\n    dataSource: FilesDataSource | null;\n    displayedColumns = ['id', 'reference', 'customer', 'total', 'payment', 'status', 'date'];\n\n    @ViewChild(MatPaginator, {static: true})\n    paginator: MatPaginator;\n\n    @ViewChild('filter', {static: true})\n    filter: ElementRef;\n\n    @ViewChild(MatSort, {static: true})\n    sort: MatSort;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {EcommerceOrdersService} _ecommerceOrdersService\n     */\n    constructor(\n        private _ecommerceOrdersService: EcommerceOrdersService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this.dataSource = new FilesDataSource(this._ecommerceOrdersService, this.paginator, this.sort);\n\n        fromEvent(this.filter.nativeElement, 'keyup')\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                debounceTime(150),\n                distinctUntilChanged()\n            )\n            .subscribe(() => {\n                if ( !this.dataSource )\n                {\n                    return;\n                }\n                this.dataSource.filter = this.filter.nativeElement.value;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n}\n\nexport class FilesDataSource extends DataSource<any>\n{\n    // Private\n    private _filterChange = new BehaviorSubject('');\n    private _filteredDataChange = new BehaviorSubject('');\n\n    /**\n     * Constructor\n     *\n     * @param {EcommerceOrdersService} _ecommerceOrdersService\n     * @param {MatPaginator} _matPaginator\n     * @param {MatSort} _matSort\n     */\n    constructor(\n        private _ecommerceOrdersService: EcommerceOrdersService,\n        private _matPaginator: MatPaginator,\n        private _matSort: MatSort\n    )\n    {\n        super();\n\n        this.filteredData = this._ecommerceOrdersService.orders;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    // Filtered data\n    get filteredData(): any\n    {\n        return this._filteredDataChange.value;\n    }\n\n    set filteredData(value: any)\n    {\n        this._filteredDataChange.next(value);\n    }\n\n    // Filter\n    get filter(): string\n    {\n        return this._filterChange.value;\n    }\n\n    set filter(filter: string)\n    {\n        this._filterChange.next(filter);\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Connect function called by the table to retrieve one stream containing the data to render.\n     *\n     * @returns {Observable<any[]>}\n     */\n    connect(): Observable<any[]>\n    {\n        const displayDataChanges = [\n            this._ecommerceOrdersService.onOrdersChanged,\n            this._matPaginator.page,\n            this._filterChange,\n            this._matSort.sortChange\n        ];\n\n        return merge(...displayDataChanges).pipe(map(() => {\n\n                let data = this._ecommerceOrdersService.orders.slice();\n\n                data = this.filterData(data);\n\n                this.filteredData = [...data];\n\n                data = this.sortData(data);\n\n                // Grab the page's slice of data.\n                const startIndex = this._matPaginator.pageIndex * this._matPaginator.pageSize;\n                return data.splice(startIndex, this._matPaginator.pageSize);\n            })\n        );\n\n    }\n\n    /**\n     * Filter data\n     *\n     * @param data\n     * @returns {any}\n     */\n    filterData(data): any\n    {\n        if ( !this.filter )\n        {\n            return data;\n        }\n        return FuseUtils.filterArrayByString(data, this.filter);\n    }\n\n    /**\n     * Sort data\n     *\n     * @param data\n     * @returns {any[]}\n     */\n    sortData(data): any[]\n    {\n        if ( !this._matSort.active || this._matSort.direction === '' )\n        {\n            return data;\n        }\n\n        return data.sort((a, b) => {\n            let propertyA: number | string = '';\n            let propertyB: number | string = '';\n\n            switch ( this._matSort.active )\n            {\n                case 'id':\n                    [propertyA, propertyB] = [a.id, b.id];\n                    break;\n                case 'reference':\n                    [propertyA, propertyB] = [a.reference, b.reference];\n                    break;\n                case 'customer':\n                    [propertyA, propertyB] = [a.customer.firstName, b.customer.firstName];\n                    break;\n                case 'total':\n                    [propertyA, propertyB] = [a.total, b.total];\n                    break;\n                case 'payment':\n                    [propertyA, propertyB] = [a.payment.method, b.payment.method];\n                    break;\n                case 'status':\n                    [propertyA, propertyB] = [a.status[0].name, b.status[0].name];\n                    break;\n                case 'date':\n                    [propertyA, propertyB] = [a.date, b.date];\n                    break;\n            }\n\n            const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n            const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n            return (valueA < valueB ? -1 : 1) * (this._matSort.direction === 'asc' ? 1 : -1);\n        });\n    }\n\n    /**\n     * Disconnect\n     */\n    disconnect(): void\n    {\n    }\n}\n","<div id=\"orders\" class=\"page-layout carded fullwidth inner-scroll\">\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- HEADER -->\n        <div class=\"header accent\"\n             fxLayout=\"column\" fxLayoutAlign=\"center center\"\n             fxLayout.gt-xs=\"row\" fxLayoutAlign.gt-xs=\"space-between center\">\n\n            <!-- APP TITLE -->\n            <div class=\"logo mb-24 mb-sm-0\"\n                 fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <mat-icon class=\"logo-icon s-32 mr-16\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n                    shopping_basket\n                </mat-icon>\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">Orders</span>\n            </div>\n            <!-- / APP TITLE -->\n\n            <!-- SEARCH -->\n            <div class=\"search-wrapper  ml-sm-32\">\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon>search</mat-icon>\n                    <input #filter placeholder=\"Search for an order\">\n                </div>\n            </div>\n            <!-- / SEARCH -->\n\n        </div>\n        <!-- / HEADER -->\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card\">\n\n            <mat-table class=\"orders-table\"\n                       #table [dataSource]=\"dataSource\"\n                       matSort\n                       [@animateStagger]=\"{value:'50'}\"\n                       fusePerfectScrollbar>\n\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\n                    <mat-cell *matCellDef=\"let order\">\n                        <p class=\"text-truncate\">{{order.id}}</p>\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Reference Column -->\n                <ng-container matColumnDef=\"reference\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header fxHide fxShow.gt-sm>Reference</mat-header-cell>\n                    <mat-cell *matCellDef=\"let order\" fxHide fxShow.gt-sm>\n                        <p class=\"text-truncate\">{{order.reference}}</p>\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Name Column -->\n                <ng-container matColumnDef=\"customer\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Customer</mat-header-cell>\n                    <mat-cell *matCellDef=\"let order\">\n                        <p class=\"text-truncate\">\n                            {{order.customer.firstName}}\n                            {{order.customer.lastName}}\n                        </p>\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Total Price Column -->\n                <ng-container matColumnDef=\"total\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header fxHide fxShow.gt-md>Total</mat-header-cell>\n                    <mat-cell *matCellDef=\"let order\" fxHide fxShow.gt-md>\n                        <p class=\"total-price text-truncate\">\n                            {{order.total | currency:'USD':'symbol'}}\n                        </p>\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Payment Column -->\n                <ng-container matColumnDef=\"payment\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header fxHide fxShow.gt-sm>Payment</mat-header-cell>\n                    <mat-cell *matCellDef=\"let order\" fxHide fxShow.gt-sm>\n                        <p class=\"text-truncate\">\n                            {{order.payment.method}}\n                        </p>\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Status Column -->\n                <ng-container matColumnDef=\"status\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n                    <mat-cell *matCellDef=\"let order\">\n                        <p class=\"status text-truncate h6 p-4\" [ngClass]=\"order.status[0].color\">\n                            {{order.status[0].name}}\n                        </p>\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Date Column -->\n                <ng-container matColumnDef=\"date\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header fxHide fxShow.gt-sm>Date</mat-header-cell>\n                    <mat-cell *matCellDef=\"let order\" fxHide fxShow.gt-sm>\n                        <p class=\"text-truncate\">\n                            {{order.date}}\n                        </p>\n                    </mat-cell>\n                </ng-container>\n\n                <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-header-row>\n\n                <mat-row *matRowDef=\"let order; columns: displayedColumns;\"\n                         class=\"order\"\n                         matRipple\n                         [routerLink]=\"'/apps/e-commerce/orders/'+order.id\">\n                </mat-row>\n            </mat-table>\n\n            <mat-paginator #paginator\n                           [length]=\"dataSource.filteredData.length\"\n                           [pageIndex]=\"0\"\n                           [pageSize]=\"10\"\n                           [pageSizeOptions]=\"[5, 10, 25, 100]\">\n            </mat-paginator>\n\n        </div>\n        <!-- / CONTENT CARD -->\n    </div>\n    <!-- / CENTER -->\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Subject} from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { orderStatuses } from 'app/main/apps/e-commerce/order/order-statuses';\nimport { Order } from 'app/main/apps/e-commerce/order/order.model';\nimport { EcommerceOrderService } from 'app/main/apps/e-commerce/order/order.service';\n\n@Component({\n    selector     : 'e-commerce-order',\n    templateUrl  : './order.component.html',\n    styleUrls    : ['./order.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class EcommerceOrderComponent implements OnInit, OnDestroy\n{\n    order: Order;\n    orderStatuses: any;\n    statusForm: FormGroup;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {EcommerceOrderService} _ecommerceOrderService\n     * @param {FormBuilder} _formBuilder\n     */\n    constructor(\n        private _ecommerceOrderService: EcommerceOrderService,\n        private _formBuilder: FormBuilder\n    )\n    {\n        // Set the defaults\n        this.order = new Order();\n        this.orderStatuses = orderStatuses;\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update order on changes\n        this._ecommerceOrderService.onOrderChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(order => {\n                this.order = new Order(order);\n            });\n\n        this.statusForm = this._formBuilder.group({\n            newStatus: ['']\n        });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Update status\n     */\n    updateStatus(): void\n    {\n        const newStatusId = Number.parseInt(this.statusForm.get('newStatus').value);\n\n        if ( !newStatusId )\n        {\n            return;\n        }\n\n        const newStatus = this.orderStatuses.find((status) => {\n            return status.id === newStatusId;\n        });\n\n        newStatus['date'] = new Date().toString();\n\n        this.order.status.unshift(newStatus);\n    }\n}\n","<div id=\"order\" class=\"page-layout carded fullwidth inner-scroll\">\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- HEADER -->\n        <div class=\"header accent\"\n             fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n            <!-- APP TITLE -->\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <button mat-icon-button class=\"mr-16\" [routerLink]=\"'/apps/e-commerce/orders'\">\n                    <mat-icon>arrow_back</mat-icon>\n                </button>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\"\n                     [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                    <div class=\"h2\">\n                        Order {{order.reference}}\n                    </div>\n                    <div class=\"subtitle secondary-text\">\n                        <span>from</span>\n                        <span>{{order.customer.firstName}} {{order.customer.lastName}}</span>\n                    </div>\n                </div>\n            </div>\n            <!-- / APP TITLE -->\n\n        </div>\n        <!-- / HEADER -->\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card\">\n\n            <!-- CONTENT -->\n            <div class=\"content\">\n\n                <mat-tab-group fxLayout=\"column\" fxFlex>\n\n                    <mat-tab label=\"Order Details\">\n\n                        <div class=\"order-details tab-content p-24\" fusePerfectScrollbar>\n\n                            <div class=\"section pb-48\">\n\n                                <div class=\"pb-16\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                                    <mat-icon class=\"m-0 mr-16 secondary-text\">account_circle</mat-icon>\n                                    <div class=\"h2 secondary-text\">Customer</div>\n                                </div>\n\n                                <div class=\"customer mb-32\">\n                                    <table class=\"simple\">\n                                        <thead>\n                                            <tr>\n                                                <th>Name</th>\n                                                <th>Email</th>\n                                                <th>Phone</th>\n                                                <th>Company</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td>\n                                                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                                                        <img class=\"avatar\" [src]=\"order.customer.avatar\">\n                                                        <span class=\"name text-truncate\">{{order.customer.firstName}}\n                                                            {{order.customer.lastName}}\n                                                        </span>\n                                                    </div>\n                                                </td>\n                                                <td>\n                                                    <span class=\"email text-truncate\">{{order.customer.email}}</span>\n                                                </td>\n                                                <td>\n                                                    <span class=\"phone text-truncate\">{{order.customer.phone}}</span>\n                                                </td>\n                                                <td>\n                                                    <span class=\"company text-truncate\">{{order.customer.company}}\n                                                    </span>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                                <mat-accordion class=\"addresses\">\n\n                                    <mat-expansion-panel>\n\n                                        <mat-expansion-panel-header>\n                                            <mat-panel-title>Shipping Address</mat-panel-title>\n                                        </mat-expansion-panel-header>\n\n                                        <div fxFlex fxLayout=\"column\">\n                                            <div class=\"address h4 py-24\">{{order.customer.shippingAddress.address}}\n                                            </div>\n                                        </div>\n\n                                    </mat-expansion-panel>\n\n                                    <mat-expansion-panel>\n\n                                        <mat-expansion-panel-header>\n                                            <mat-panel-title>Invoice Address</mat-panel-title>\n                                        </mat-expansion-panel-header>\n\n                                        <div fxFlex fxLayout=\"column\">\n                                            <div class=\"address h4 py-24\">{{order.customer.invoiceAddress.address}}\n                                            </div>\n                                        </div>\n\n                                    </mat-expansion-panel>\n\n                                </mat-accordion>\n\n                            </div>\n\n                            <div class=\"section pb-48\">\n\n                                <div class=\"pb-16\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                                    <mat-icon class=\"m-0 mr-16 secondary-text\">access_time</mat-icon>\n                                    <div class=\"h2 secondary-text\">Order Status</div>\n                                </div>\n\n                                <table class=\"simple\">\n                                    <thead>\n                                        <tr>\n                                            <th>Status</th>\n                                            <th>Updated On</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n\n                                        <tr *ngFor=\"let status of order.status\">\n                                            <td>\n                                                <span class=\"status h6 p-4\" [ngClass]=\"status.color\">\n                                                    {{status.name}}\n                                                </span>\n                                            </td>\n                                            <td>\n                                                <span>\n                                                    {{status.date | date}}\n                                                </span>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n\n                                <form class=\"update-status p-24\"\n                                      (ngSubmit)=\"updateStatus()\"\n                                      [formGroup]=\"statusForm\"\n                                      fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                                    <mat-form-field appearance=\"outline\" class=\"mr-16\" fxFlex>\n                                        <mat-label>Status</mat-label>\n                                        <mat-select formControlName=\"newStatus\"\n                                                    required>\n                                            <mat-option *ngFor=\"let status of orderStatuses\"\n                                                        [value]=\"status.id\">\n                                                {{status.name}}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n\n                                    <button mat-raised-button class=\"mat-accent\"\n                                            [disabled]=\"statusForm.invalid\">\n                                        Update Status\n                                    </button>\n                                </form>\n\n                            </div>\n\n                            <div class=\"section pb-48\">\n\n                                <div class=\"pb-16\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                                    <mat-icon class=\"m-0 mr-16 secondary-text\">attach_money</mat-icon>\n                                    <div class=\"h2 secondary-text\">Payment</div>\n                                </div>\n\n                                <table class=\"simple\">\n                                    <thead>\n                                        <tr>\n                                            <th>TransactionID</th>\n                                            <th>Payment Method</th>\n                                            <th>Amount</th>\n                                            <th>Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>\n                                                <span class=\"text-truncate\">\n                                                    {{order.payment.transactionId}}\n                                                </span>\n                                            </td>\n                                            <td>\n                                                <span class=\"text-truncate\">\n                                                    {{order.payment.method}}\n                                                </span>\n                                            </td>\n                                            <td>\n                                                <span class=\"text-truncate\">\n                                                    {{order.payment.amount}}\n                                                </span>\n                                            </td>\n                                            <td>\n                                                <span class=\"text-truncate\">\n                                                    {{order.payment.date | date}}\n                                                </span>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n\n\n                            <div class=\"section pb-48\">\n\n                                <div class=\"pb-16\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                                    <mat-icon class=\"m-0 mr-16 secondary-text\">local_shipping</mat-icon>\n                                    <div class=\"h2 secondary-text\">Shipping</div>\n                                </div>\n\n                                <table class=\"simple\">\n                                    <thead>\n                                        <tr>\n                                            <th>Tracking Code</th>\n                                            <th>Carrier</th>\n                                            <th>Weight</th>\n                                            <th>Fee</th>\n                                            <th>Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr *ngFor=\"let shipping of order.shippingDetails\">\n                                            <td class=\"tracking-code\">\n                                                {{shipping.tracking}}\n                                            </td>\n                                            <td>\n                                                {{shipping.carrier}}\n                                            </td>\n                                            <td>\n                                                {{shipping.weight}}\n                                            </td>\n                                            <td>\n                                                {{shipping.fee}}\n                                            </td>\n                                            <td>\n                                                {{shipping.date}}\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n\n                        </div>\n                    </mat-tab>\n\n                    <mat-tab label=\"Products\">\n                        <div class=\"products tab-content p-24\" fusePerfectScrollbar>\n                            <table class=\"simple\">\n                                <thead>\n                                    <tr>\n                                        <th class=\"w-80\">ID</th>\n                                        <th class=\"w-120\">Image</th>\n                                        <th>Name</th>\n                                        <th class=\"w-120\">Price</th>\n                                        <th class=\"w-80\">Quantity</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr class=\"product-row\"\n                                        *ngFor=\"let product of order.products\"\n                                        [routerLink]=\"'/apps/e-commerce/products/'+product.id+'/'+product.handle\">\n                                        <td>\n                                            {{product.id}}\n                                        </td>\n                                        <td>\n                                            <img class=\"product-image\" [src]=\"product.image\">\n                                        </td>\n                                        <td>\n                                            {{product.name}}\n                                        </td>\n                                        <td>\n                                            {{product.price}}\n                                        </td>\n                                        <td>\n                                            {{product.quantity}}\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </mat-tab>\n\n                    <mat-tab label=\"Invoice\">\n\n                        <div class=\"invoice tab-content p-24\" fusePerfectScrollbar>\n\n                            <div id=\"invoice\" class=\"compact page-layout blank\" fxLayout=\"row\" fusePerfectScrollbar>\n\n                                <div class=\"invoice-container\">\n\n                                    <!-- INVOICE -->\n                                    <div class=\"card\">\n\n                                        <div class=\"header\">\n                                            <div class=\"invoice-date\">{{order.date}}</div>\n\n                                            <div fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n                                                <div class=\"client\">\n                                                    <div class=\"invoice-number\" fxLayout=\"row\"\n                                                         fxLayoutAlign=\"start center\">\n                                                        <span class=\"title\">INVOICE</span>\n                                                        <span class=\"number\">{{order.reference}}</span>\n                                                    </div>\n\n                                                    <div class=\"info\">\n                                                        <div class=\"title\">\n                                                            {{order.customer.firstName}}\n                                                            {{order.customer.lastName}}\n                                                        </div>\n                                                        <div class=\"address\">\n                                                            {{order.customer.invoiceAddress.address}}\n                                                        </div>\n                                                        <div class=\"phone\">{{order.customer.phone}}</div>\n                                                        <div class=\"email\">{{order.customer.email}}</div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"issuer accent\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                                                    <div class=\"logo\">\n                                                        <img src=\"assets/images/logos/fuse.svg\">\n                                                    </div>\n\n                                                    <div class=\"info\">\n                                                        <div class=\"title\">FUSE INC.</div>\n                                                        <div class=\"address\">2810 Country Club Road Cranford, NJ 07016\n                                                        </div>\n                                                        <div class=\"phone\">+66 123 455 87</div>\n                                                        <div class=\"email\">hello@fuseinc.com</div>\n                                                        <div class=\"website\">www.fuseinc.com</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"content\">\n\n                                            <table class=\"simple invoice-table\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>PRODUCT</th>\n                                                        <th class=\"text-right\">PRICE</th>\n                                                        <th class=\"text-right\">QUANTITY</th>\n                                                        <th class=\"text-right\">TOTAL</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    <tr *ngFor=\"let product of order.products\">\n                                                        <td>\n                                                            <div class=\"title\">\n                                                                {{product.name}}\n                                                            </div>\n                                                        </td>\n                                                        <td class=\"text-right\">\n                                                            {{product.price | currency:'USD':'symbol'}}\n                                                        </td>\n                                                        <td class=\"text-right\">\n                                                            {{product.quantity}}\n                                                        </td>\n                                                        <td class=\"text-right\">\n                                                            {{product.total | currency:'USD':'symbol'}}\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n\n                                            <table class=\"simple invoice-table-footer\">\n                                                <tbody>\n                                                    <tr class=\"subtotal\">\n                                                        <td>SUBTOTAL</td>\n                                                        <td>{{order.subtotal | currency:'USD':'symbol'}}</td>\n                                                    </tr>\n                                                    <tr class=\"tax\">\n                                                        <td>TAX</td>\n                                                        <td>{{order.tax | currency:'USD':'symbol'}}</td>\n                                                    </tr>\n                                                    <tr class=\"discount\">\n                                                        <td>DISCOUNT</td>\n                                                        <td>-{{order.discount | currency:'USD':'symbol'}}</td>\n                                                    </tr>\n                                                    <tr class=\"total\">\n                                                        <td>TOTAL</td>\n                                                        <td>{{order.total | currency:'USD':'symbol'}}</td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n\n                                        <div class=\"footer\">\n                                            <div class=\"note\">Please pay within 15 days. Thank you for your business.\n                                            </div>\n                                            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                                                <div class=\"logo\">\n                                                    <img src=\"assets/images/logos/fuse.svg\">\n                                                </div>\n                                                <div class=\"small-note\">\n                                                    In condimentum malesuada efficitur. Mauris volutpat placerat auctor.\n                                                    Ut ac congue dolor. Quisque scelerisque lacus sed feugiat fermentum.\n                                                    Cras aliquet facilisis pellentesque. Nunc hendrerit quam at leo\n                                                    commodo, a suscipit tellus dapibus. Etiam at felis volutpat est\n                                                    mollis lacinia. Mauris placerat sem sit amet velit mollis, in\n                                                    porttitor ex finibus. Proin eu nibh id libero tincidunt lacinia et\n                                                    eget eros.\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <!-- / INVOICE -->\n\n                                </div>\n                            </div>\n                        </div>\n                    </mat-tab>\n\n                </mat-tab-group>\n\n            </div>\n            <!-- / CONTENT -->\n\n        </div>\n        <!-- / CONTENT CARD -->\n\n    </div>\n    <!-- / CENTER -->\n</div>\n","import { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, fromEvent, merge, Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseUtils } from '@fuse/utils';\n\nimport { EcommerceProductsService } from 'app/main/apps/e-commerce/products/products.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector     : 'e-commerce-products',\n    templateUrl  : './products.component.html',\n    styleUrls    : ['./products.component.scss'],\n    animations   : fuseAnimations,\n    encapsulation: ViewEncapsulation.None\n})\nexport class EcommerceProductsComponent implements OnInit\n{\n    dataSource: FilesDataSource | null;\n    displayedColumns = ['id', 'image', 'name', 'category', 'price', 'quantity', 'active'];\n\n    @ViewChild(MatPaginator, {static: true})\n    paginator: MatPaginator;\n\n    @ViewChild(MatSort, {static: true})\n    sort: MatSort;\n\n    @ViewChild('filter', {static: true})\n    filter: ElementRef;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    constructor(\n        private _ecommerceProductsService: EcommerceProductsService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this.dataSource = new FilesDataSource(this._ecommerceProductsService, this.paginator, this.sort);\n\n        fromEvent(this.filter.nativeElement, 'keyup')\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                debounceTime(150),\n                distinctUntilChanged()\n            )\n            .subscribe(() => {\n                if ( !this.dataSource )\n                {\n                    return;\n                }\n\n                this.dataSource.filter = this.filter.nativeElement.value;\n            });\n    }\n}\n\nexport class FilesDataSource extends DataSource<any>\n{\n    private _filterChange = new BehaviorSubject('');\n    private _filteredDataChange = new BehaviorSubject('');\n\n    /**\n     * Constructor\n     *\n     * @param {EcommerceProductsService} _ecommerceProductsService\n     * @param {MatPaginator} _matPaginator\n     * @param {MatSort} _matSort\n     */\n    constructor(\n        private _ecommerceProductsService: EcommerceProductsService,\n        private _matPaginator: MatPaginator,\n        private _matSort: MatSort\n    )\n    {\n        super();\n\n        this.filteredData = this._ecommerceProductsService.products;\n    }\n\n    /**\n     * Connect function called by the table to retrieve one stream containing the data to render.\n     *\n     * @returns {Observable<any[]>}\n     */\n    connect(): Observable<any[]>\n    {\n        const displayDataChanges = [\n            this._ecommerceProductsService.onProductsChanged,\n            this._matPaginator.page,\n            this._filterChange,\n            this._matSort.sortChange\n        ];\n\n        return merge(...displayDataChanges)\n            .pipe(\n                map(() => {\n                        let data = this._ecommerceProductsService.products.slice();\n\n                        data = this.filterData(data);\n\n                        this.filteredData = [...data];\n\n                        data = this.sortData(data);\n\n                        // Grab the page's slice of data.\n                        const startIndex = this._matPaginator.pageIndex * this._matPaginator.pageSize;\n                        return data.splice(startIndex, this._matPaginator.pageSize);\n                    }\n                ));\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    // Filtered data\n    get filteredData(): any\n    {\n        return this._filteredDataChange.value;\n    }\n\n    set filteredData(value: any)\n    {\n        this._filteredDataChange.next(value);\n    }\n\n    // Filter\n    get filter(): string\n    {\n        return this._filterChange.value;\n    }\n\n    set filter(filter: string)\n    {\n        this._filterChange.next(filter);\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Filter data\n     *\n     * @param data\n     * @returns {any}\n     */\n    filterData(data): any\n    {\n        if ( !this.filter )\n        {\n            return data;\n        }\n        return FuseUtils.filterArrayByString(data, this.filter);\n    }\n\n    /**\n     * Sort data\n     *\n     * @param data\n     * @returns {any[]}\n     */\n    sortData(data): any[]\n    {\n        if ( !this._matSort.active || this._matSort.direction === '' )\n        {\n            return data;\n        }\n\n        return data.sort((a, b) => {\n            let propertyA: number | string = '';\n            let propertyB: number | string = '';\n\n            switch ( this._matSort.active )\n            {\n                case 'id':\n                    [propertyA, propertyB] = [a.id, b.id];\n                    break;\n                case 'name':\n                    [propertyA, propertyB] = [a.name, b.name];\n                    break;\n                case 'categories':\n                    [propertyA, propertyB] = [a.categories[0], b.categories[0]];\n                    break;\n                case 'price':\n                    [propertyA, propertyB] = [a.priceTaxIncl, b.priceTaxIncl];\n                    break;\n                case 'quantity':\n                    [propertyA, propertyB] = [a.quantity, b.quantity];\n                    break;\n                case 'active':\n                    [propertyA, propertyB] = [a.active, b.active];\n                    break;\n            }\n\n            const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n            const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n            return (valueA < valueB ? -1 : 1) * (this._matSort.direction === 'asc' ? 1 : -1);\n        });\n    }\n\n    /**\n     * Disconnect\n     */\n    disconnect(): void\n    {\n    }\n}\n","<div id=\"products\" class=\"page-layout carded fullwidth inner-scroll\">\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- HEADER -->\n        <div class=\"header accent\"\n             fxLayout=\"column\" fxLayoutAlign=\"center center\"\n             fxLayout.gt-sm=\"row\" fxLayoutAlign.gt-sm=\"space-between center\">\n\n            <!-- APP TITLE -->\n            <div class=\"logo mb-24 mb-md-0\"\n                 fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <mat-icon class=\"logo-icon s-32 mr-16\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n                    shopping_basket\n                </mat-icon>\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                    Products\n                </span>\n            </div>\n            <!-- / APP TITLE -->\n\n            <!-- SEARCH -->\n            <div class=\"search-wrapper mx-32 mx-md-0\">\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon>search</mat-icon>\n                    <input #filter placeholder=\"Search for a product\">\n                </div>\n            </div>\n            <!-- / SEARCH -->\n\n            <!-- ADD BUTTON -->\n            <button mat-raised-button\n                    [routerLink]=\"'/apps/e-commerce/products/new'\"\n                    class=\"add-product-button fuse-white mt-24 mt-md-0\">\n                <span>ADD NEW PRODUCT</span>\n            </button>\n            <!-- / ADD BUTTON -->\n\n        </div>\n        <!-- / HEADER -->\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card\">\n\n            <mat-table class=\"products-table\"\n                       #table [dataSource]=\"dataSource\"\n                       matSort\n                       [@animateStagger]=\"{value:'50'}\"\n                       fusePerfectScrollbar>\n\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\n                    <mat-cell *matCellDef=\"let product\">\n                        <p class=\"text-truncate\">{{product.id}}</p>\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Image Column -->\n                <ng-container matColumnDef=\"image\">\n                    <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                    <mat-cell *matCellDef=\"let product\">\n                        <img class=\"product-image\"\n                             *ngIf=\"product.featuredImageId\" [alt]=\"product.name\"\n                             [src]=\"product.images[product.featuredImageId].url\"/>\n                        <img *ngIf=\"!product.featuredImageId\"\n                             [src]=\"'assets/images/ecommerce/product-image-placeholder.png'\">\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Name Column -->\n                <ng-container matColumnDef=\"name\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\n                    <mat-cell *matCellDef=\"let product\">\n                        <p class=\"text-truncate\">{{product.name}}</p>\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Category Column -->\n                <ng-container matColumnDef=\"category\">\n                    <mat-header-cell *matHeaderCellDef fxHide mat-sort-header fxShow.gt-md>Category</mat-header-cell>\n                    <mat-cell *matCellDef=\"let product\" fxHide fxShow.gt-md>\n                        <p class=\"category text-truncate\">\n                            {{product.categories[0]}}\n                        </p>\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Price Column -->\n                <ng-container matColumnDef=\"price\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header fxHide fxShow.gt-xs>Price</mat-header-cell>\n                    <mat-cell *matCellDef=\"let product\" fxHide fxShow.gt-xs>\n                        <p class=\"price text-truncate\">\n                            {{product.priceTaxIncl | currency:'USD':'symbol'}}\n                        </p>\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Quantity Column -->\n                <ng-container matColumnDef=\"quantity\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header fxHide fxShow.gt-sm>Quantity</mat-header-cell>\n                    <mat-cell *matCellDef=\"let product\" fxHide fxShow.gt-sm>\n\n                        <span class=\"quantity-indicator text-truncate\"\n                              [ngClass]=\"{'red-500':product.quantity <= 5, 'amber-500':product.quantity > 5 && product.quantity <= 25,'green-600':product.quantity > 25}\">\n                        </span>\n                        <span>\n                            {{product.quantity}}\n                        </span>\n\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Active Column -->\n                <ng-container matColumnDef=\"active\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header fxHide fxShow.gt-xs>Active</mat-header-cell>\n                    <mat-cell *matCellDef=\"let product\" fxHide fxShow.gt-xs>\n                        <mat-icon *ngIf=\"product.active\" class=\"active-icon green-600 s-16\">check</mat-icon>\n                        <mat-icon *ngIf=\"!product.active\" class=\"active-icon red-500 s-16\">close</mat-icon>\n                    </mat-cell>\n                </ng-container>\n\n                <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-header-row>\n\n                <mat-row *matRowDef=\"let product; columns: displayedColumns;\"\n                         class=\"product\"\n                         matRipple\n                         [routerLink]=\"'/apps/e-commerce/products/'+product.id+'/'+product.handle\">\n                </mat-row>\n\n            </mat-table>\n\n            <mat-paginator #paginator\n                           [length]=\"dataSource.filteredData.length\"\n                           [pageIndex]=\"0\"\n                           [pageSize]=\"10\"\n                           [pageSizeOptions]=\"[5, 10, 25, 100]\">\n            </mat-paginator>\n\n        </div>\n        <!-- / CONTENT CARD -->\n    </div>\n    <!-- / CENTER -->\n</div>\n","import { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgZone, ElementRef, ChangeDetectorRef, ViewChild, NgModule, Injector, TemplateRef, ɵɵdefineInjectable, ɵɵinject, INJECTOR, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Subject } from 'rxjs';\nimport { Platform } from '@angular/cdk/platform';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/portal';\nimport * as ɵngcc5 from '@angular/cdk/overlay';\nimport * as ɵngcc6 from '@angular/cdk/a11y';\nimport * as ɵngcc7 from '@angular/cdk/layout';\n\nfunction SimpleSnackBar_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function SimpleSnackBar_div_2_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.action(); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.data.action);\n} }\nfunction MatSnackBarContainer_ng_template_1_Template(rf, ctx) { }\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** The horizontal position to place the snack bar. */\n        this.horizontalPosition = 'center';\n        /** The vertical position to place the snack bar. */\n        this.verticalPosition = 'bottom';\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the snack bar has opened and appeared. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the snack bar action was called. */\n        this._onAction = new Subject();\n        /** Whether the snack bar was dismissed using the action button. */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe(() => this.dismiss());\n        containerInstance._onExit.subscribe(() => this._finishDismiss());\n    }\n    /** Dismisses the snack bar. */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /** Marks the snackbar action clicked. */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n        }\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /** Dismisses the snack bar after some duration */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n    }\n    /** Marks the snackbar as opened */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /** Cleans up the DOM after closing. */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /** Gets an observable that is notified when the snack bar action is called. */\n    onAction() {\n        return this._onAction;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nclass SimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n}\nSimpleSnackBar.ɵfac = function SimpleSnackBar_Factory(t) { return new (t || SimpleSnackBar)(ɵngcc0.ɵɵdirectiveInject(MatSnackBarRef), ɵngcc0.ɵɵdirectiveInject(MAT_SNACK_BAR_DATA)); };\nSimpleSnackBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SimpleSnackBar, selectors: [[\"simple-snack-bar\"]], hostAttrs: [1, \"mat-simple-snackbar\"], decls: 3, vars: 2, consts: [[\"class\", \"mat-simple-snackbar-action\", 4, \"ngIf\"], [1, \"mat-simple-snackbar-action\"], [\"mat-button\", \"\", 3, \"click\"]], template: function SimpleSnackBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\");\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, SimpleSnackBar_div_2_Template, 3, 1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.data.message);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasAction);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton], styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nSimpleSnackBar.ctorParameters = () => [\n    { type: MatSnackBarRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DATA,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SimpleSnackBar, [{\n        type: Component,\n        args: [{\n                selector: 'simple-snack-bar',\n                template: \"<span>{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-simple-snackbar'\n                },\n                styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DATA]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nconst matSnackBarAnimations = {\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0\n        }))),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nclass MatSnackBarContainer extends BasePortalOutlet {\n    constructor(_ngZone, _elementRef, _changeDetectorRef, _platform, \n    /** The snack bar configuration. */\n    snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._platform = _platform;\n        this.snackBarConfig = snackBarConfig;\n        /** The number of milliseconds to wait before announcing the snack bar's content. */\n        this._announceDelay = 150;\n        /** Whether the component has been destroyed. */\n        this._destroyed = false;\n        /** Subject for notifying that the snack bar has announced to screen readers. */\n        this._onAnnounce = new Subject();\n        /** Subject for notifying that the snack bar has exited from view. */\n        this._onExit = new Subject();\n        /** Subject for notifying that the snack bar has finished entering the view. */\n        this._onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        this._animationState = 'void';\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._assertNotAttached();\n            this._applySnackBarClasses();\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        // Use aria-live rather than a live role like 'alert' or 'status'\n        // because NVDA and JAWS have show inconsistent behavior with live roles.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._live = 'assertive';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._live = 'off';\n        }\n        else {\n            this._live = 'polite';\n        }\n        // Only set role for Firefox. Set role based on aria-live because setting role=\"alert\" implies\n        // aria-live=\"assertive\" which may cause issues if aria-live is set to \"polite\" above.\n        if (this._platform.FIREFOX) {\n            if (this._live === 'polite') {\n                this._role = 'status';\n            }\n            if (this._live === 'assertive') {\n                this._role = 'alert';\n            }\n        }\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /** Attach a template portal as content to this snack bar container. */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Handle end of animations, updating the state of the snackbar. */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            const onEnter = this._onEnter;\n            this._ngZone.run(() => {\n                onEnter.next();\n                onEnter.complete();\n            });\n        }\n    }\n    /** Begin animation of snack bar entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n            this._screenReaderAnnounce();\n        }\n    }\n    /** Begin animation of the snack bar exiting from view. */\n    exit() {\n        // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n        // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n        // `MatSnackBar.open`).\n        this._animationState = 'hidden';\n        // Mark this element with an 'exit' attribute to indicate that the snackbar has\n        // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n        // test harness.\n        this._elementRef.nativeElement.setAttribute('mat-exit', '');\n        // If the snack bar hasn't been announced by the time it exits it wouldn't have been open\n        // long enough to visually read it either, so clear the timeout for announcing.\n        clearTimeout(this._announceTimeoutId);\n        return this._onExit;\n    }\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._completeExit();\n    }\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     */\n    _completeExit() {\n        this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n            this._onExit.next();\n            this._onExit.complete();\n        });\n    }\n    /** Applies the various positioning and user-configured CSS classes to the snack bar. */\n    _applySnackBarClasses() {\n        const element = this._elementRef.nativeElement;\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(cssClass => element.classList.add(cssClass));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            element.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            element.classList.add('mat-snack-bar-top');\n        }\n    }\n    /** Asserts that no content is already attached to the container. */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n    /**\n     * Starts a timeout to move the snack bar content to the live region so screen readers will\n     * announce it.\n     */\n    _screenReaderAnnounce() {\n        if (!this._announceTimeoutId) {\n            this._ngZone.runOutsideAngular(() => {\n                this._announceTimeoutId = setTimeout(() => {\n                    const inertElement = this._elementRef.nativeElement.querySelector('[aria-hidden]');\n                    const liveElement = this._elementRef.nativeElement.querySelector('[aria-live]');\n                    if (inertElement && liveElement) {\n                        // If an element in the snack bar content is focused before being moved\n                        // track it and restore focus after moving to the live region.\n                        let focusedElement = null;\n                        if (this._platform.isBrowser &&\n                            document.activeElement instanceof HTMLElement &&\n                            inertElement.contains(document.activeElement)) {\n                            focusedElement = document.activeElement;\n                        }\n                        inertElement.removeAttribute('aria-hidden');\n                        liveElement.appendChild(inertElement);\n                        focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.focus();\n                        this._onAnnounce.next();\n                        this._onAnnounce.complete();\n                    }\n                }, this._announceDelay);\n            });\n        }\n    }\n}\nMatSnackBarContainer.ɵfac = function MatSnackBarContainer_Factory(t) { return new (t || MatSnackBarContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(MatSnackBarConfig)); };\nMatSnackBarContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSnackBarContainer, selectors: [[\"snack-bar-container\"]], viewQuery: function MatSnackBarContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 3);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [1, \"mat-snack-bar-container\"], hostVars: 1, hostBindings: function MatSnackBarContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@state.done\", function MatSnackBarContainer_animation_state_done_HostBindingHandler($event) { return ctx.onAnimationEnd($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 2, consts: [[\"aria-hidden\", \"true\"], [\"cdkPortalOutlet\", \"\"]], template: function MatSnackBarContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSnackBarContainer_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-live\", ctx._live)(\"role\", ctx._role);\n    } }, directives: [ɵngcc4.CdkPortalOutlet], styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"], encapsulation: 2, data: { animation: [matSnackBarAnimations.snackBarState] } });\nMatSnackBarContainer.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Platform },\n    { type: MatSnackBarConfig }\n];\nMatSnackBarContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSnackBarContainer, [{\n        type: Component,\n        args: [{\n                selector: 'snack-bar-container',\n                template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\"></div>\\n\",\n                // In Ivy embedded views will be change detected from their declaration place, rather than\n                // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n                // because it might cause snack bars that were opened from a template not to be out of date.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matSnackBarAnimations.snackBarState],\n                host: {\n                    'class': 'mat-snack-bar-container',\n                    '[@state]': '_animationState',\n                    '(@state.done)': 'onAnimationEnd($event)'\n                },\n                styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc3.Platform }, { type: MatSnackBarConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSnackBarModule {\n}\nMatSnackBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSnackBarModule });\nMatSnackBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSnackBarModule_Factory(t) { return new (t || MatSnackBarModule)(); }, imports: [[\n            OverlayModule,\n            PortalModule,\n            CommonModule,\n            MatButtonModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSnackBarModule, { declarations: function () { return [MatSnackBarContainer, SimpleSnackBar]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        CommonModule,\n        MatButtonModule,\n        MatCommonModule]; }, exports: function () { return [MatSnackBarContainer, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSnackBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    CommonModule,\n                    MatButtonModule,\n                    MatCommonModule,\n                ],\n                exports: [MatSnackBarContainer, MatCommonModule],\n                declarations: [MatSnackBarContainer, SimpleSnackBar],\n                entryComponents: [MatSnackBarContainer, SimpleSnackBar]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar {\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n        /** The component that should be rendered as the snack bar's simple component. */\n        this.simpleSnackBarComponent = SimpleSnackBar;\n        /** The container component that attaches the provided template or component. */\n        this.snackBarContainerComponent = MatSnackBarContainer;\n        /** The CSS class to applie for handset mode. */\n        this.handsetCssClass = 'mat-snack-bar-handset';\n    }\n    /** Reference to the currently opened snackbar at *any* level. */\n    get _openedSnackBarRef() {\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromComponent(component, config) {\n        return this._attach(component, config);\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param template Template to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    open(message, action = '', config) {\n        const _config = Object.assign(Object.assign({}, this._defaultConfig), config);\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        // Since the snack bar has `role=\"alert\"`, we don't\n        // want to announce the same message twice.\n        if (_config.announcementMessage === message) {\n            _config.announcementMessage = undefined;\n        }\n        return this.openFromComponent(this.simpleSnackBarComponent, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatSnackBarConfig, useValue: config }]\n        });\n        const containerPortal = new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     */\n    _attach(content, userConfig) {\n        const config = Object.assign(Object.assign(Object.assign({}, new MatSnackBarConfig()), this._defaultConfig), userConfig);\n        const overlayRef = this._createOverlay(config);\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            const portal = new TemplatePortal(content, null, {\n                $implicit: config.data,\n                snackBarRef\n            });\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            const injector = this._createInjector(config, snackBarRef);\n            const portal = new ComponentPortal(content, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(takeUntil(overlayRef.detachments())).subscribe(state => {\n            const classList = overlayRef.overlayElement.classList;\n            state.matches ? classList.add(this.handsetCssClass) : classList.remove(this.handsetCssClass);\n        });\n        if (config.announcementMessage) {\n            // Wait until the snack bar contents have been announced then deliver this message.\n            container._onAnnounce.subscribe(() => {\n                this._live.announce(config.announcementMessage, config.politeness);\n            });\n        }\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /** Animates the old snack bar out and the new one in. */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(() => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        });\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(() => {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified snack bar config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        const isRtl = config.direction === 'rtl';\n        const isLeft = (config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl));\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @param config Config that was used to create the snack bar.\n     * @param snackBarRef Reference to the snack bar.\n     */\n    _createInjector(config, snackBarRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return Injector.create({\n            parent: userInjector || this._injector,\n            providers: [\n                { provide: MatSnackBarRef, useValue: snackBarRef },\n                { provide: MAT_SNACK_BAR_DATA, useValue: config.data }\n            ]\n        });\n    }\n}\nMatSnackBar.ɵfac = function MatSnackBar_Factory(t) { return new (t || MatSnackBar)(ɵngcc0.ɵɵinject(ɵngcc5.Overlay), ɵngcc0.ɵɵinject(ɵngcc6.LiveAnnouncer), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc7.BreakpointObserver), ɵngcc0.ɵɵinject(MatSnackBar, 12), ɵngcc0.ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); };\nMatSnackBar.ɵprov = ɵɵdefineInjectable({ factory: function MatSnackBar_Factory() { return new MatSnackBar(ɵɵinject(Overlay), ɵɵinject(LiveAnnouncer), ɵɵinject(INJECTOR), ɵɵinject(BreakpointObserver), ɵɵinject(MatSnackBar, 12), ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); }, token: MatSnackBar, providedIn: MatSnackBarModule });\nMatSnackBar.ctorParameters = () => [\n    { type: Overlay },\n    { type: LiveAnnouncer },\n    { type: Injector },\n    { type: BreakpointObserver },\n    { type: MatSnackBar, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: MatSnackBarConfig, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSnackBar, [{\n        type: Injectable,\n        args: [{ providedIn: MatSnackBarModule }]\n    }], function () { return [{ type: ɵngcc5.Overlay }, { type: ɵngcc6.LiveAnnouncer }, { type: ɵngcc0.Injector }, { type: ɵngcc7.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: MatSnackBarConfig, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n\n//# sourceMappingURL=snack-bar.js.map","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class EcommerceProductService implements Resolve<any>\n{\n    routeParams: any;\n    product: any;\n    onProductChanged: BehaviorSubject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpClient\n    )\n    {\n        // Set the defaults\n        this.onProductChanged = new BehaviorSubject({});\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        this.routeParams = route.params;\n\n        return new Promise((resolve, reject) => {\n\n            Promise.all([\n                this.getProduct()\n            ]).then(\n                () => {\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get product\n     *\n     * @returns {Promise<any>}\n     */\n    getProduct(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            if ( this.routeParams.id === 'new' )\n            {\n                this.onProductChanged.next(false);\n                resolve(false);\n            }\n            else\n            {\n                this._httpClient.get('api/e-commerce-products/' + this.routeParams.id)\n                    .subscribe((response: any) => {\n                        this.product = response;\n                        this.onProductChanged.next(this.product);\n                        resolve(response);\n                    }, reject);\n            }\n        });\n    }\n\n    /**\n     * Save product\n     *\n     * @param product\n     * @returns {Promise<any>}\n     */\n    saveProduct(product): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.post('api/e-commerce-products/' + product.id, product)\n                .subscribe((response: any) => {\n                    resolve(response);\n                }, reject);\n        });\n    }\n\n    /**\n     * Add product\n     *\n     * @param product\n     * @returns {Promise<any>}\n     */\n    addProduct(product): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.post('api/e-commerce-products/', product)\n                .subscribe((response: any) => {\n                    resolve(response);\n                }, reject);\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseWidgetModule } from '@fuse/components/widget/widget.module';\n\nimport { EcommerceProductsComponent } from 'app/main/apps/e-commerce/products/products.component';\nimport { EcommerceProductsService } from 'app/main/apps/e-commerce/products/products.service';\nimport { EcommerceProductComponent } from 'app/main/apps/e-commerce/product/product.component';\nimport { EcommerceProductService } from 'app/main/apps/e-commerce/product/product.service';\nimport { EcommerceOrdersComponent } from 'app/main/apps/e-commerce/orders/orders.component';\nimport { EcommerceOrdersService } from 'app/main/apps/e-commerce/orders/orders.service';\nimport { EcommerceOrderComponent } from 'app/main/apps/e-commerce/order/order.component';\nimport { EcommerceOrderService } from 'app/main/apps/e-commerce/order/order.service';\n\nconst routes: Routes = [\n    {\n        path     : 'products',\n        component: EcommerceProductsComponent,\n        resolve  : {\n            data: EcommerceProductsService\n        }\n    },\n    {\n        path     : 'products/:id',\n        component: EcommerceProductComponent,\n        resolve  : {\n            data: EcommerceProductService\n        }\n    },\n    {\n        path     : 'products/:id/:handle',\n        component: EcommerceProductComponent,\n        resolve  : {\n            data: EcommerceProductService\n        }\n    },\n    {\n        path     : 'orders',\n        component: EcommerceOrdersComponent,\n        resolve  : {\n            data: EcommerceOrdersService\n        }\n    },\n    {\n        path     : 'orders/:id',\n        component: EcommerceOrderComponent,\n        resolve  : {\n            data: EcommerceOrderService\n        }\n    }\n];\n\n@NgModule({\n    declarations: [\n        EcommerceProductsComponent,\n        EcommerceProductComponent,\n        EcommerceOrdersComponent,\n        EcommerceOrderComponent\n    ],\n    imports     : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatChipsModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatPaginatorModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSortModule,\n        MatSnackBarModule,\n        MatTableModule,\n        MatTabsModule,\n\n        NgxChartsModule,\n        FuseSharedModule,\n        FuseWidgetModule\n    ],\n    providers   : [\n        EcommerceProductsService,\n        EcommerceProductService,\n        EcommerceOrdersService,\n        EcommerceOrderService\n    ]\n})\nexport class EcommerceModule\n{\n}\n","import { FuseUtils } from '@fuse/utils';\n\nexport class Order\n{\n    id: string;\n    reference: string;\n    subtotal: string;\n    tax: string;\n    discount: string;\n    total: string;\n    date: string;\n    customer: any;\n    products: any[];\n    status: any[];\n    payment: any;\n    shippingDetails: any[];\n\n    /**\n     * Constructor\n     *\n     * @param order\n     */\n    constructor(order?)\n    {\n        order = order || {};\n        this.id = order.id || FuseUtils.generateGUID();\n        this.reference = order.reference || FuseUtils.generateGUID();\n        this.subtotal = order.subtotal || 0;\n        this.tax = order.tax || 0;\n        this.discount = order.discount || 0;\n        this.total = order.total || 0;\n        this.date = order.date || '';\n        this.customer = order.customer || {};\n        this.products = order.products || [];\n        this.status = order.status || [];\n        this.payment = order.payment || {};\n        this.shippingDetails = order.shippingDetails || [];\n    }\n}\n"]}
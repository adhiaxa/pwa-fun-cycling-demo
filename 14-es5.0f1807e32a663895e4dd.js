!function(){function e(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||t(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(e,n){var a;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(a=t(e))||n&&e&&"number"==typeof e.length){a&&(e=a);var i=0,l=function(){};return{s:l,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:l}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,o=!0,r=!1;return{s:function(){a=e[Symbol.iterator]()},n:function(){var e=a.next();return o=e.done,e},e:function(e){r=!0,s=e},f:function(){try{o||null==a.return||a.return()}finally{if(r)throw s}}}}function t(e,n){if(e){if("string"==typeof e)return a(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?a(e,n):void 0}}function a(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=new Array(n);t<n;t++)a[t]=e[t];return a}function i(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function l(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function s(e,n,t){return n&&l(e.prototype,n),t&&l(e,t),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{NJB7:function(t,a,l){"use strict";l.r(a),l.d(a,"MailModule",function(){return J});var o=l("mrSG"),r=l("fXoL"),c=l("tyNb"),m=l("bTqV"),d=l("bSwM"),u=l("FKr1"),p=l("0IaG"),f=l("kmnG"),h=l("NFeN"),b=l("qFsG"),g=l("STbY"),v=l("d3UM"),x=l("/t3+"),y=l("sYmb"),w=l("5HBU"),S=l("LPQX"),M=l("tk/3"),A=l("2Vo4"),L=l("jD4G"),C=function(){function e(n){i(this,e),this.id=n.id,this.from=n.from,this.to=n.to,this.subject=n.subject,this.message=n.message,this.time=n.time,this.read=n.read,this.starred=n.starred,this.important=n.important,this.hasAttachments=n.hasAttachments,this.attachments=n.attachments,this.labels=n.labels,this.folder=n.folder}return s(e,[{key:"toggleStar",value:function(){this.starred=!this.starred}},{key:"toggleImportant",value:function(){this.important=!this.important}}]),e}(),_=function(){function t(e){i(this,t),this._httpClient=e,this.searchText="",this.selectedMails=[],this.onMailsChanged=new A.a([]),this.onSelectedMailsChanged=new A.a([]),this.onCurrentMailChanged=new A.a([]),this.onFoldersChanged=new A.a([]),this.onFiltersChanged=new A.a([]),this.onLabelsChanged=new A.a([]),this.onSearchTextChanged=new A.a("")}return s(t,[{key:"resolve",value:function(e,n){var t=this;return this.routeParams=e.params,new Promise(function(e,n){Promise.all([t.getFolders(),t.getFilters(),t.getLabels(),t.getMails()]).then(function(){t.routeParams.mailId?t.setCurrentMail(t.routeParams.mailId):t.setCurrentMail(null),t.onSearchTextChanged.subscribe(function(e){t.searchText=e,t.getMails()}),e()},n)})}},{key:"getFolders",value:function(){var e=this;return new Promise(function(n,t){e._httpClient.get("api/mail-folders").subscribe(function(t){e.folders=t,e.onFoldersChanged.next(e.folders),n(e.folders)},t)})}},{key:"getFilters",value:function(){var e=this;return new Promise(function(n,t){e._httpClient.get("api/mail-filters").subscribe(function(t){e.filters=t,e.onFiltersChanged.next(e.filters),n(e.filters)},t)})}},{key:"getLabels",value:function(){var e=this;return new Promise(function(n,t){e._httpClient.get("api/mail-labels").subscribe(function(t){e.labels=t,e.onLabelsChanged.next(e.labels),n(e.labels)},t)})}},{key:"getMails",value:function(){return this.routeParams.labelHandle?this.getMailsByLabel(this.routeParams.labelHandle):this.routeParams.filterHandle?this.getMailsByFilter(this.routeParams.filterHandle):this.getMailsByFolder(this.routeParams.folderHandle)}},{key:"getMailsByFolder",value:function(e){var n=this;return new Promise(function(t,a){n._httpClient.get("api/mail-folders?handle="+e).subscribe(function(e){var i=e[0].id;n._httpClient.get("api/mail-mails?folder="+i).subscribe(function(e){n.mails=e.map(function(e){return new C(e)}),n.mails=L.a.filterArrayByString(n.mails,n.searchText),n.onMailsChanged.next(n.mails),t(n.mails)},a)})})}},{key:"getMailsByFilter",value:function(e){var n=this;return new Promise(function(t,a){n._httpClient.get("api/mail-mails?"+e+"=true").subscribe(function(e){n.mails=e.map(function(e){return new C(e)}),n.mails=L.a.filterArrayByString(n.mails,n.searchText),n.onMailsChanged.next(n.mails),t(n.mails)},a)})}},{key:"getMailsByLabel",value:function(e){var n=this;return new Promise(function(t,a){n._httpClient.get("api/mail-labels?handle="+e).subscribe(function(e){var i=e[0].id;n._httpClient.get("api/mail-mails?labels="+i).subscribe(function(e){n.mails=e.map(function(e){return new C(e)}),n.mails=L.a.filterArrayByString(n.mails,n.searchText),n.onMailsChanged.next(n.mails),t(n.mails)},a)})})}},{key:"toggleSelectedMail",value:function(e){if(this.selectedMails.length>0){var t,a=n(this.selectedMails);try{for(a.s();!(t=a.n()).done;){var i=t.value;if(i.id===e){var l=this.selectedMails.indexOf(i);if(-1!==l)return this.selectedMails.splice(l,1),void this.onSelectedMailsChanged.next(this.selectedMails)}}}catch(s){a.e(s)}finally{a.f()}}this.selectedMails.push(this.mails.find(function(n){return n.id===e})),this.onSelectedMailsChanged.next(this.selectedMails)}},{key:"toggleSelectAll",value:function(){this.selectedMails.length>0?this.deselectMails():this.selectMails()}},{key:"selectMails",value:function(n,t){var a;this.selectedMails=[],void 0===n||void 0===t?this.selectedMails=this.mails:(a=this.selectedMails).push.apply(a,e(this.mails.filter(function(e){return e[n]===t}))),this.onSelectedMailsChanged.next(this.selectedMails)}},{key:"deselectMails",value:function(){this.selectedMails=[],this.onSelectedMailsChanged.next(this.selectedMails)}},{key:"setCurrentMail",value:function(e){this.currentMail=this.mails.find(function(n){return n.id===e}),this.onCurrentMailChanged.next(this.currentMail)}},{key:"toggleLabelOnSelectedMails",value:function(e){var n=this;this.selectedMails.map(function(t){var a=t.labels.indexOf(e);-1!==a?t.labels.splice(a,1):t.labels.push(e),n.updateMail(t)})}},{key:"setFolderOnSelectedMails",value:function(e){var n=this;this.selectedMails.map(function(t){t.folder=e,n.updateMail(t)}),this.deselectMails()}},{key:"updateMail",value:function(e){var n=this;return new Promise(function(t,a){n._httpClient.post("api/mail-mails/"+e.id,Object.assign({},e)).subscribe(function(e){n.getMails().then(function(e){e&&n.currentMail&&n.setCurrentMail(n.currentMail.id),t(e)},a)})})}}]),t}();_.ctorParameters=function(){return[{type:M.c}]},_=Object(o.a)([Object(r.F)()],_);var k=l("3Pt+"),O=l("XNiG"),E=l("1G5W"),I=l("Kj3r"),F=l("/uUt"),T=l("HX77"),j=l("gPJw"),R={lang:"en",data:{MAIL:{COMPOSE:"COMPOSE",FOLDERS:"FOLDERS",FILTERS:"FILTERS",LABELS:"LABELS",NO_MESSAGES:"There are no messages!",SELECT_A_MESSAGE_TO_READ:"Select a message to read",SEARCH_PLACEHOLDER:"Search for an e-mail or contact"}}},D={lang:"tr",data:{MAIL:{COMPOSE:"YEN\u0130 E-POSTA",FOLDERS:"KLAS\xd6RLER",FILTERS:"F\u0130LTRELER",LABELS:"ET\u0130KETLER",NO_MESSAGES:"Mesajiniz bulunmamakta!",SELECT_A_MESSAGE_TO_READ:"Okumak i\xe7in bir mesaj se\xe7in",SEARCH_PLACEHOLDER:"E-mail yada bir ki\u015fi aray\u0131n"}}},P=function(){function e(n,t,a){i(this,e),this._mailService=n,this._fuseSidebarService=t,this._fuseTranslationLoaderService=a,this._fuseTranslationLoaderService.loadTranslations(R,D),this.searchInput=new k.d(""),this._unsubscribeAll=new O.a}return s(e,[{key:"ngOnInit",value:function(){var e=this;this._mailService.onSelectedMailsChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(n){setTimeout(function(){e.hasSelectedMails=n.length>0,e.isIndeterminate=n.length!==e._mailService.mails.length&&n.length>0},0)}),this._mailService.onFoldersChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(n){e.folders=e._mailService.folders}),this._mailService.onFiltersChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(n){e.filters=e._mailService.filters}),this._mailService.onLabelsChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(n){e.labels=e._mailService.labels}),this._mailService.onCurrentMailChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(n){e.currentMail=n||null}),this.searchInput.valueChanges.pipe(Object(E.a)(this._unsubscribeAll),Object(I.a)(300),Object(F.a)()).subscribe(function(n){e._mailService.onSearchTextChanged.next(n)})}},{key:"ngOnDestroy",value:function(){this._unsubscribeAll.next(),this._unsubscribeAll.complete()}},{key:"toggleSelectAll",value:function(){this._mailService.toggleSelectAll()}},{key:"selectMails",value:function(e,n){this._mailService.selectMails(e,n)}},{key:"deselectMails",value:function(){this._mailService.deselectMails()}},{key:"deselectCurrentMail",value:function(){this._mailService.onCurrentMailChanged.next(null)}},{key:"toggleLabelOnSelectedMails",value:function(e){this._mailService.toggleLabelOnSelectedMails(e)}},{key:"setFolderOnSelectedMails",value:function(e){this._mailService.setFolderOnSelectedMails(e)}},{key:"toggleSidebar",value:function(e){this._fuseSidebarService.getSidebar(e).toggleOpen()}}]),e}();P.ctorParameters=function(){return[{type:_},{type:T.a},{type:j.a}]},P=Object(o.a)([Object(r.n)({selector:"mail",template:'<div id="mail" class="page-layout carded left-sidebar inner-scroll">\n\n    \x3c!-- TOP BACKGROUND --\x3e\n    <div class="top-bg accent"></div>\n    \x3c!-- / TOP BACKGROUND --\x3e\n\n    \x3c!-- SIDEBAR --\x3e\n    <fuse-sidebar class="sidebar" name="mail-main-sidebar" position="left" lockedOpen="gt-md">\n        <mail-main-sidebar></mail-main-sidebar>\n    </fuse-sidebar>\n    \x3c!-- / SIDEBAR --\x3e\n\n    \x3c!-- CENTER --\x3e\n    <div class="center">\n\n        \x3c!-- CONTENT HEADER --\x3e\n        <div class="header" fxLayout="row" fxLayoutAlign="start center">\n\n            <div class="search-wrapper" fxFlex fxLayout="row" fxLayoutAlign="start center">\n\n                <button mat-icon-button class="sidebar-toggle" fxHide.gt-md\n                        (click)="toggleSidebar(\'mail-main-sidebar\')">\n                    <mat-icon>menu</mat-icon>\n                </button>\n\n                <div class="search" fxLayout="row" fxLayoutAlign="start center">\n                    <mat-icon class="secondary-text">search</mat-icon>\n                    <input [formControl]="searchInput" [placeholder]="\'MAIL.SEARCH_PLACEHOLDER\' | translate" fxFlex>\n                </div>\n\n            </div>\n\n        </div>\n        \x3c!-- / CONTENT HEADER --\x3e\n\n        \x3c!-- CONTENT CARD --\x3e\n        <div class="content-card" [ngClass]="{\'current-mail-selected\':currentMail}">\n\n            \x3c!-- CONTENT TOOLBAR --\x3e\n            <div class="toolbar px-24 py-8">\n\n                <div class="mail-selection" fxFlex="row" fxLayoutAlign="start center">\n                    <mat-checkbox (click)="toggleSelectAll()" [checked]="hasSelectedMails"\n                                  [indeterminate]="isIndeterminate"></mat-checkbox>\n\n                    <button mat-icon-button [matMenuTriggerFor]="selectMenu">\n                        <mat-icon>arrow_drop_down</mat-icon>\n                    </button>\n                    <mat-menu #selectMenu="matMenu">\n                        <button mat-menu-item (click)="selectMails()">All</button>\n                        <button mat-menu-item (click)="deselectMails()">None</button>\n                        <button mat-menu-item (click)="selectMails(\'read\', true)">Read</button>\n                        <button mat-menu-item (click)="selectMails(\'read\', false)">Unread</button>\n                        <button mat-menu-item (click)="selectMails(\'starred\', true)">Starred</button>\n                        <button mat-menu-item (click)="selectMails(\'starred\', false)">Unstarred</button>\n                        <button mat-menu-item (click)="selectMails(\'important\', true)">Important</button>\n                        <button mat-menu-item (click)="selectMails(\'important\', false)">Unimportant</button>\n                    </mat-menu>\n\n                    <div class="toolbar-separator" *ngIf="hasSelectedMails"></div>\n\n                    <button mat-icon-button (click)="setFolderOnSelectedMails(4)" *ngIf="hasSelectedMails">\n                        <mat-icon class="secondary-text">delete</mat-icon>\n                    </button>\n\n                    <button mat-icon-button [matMenuTriggerFor]="folderMenu" *ngIf="hasSelectedMails">\n                        <mat-icon class="secondary-text">folder</mat-icon>\n                    </button>\n                    <mat-menu #folderMenu="matMenu">\n                        <button mat-menu-item *ngFor="let folder of folders"\n                                (click)="setFolderOnSelectedMails(folder.id)">{{folder.title}}\n                        </button>\n                    </mat-menu>\n\n                    <button mat-icon-button [matMenuTriggerFor]="labelMenu" *ngIf="hasSelectedMails">\n                        <mat-icon class="secondary-text">label</mat-icon>\n                    </button>\n                    <mat-menu #labelMenu="matMenu">\n                        <button mat-menu-item *ngFor="let label of labels"\n                                (click)="toggleLabelOnSelectedMails(label.id)">{{label.title}}\n                        </button>\n                    </mat-menu>\n                </div>\n\n                <div *ngIf="currentMail" fxHide.gt-xs>\n                    <button mat-icon-button (click)="deselectCurrentMail()">\n                        <mat-icon class="secondary-text">arrow_back</mat-icon>\n                    </button>\n                </div>\n            </div>\n            \x3c!-- / CONTENT TOOLBAR --\x3e\n\n            \x3c!-- CONTENT --\x3e\n            <div class="content" fxLayout="row">\n\n                <mail-list fusePerfectScrollbar fxFlex></mail-list>\n                <mail-details fusePerfectScrollbar fxFlex></mail-details>\n\n            </div>\n            \x3c!-- / CONTENT --\x3e\n\n        </div>\n        \x3c!-- / CONTENT CARD --\x3e\n\n    </div>\n    \x3c!-- / CENTER --\x3e\n\n</div>\n',encapsulation:r.rb.None,styles:["/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\nmail {\n  width: 100%;\n}\nmail .center .header .search-wrapper {\n  border-radius: 28px;\n  overflow: hidden;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\nmail .center .header .search-wrapper .sidebar-toggle {\n  margin: 0 0 0 6px;\n  width: 56px;\n  height: 56px;\n  border-radius: 0;\n  border-right: 1px solid;\n}\nmail .center .header .search-wrapper .search {\n  width: 100%;\n  height: 56px;\n  line-height: 56px;\n  padding: 0 18px;\n}\nmail .center .header .search-wrapper .search input {\n  height: 56px;\n  min-height: 56px;\n  max-height: 56px;\n  padding: 0 16px;\n  border: none;\n  outline: none;\n}\nmail .center .content-card .toolbar .toolbar-separator {\n  height: 32px;\n  width: 1px;\n  margin: 0 12px;\n}\n@media screen and (max-width: 599px) {\n  mail .center .content-card mail-list {\n    border-right: none;\n  }\n  mail .center .content-card mail-list,\nmail .center .content-card mail-details {\n    flex: 1 0 100%;\n  }\n  mail .center .content-card mail-details {\n    display: none !important;\n  }\n  mail .center .content-card.current-mail-selected .toolbar {\n    padding-left: 16px !important;\n  }\n  mail .center .content-card.current-mail-selected .toolbar .mail-selection {\n    display: none !important;\n  }\n  mail .center .content-card.current-mail-selected .content mail-list {\n    display: none !important;\n  }\n  mail .center .content-card.current-mail-selected .content mail-details {\n    display: flex !important;\n  }\n}"]})],P);var N=l("ofXK"),H=l("PVWW"),B=function(){function e(n,t,a){i(this,e),this._activatedRoute=n,this._mailService=t,this._location=a,this._unsubscribeAll=new O.a}return s(e,[{key:"ngOnInit",value:function(){var e=this;this._mailService.onMailsChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(n){e.mails=n}),this._mailService.onCurrentMailChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(n){if(n)e.currentMail=n;else{e.currentMail=null;var t=e._activatedRoute.snapshot.params.labelHandle,a=e._activatedRoute.snapshot.params.filterHandle,i=e._activatedRoute.snapshot.params.folderHandle;t?e._location.go("apps/mail/label/"+t):a?e._location.go("apps/mail/filter/"+a):e._location.go("apps/mail/"+i)}})}},{key:"ngOnDestroy",value:function(){this._unsubscribeAll.next(),this._unsubscribeAll.complete()}},{key:"readMail",value:function(e){var n=this._activatedRoute.snapshot.params.labelHandle,t=this._activatedRoute.snapshot.params.filterHandle,a=this._activatedRoute.snapshot.params.folderHandle;n?this._location.go("apps/mail/label/"+n+"/"+e):t?this._location.go("apps/mail/filter/"+t+"/"+e):this._location.go("apps/mail/"+a+"/"+e),this._mailService.setCurrentMail(e)}}]),e}();B.ctorParameters=function(){return[{type:c.a},{type:_},{type:N.g}]},B=Object(o.a)([Object(r.n)({selector:"mail-list",template:'<div *ngIf="mails.length === 0" fxLayout="column" fxLayoutAlign="center center" fxFlexFill>\n    <span class="no-messages-text hint-text">{{ \'MAIL.NO_MESSAGES\' | translate }}</span>\n</div>\n\n<div class="mail-list" [@animateStagger]="{value:\'50\'}">\n    <mail-list-item *ngFor="let mail of mails" [mail]="mail" (click)="readMail(mail.id)"\n                    [ngClass]="{\'current-mail\':mail?.id == currentMail?.id}"\n                    [@animate]="{value:\'*\',params:{y:\'100%\'}}">\n    </mail-list-item>\n</div>\n',encapsulation:r.rb.None,animations:H.a,styles:["mail-list {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 0;\n  border-right: 1px solid;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}\nmail-list .no-messages-text {\n  font-size: 24px;\n  font-weight: 300;\n}\nmail-list .mail-list {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}"]})],B);var z=function(){function e(n){i(this,e),this._mailService=n,this._unsubscribeAll=new O.a}return s(e,[{key:"ngOnInit",value:function(){var e=this;this.mail=new C(this.mail),this._mailService.onSelectedMailsChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(t){if(e.selected=!1,t.length>0){var a,i=n(t);try{for(i.s();!(a=i.n()).done;){if(a.value.id===e.mail.id){e.selected=!0;break}}}catch(l){i.e(l)}finally{i.f()}}}),this._mailService.onLabelsChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(n){e.labels=n})}},{key:"ngOnDestroy",value:function(){this._unsubscribeAll.next(),this._unsubscribeAll.complete()}},{key:"onSelectedChange",value:function(){this._mailService.toggleSelectedMail(this.mail.id)}},{key:"toggleStar",value:function(e){e.stopPropagation(),this.mail.toggleStar(),this._mailService.updateMail(this.mail)}},{key:"toggleImportant",value:function(e){e.stopPropagation(),this.mail.toggleImportant(),this._mailService.updateMail(this.mail)}}]),e}();z.ctorParameters=function(){return[{type:_}]},z.propDecorators={mail:[{type:r.I}],selected:[{type:r.A,args:["class.selected"]}]},z=Object(o.a)([Object(r.n)({selector:"mail-list-item",template:'<div fxLayout="row" fxLayoutAlign="start center">\n\n    <mat-checkbox [(ngModel)]="selected" (ngModelChange)="onSelectedChange()"\n                  (click)="$event.stopPropagation();"></mat-checkbox>\n\n    <div class="info" fxFlex FlexLayout="column">\n\n        <div class="row-1" fxLayout="row" fxLayoutAlign="start center">\n\n            <div class="name" fxLayout="row" fxLayoutAlign="start center" fxFlex>\n                <img class="avatar" *ngIf="mail.from?.avatar" alt="{{mail.from?.name}}" src="{{mail.from?.avatar}}"/>\n                <div class="avatar accent" *ngIf="!mail.from?.avatar">{{mail.from?.name[0]}}</div>\n                <span class="text-truncate" *ngIf="mail?.from">{{mail.from?.name}}</span>\n                <mat-icon class="s-16 ml-8" *ngIf="mail.hasAttachments">attachment</mat-icon>\n            </div>\n\n            <div fxLayout="row" fxLayoutAlign="start center">\n\n                <div class="time">{{mail.time}}</div>\n\n            </div>\n\n        </div>\n\n        <div class="row-2" fxLayout="row" fxLayoutAlign="start center">\n\n            <div fxLayout="column" fxLayoutAlign="start start">\n\n                <div class="subject text-truncate">\n                    {{mail.subject}}\n                </div>\n\n                <div class="message text-truncate" *ngIf="mail?.message">\n                    {{mail.message | htmlToPlaintext | slice:0:180}}{{mail.message.length > 180 ? \'...\' : \'\'}}\n                </div>\n\n                <div class="labels" fxLayout="row wrap" fxHide fxShow.gt-sm>\n                    <div class="label" *ngFor="let labelId of mail.labels"\n                         fxLayout="row" fxLayoutAlign="start center">\n                        <div class="label-color"\n                             [ngStyle]="{\'background-color\': labels | getById:labelId:\'color\'}"></div>\n                        <div class="label-title">{{labels | getById:labelId:\'title\'}}</div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n',encapsulation:r.rb.None,styles:["/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\nmail-list-item {\n  flex-shrink: 0;\n  position: relative;\n  padding: 16px 24px;\n  border-bottom: 1px solid;\n  cursor: pointer;\n}\nmail-list-item.unread .info .name {\n  font-weight: 700;\n}\nmail-list-item.unread .info .row-2 .subject {\n  font-weight: 700;\n}\nmail-list-item .info {\n  overflow: hidden;\n  width: 0;\n  margin-left: 16px;\n  position: relative;\n}\nmail-list-item .info .row-1 {\n  margin-bottom: 8px;\n}\nmail-list-item .info .row-1 .name {\n  font-size: 15px;\n  font-weight: 600;\n}\nmail-list-item .info .row-1 .name .avatar {\n  min-width: 32px;\n  width: 32px;\n  height: 32px;\n  line-height: 32px;\n}\nmail-list-item .info .row-1 .actions {\n  margin-left: 4px;\n}\nmail-list-item .info .row-1 .actions .mat-icon-button {\n  width: 32px;\n  height: 32px;\n  line-height: 1;\n}\nmail-list-item .info .row-2 .subject,\nmail-list-item .info .row-2 .message {\n  width: 100%;\n}\nmail-list-item .info .row-2 .message {\n  position: relative;\n}\nmail-list-item .info .row-2 .labels {\n  margin-top: 8px;\n}\nmail-list-item .info .row-2 .labels .label {\n  font-size: 11px;\n  border-radius: 4px;\n  margin: 0 4px 0 0;\n  padding: 3px 8px;\n}\nmail-list-item .info .row-2 .labels .label .label-color {\n  width: 8px;\n  height: 8px;\n  margin-right: 8px;\n  border-radius: 50%;\n}"]})],z);var G=function(){function e(n){i(this,e),this._mailService=n,this.showDetails=!1,this._unsubscribeAll=new O.a}return s(e,[{key:"ngOnInit",value:function(){var e=this;this._mailService.onCurrentMailChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(n){e.mail=n}),this._mailService.onLabelsChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(n){e.labels=n})}},{key:"ngOnDestroy",value:function(){this._unsubscribeAll.next(),this._unsubscribeAll.complete()}},{key:"toggleStar",value:function(e){e.stopPropagation(),this.mail.toggleStar(),this._mailService.updateMail(this.mail)}},{key:"toggleImportant",value:function(e){e.stopPropagation(),this.mail.toggleImportant(),this._mailService.updateMail(this.mail)}}]),e}();G.ctorParameters=function(){return[{type:_}]},G=Object(o.a)([Object(r.n)({selector:"mail-details",template:'<div *ngIf="!mail" fxLayout="column" fxLayoutAlign="center center" fxFlex>\n    <mat-icon class="s-128 mb-16 select-message-icon hint-text"\n              [@animate]="{value:\'*\',params:{delay:\'300ms\',scale:\'0.2\'}}">\n        email\n    </mat-icon>\n    <span class="select-message-text hint-text" [@animate]="{value:\'*\',params:{delay:\'400ms\'}}">\n        <span>{{ \'MAIL.SELECT_A_MESSAGE_TO_READ\' | translate }}</span>\n    </span>\n</div>\n\n<div *ngIf="mail">\n\n    <div class="mail-header" fxLayout="row" fxLayoutAlign="space-between center">\n\n        <div>\n            <div class="subject">{{mail.subject}}</div>\n\n            <div class="labels mt-8" fxLayout="row wrap">\n                <div class="label" *ngFor="let labelId of mail.labels"\n                     fxLayout="row" fxLayoutAlign="start center">\n                    <div class="label-color" [ngStyle]="{\'background-color\': labels | getById:labelId:\'color\'}"></div>\n                    <div class="label-title">{{labels | getById:labelId:\'title\'}}</div>\n                </div>\n            </div>\n\n        </div>\n\n        <div class="actions" fxLayout="row" fxLayoutAlign="start center">\n            <button mat-icon-button (click)="toggleStar($event)" aria-label="Toggle star">\n                <mat-icon class="amber-fg" *ngIf="mail.starred">star</mat-icon>\n                <mat-icon class="secondary-text" *ngIf="!mail.starred">star_border</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)="toggleImportant($event)" aria-label="Toggle important">\n                <mat-icon class="red-fg" *ngIf="mail.important">label</mat-icon>\n                <mat-icon class="secondary-text" *ngIf="!mail.important">label_outline</mat-icon>\n            </button>\n        </div>\n    </div>\n\n    <div class="mail-content">\n\n        <div class="info" fxLayout="row" fxLayoutAlign="space-between start">\n\n            <div fxFlex fxLayout="column" fxLayoutAlign="start start">\n\n                <div fxLayout="row" fxLayoutAlign="start start">\n\n                    <div>\n                        <img *ngIf="mail.from.avatar" alt="{{mail.from.name}}"\n                             src="{{mail.from.avatar}}" class="avatar"/>\n\n                        <div *ngIf="!mail.from.avatar" class="avatar" ms-random-class="vm.colors">\n                            {{mail.from.name[0]}}\n                        </div>\n                    </div>\n\n                    <div fxLayout="column" fxLayoutAlign="start start">\n\n                        <div class="name">\n                            {{mail.from.name}}\n                        </div>\n\n                        <div class="to" fxLayout="row" fxLayoutAlign="start center">\n                            <div class="to-text">to</div>\n                            <div>{{mail.to[0].name}}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <a class="toggle-details" (click)="showDetails = !showDetails">\n                    <span *ngIf="!showDetails">Show Details</span>\n                    <span *ngIf="showDetails">Hide Details</span>\n                </a>\n\n                <div *ngIf="showDetails" class="details" fxLayout="row" fxLayoutAlign="start start">\n\n                    <div fxLayout="column">\n                        <span class="title">From:</span>\n                        <span class="title">To:</span>\n                        <span class="title">Date:</span>\n                    </div>\n\n                    <div fxLayout="column">\n                        <span class="detail">{{mail.from.email}}</span>\n                        <span class="detail">{{mail.to[0].email}}</span>\n                        <span class="detail">{{mail.time}}</span>\n                    </div>\n                </div>\n            </div>\n\n            <button mat-icon-button [matMenuTriggerFor]="moreMenu" aria-label="More" (click)="$event.stopPropagation()">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n\n            <mat-menu #moreMenu="matMenu">\n                <button mat-menu-item aria-label="Reply">\n                    <mat-icon>reply</mat-icon>\n                    <span>Reply</span>\n                </button>\n\n                <button mat-menu-item aria-label="Forward">\n                    <mat-icon>forward</mat-icon>\n                    <span>Forward</span>\n                </button>\n\n                <button mat-menu-item aria-label="Print">\n                    <mat-icon>print</mat-icon>\n                    <span>Print</span>\n                </button>\n            </mat-menu>\n        </div>\n\n        <div [innerHTML]="mail.message"></div>\n\n    </div>\n\n    <div *ngIf="mail.attachments" class="mail-attachments">\n\n        <div class="title">\n            <span>Attachments</span>\n            ({{mail.attachments.length}})\n        </div>\n\n        <div class="attachment-list" fxLayout="row wrap">\n\n            <div class="attachment" fxLayout="column"\n                 *ngFor="let attachment of mail.attachments">\n\n                <img class="preview" src="{{attachment.preview}}">\n\n                <div fxLayout="column">\n                    <a href="#" onclick="event.preventDefault()">View</a>\n                    <a href="#" onclick="event.preventDefault()">Download</a>\n                    <div class="size">({{attachment.size}})</div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n',encapsulation:r.rb.None,animations:H.a,styles:["/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\nmail-details {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 24px;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}\nmail-details .select-message-text {\n  font-size: 24px;\n  font-weight: 300;\n}\nmail-details .mail-header {\n  padding-bottom: 16px;\n  border-bottom: 1px solid;\n}\nmail-details .mail-header .actions {\n  min-width: 88px;\n}\nmail-details .mail-header .subject {\n  font-size: 17px;\n  font-weight: 600;\n}\nmail-details .mail-header .label {\n  font-size: 11px;\n  border-radius: 4px;\n  margin: 4px 4px 4px 0;\n  padding: 3px 8px;\n}\nmail-details .mail-header .label .label-color {\n  width: 8px;\n  height: 8px;\n  margin-right: 8px;\n  border-radius: 50%;\n}\nmail-details .mail-content {\n  padding: 24px 0;\n}\nmail-details .mail-content .to .to-text {\n  margin-right: 4px;\n  text-transform: lowercase;\n}\nmail-details .mail-content .info {\n  padding-bottom: 16px;\n}\nmail-details .mail-content .info .avatar {\n  margin-right: 16px;\n}\nmail-details .mail-content .info .name {\n  margin-right: 8px;\n  font-weight: 600;\n}\nmail-details .mail-content .info .toggle-details {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  text-decoration: underline;\n  padding-top: 16px;\n  cursor: pointer;\n  font-weight: 600;\n}\nmail-details .mail-content .info .details {\n  padding-top: 8px;\n}\nmail-details .mail-content .info .details .title {\n  font-weight: 600;\n  margin-right: 6px;\n}\nmail-details .mail-attachments {\n  padding: 24px 0;\n  border-top: 1px solid;\n}\nmail-details .mail-attachments .title {\n  margin-bottom: 16px;\n  font-weight: 600;\n}\nmail-details .mail-attachments .attachment .preview {\n  width: 100px;\n  margin: 0 16px 8px 0;\n  border-radius: 4px;\n}\nmail-details .mail-attachments .attachment .link {\n  margin-bottom: 2px;\n}\nmail-details .mail-attachments .attachment .size {\n  font-size: 11px;\n}"]})],G);var K=function(){function e(n,t){i(this,e),this.matDialogRef=n,this._data=t,this.composeForm=this.createComposeForm(),this.showExtraToFields=!1}return s(e,[{key:"createComposeForm",value:function(){return new k.e({from:new k.d({value:"johndoe@creapond.com",disabled:!0}),to:new k.d(""),cc:new k.d(""),bcc:new k.d(""),subject:new k.d(""),message:new k.d("")})}},{key:"toggleExtraToFields",value:function(){this.showExtraToFields=!this.showExtraToFields}}]),e}();K.ctorParameters=function(){return[{type:p.d},{type:void 0,decorators:[{type:r.D,args:[p.a]}]}]},K=Object(o.a)([Object(r.n)({selector:"mail-compose",template:'<div class="dialog-content-wrapper">\n    <mat-toolbar class="mat-accent m-0">\n        <mat-toolbar-row fxFlex fxLayout="row" fxLayoutAlign="space-between center">\n            <span class="title dialog-title">New Message</span>\n            <button mat-icon-button (click)="matDialogRef.close()" aria-label="Close dialog">\n                <mat-icon>close</mat-icon>\n            </button>\n        </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div mat-dialog-content class="p-24 m-0" fusePerfectScrollbar>\n\n        <form name="composeForm" [formGroup]="composeForm" class="compose-form" fxLayout="column" fxFlex>\n\n            <mat-form-field appearance="outline">\n                <mat-label>From</mat-label>\n                <input matInput name="from"\n                       formControlName="from"\n                       type="email">\n            </mat-form-field>\n\n            <div class="show-hide-extra-fields" (click)="toggleExtraToFields()">\n                <span [fxShow]="!showExtraToFields">Show CC & BCC</span>\n                <span [fxShow]="showExtraToFields">Hide CC & BCC</span>\n            </div>\n\n            <mat-form-field appearance="outline">\n                <mat-label>To</mat-label>\n                <input matInput name="to"\n                       formControlName="to"\n                       type="email" required>\n            </mat-form-field>\n\n            <mat-form-field appearance="outline" [fxShow]="showExtraToFields">\n                <mat-label>Cc</mat-label>\n                <input matInput\n                       name="cc"\n                       formControlName="cc"\n                       type="email">\n            </mat-form-field>\n\n            <mat-form-field appearance="outline" [fxShow]="showExtraToFields">\n                <mat-label>Bcc</mat-label>\n                <input matInput\n                       name="bcc"\n                       formControlName="bcc"\n                       type="email">\n            </mat-form-field>\n\n            <mat-form-field appearance="outline">\n                <mat-label>Subject</mat-label>\n                <input matInput name="subject"\n                       formControlName="subject">\n            </mat-form-field>\n\n            <mat-form-field appearance="outline">\n                <mat-label>Message</mat-label>\n                <textarea matInput name="message"\n                          formControlName="message"\n                          rows="6">\n                </textarea>\n            </mat-form-field>\n\n            <div class="attachment-list">\n\n                <div class="attachment" fxLayout="row" fxLayoutAlign="space-between center">\n                    <div>\n                        <span class="filename">attachment-2.doc</span>\n                        <span class="size ml-4">(12 Kb)</span>\n                    </div>\n\n                    <button mat-icon-button aria-label="Delete attachment">\n                        <mat-icon class="s-16">close</mat-icon>\n                    </button>\n                </div>\n\n                <div class="attachment" fxLayout="row" fxLayoutAlign="space-between center">\n                    <div>\n                        <span class="filename">attachment-1.jpg</span>\n                        <span class="size ml-4">(350 Kb)</span>\n                    </div>\n\n                    <button mat-icon-button aria-label="Delete attachment">\n                        <mat-icon class="s-16">close</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <div mat-dialog-actions class="m-0 p-16" fxLayout="row" fxLayoutAlign="space-between center">\n        <div>\n            <button mat-raised-button\n                    color="accent"\n                    (click)="matDialogRef.close([\'send\',composeForm])"\n                    class="save-button"\n                    [disabled]="composeForm.invalid"\n                    aria-label="SAVE">\n                SEND\n            </button>\n\n            <button mat-icon-button matTooltip="Attach a file">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n        </div>\n\n        <button mat-icon-button (click)="matDialogRef.close([\'delete\',composeForm])"\n                aria-label="Delete"\n                matTooltip="Delete">\n            <mat-icon>delete</mat-icon>\n        </button>\n    </div>\n</div>\n',encapsulation:r.rb.None,styles:["/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n@media screen and (max-width: 599px) {\n  .mail-compose-dialog {\n    width: 100%;\n  }\n}\n@media screen and (min-width: 600px) {\n  .mail-compose-dialog {\n    width: 640px;\n  }\n}\n.mail-compose-dialog .mat-dialog-container {\n  padding: 0;\n}\n.mail-compose-dialog .mat-dialog-container .compose-form .mat-form-field {\n  width: 100%;\n}\n.mail-compose-dialog .mat-dialog-container .compose-form .show-hide-extra-fields {\n  text-align: right;\n  cursor: pointer;\n  font-size: 12px;\n}\n.mail-compose-dialog .mat-dialog-container .compose-form .attachment-list {\n  font-size: 13px;\n}\n.mail-compose-dialog .mat-dialog-container .compose-form .attachment-list .attachment {\n  border: 1px solid;\n  border-radius: 20px;\n  padding-left: 16px;\n  margin-top: 8px;\n}\n.mail-compose-dialog .mat-dialog-container .compose-form .attachment-list .attachment .filename {\n  font-weight: 600;\n}\n.mail-compose-dialog .mat-dialog-container .compose-form .attachment-list .attachment:last-child {\n  margin-bottom: 0;\n}\n.mail-compose-dialog .dialog-content-wrapper {\n  max-height: 85vh;\n  display: flex;\n  flex-direction: column;\n}"]})],K);var U=function(){function e(n,t){i(this,e),this._mailService=n,this._matDialog=t,this.accounts={creapond:"johndoe@creapond.com",withinpixels:"johndoe@withinpixels.com"},this.selectedAccount="creapond",this._unsubscribeAll=new O.a}return s(e,[{key:"ngOnInit",value:function(){var e=this;this._mailService.onFoldersChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(n){e.folders=n}),this._mailService.onFiltersChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(n){e.filters=n}),this._mailService.onLabelsChanged.pipe(Object(E.a)(this._unsubscribeAll)).subscribe(function(n){e.labels=n})}},{key:"ngOnDestroy",value:function(){this._unsubscribeAll.next(),this._unsubscribeAll.complete()}},{key:"composeDialog",value:function(){this.dialogRef=this._matDialog.open(K,{panelClass:"mail-compose-dialog"}),this.dialogRef.afterClosed().subscribe(function(e){if(e){var n=e[0],t=e[1];switch(n){case"send":console.log("new Mail",t.getRawValue());break;case"delete":console.log("delete Mail")}}})}}]),e}();U.ctorParameters=function(){return[{type:_},{type:p.b}]},U=Object(o.a)([Object(r.n)({selector:"mail-main-sidebar",template:'\x3c!-- SIDEBAR HEADER --\x3e\n<div fxLayout="column" fxLayoutAlign="space-between start"\n     class="header accent p-24 pb-4">\n\n    <div class="logo" fxFlex fxLayout="row" fxLayoutAlign="start center">\n        <mat-icon class="logo-icon s-32" [@animate]="{value:\'*\',params:{delay:\'50ms\',scale:\'0.2\'}}">mail\n        </mat-icon>\n        <span class="logo-text" [@animate]="{value:\'*\',params:{delay:\'100ms\',x:\'-25px\'}}">Mailbox</span>\n    </div>\n\n    <div class="account" fxLayout="column" [@animate]="{value:\'*\',params:{delay:\'300ms\'}}">\n        <div class="title">John Doe</div>\n        <mat-form-field floatLabel="never">\n            <mat-select class="account-selection" placeholder="Mail Selection"\n                        [ngModel]="selectedAccount">\n                <mat-option *ngFor="let account of (accounts | keys)" [value]="account.key">\n                    {{account.value}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n</div>\n\x3c!-- / SIDEBAR HEADER --\x3e\n\n\x3c!-- SIDEBAR CONTENT --\x3e\n<div class="content" fusePerfectScrollbar [@animate]="{value:\'*\',params:{y:\'50px\'}}">\n\n    <div class="px-24 pt-32 pb-12">\n        <button mat-raised-button\n                class="mat-accent compose-dialog-button w-100-p"\n                (click)="composeDialog()"\n                aria-label="Compose">\n            {{ \'MAIL.COMPOSE\' | translate }}\n        </button>\n    </div>\n\n    <div class="nav material2">\n\n        <div class="nav-subheader">{{ \'MAIL.FOLDERS\' | translate }}</div>\n\n        <div class="nav-item" *ngFor="let folder of folders">\n            <a class="nav-link" matRipple [routerLink]="\'/apps/mail/\' + folder.handle"\n               [routerLinkActive]="[\'active\', \'accent\']">\n                <mat-icon class="nav-link-icon" *ngIf="folder.icon">{{folder.icon}}</mat-icon>\n                <span>{{folder.title}}</span>\n            </a>\n        </div>\n\n        <div class="nav-subheader">{{ \'MAIL.FILTERS\' | translate }}</div>\n\n        <div class="nav-item" *ngFor="let filter of filters">\n            <a class="nav-link" matRipple [routerLink]="\'/apps/mail/filter/\' + filter.handle"\n               [routerLinkActive]="[\'active\', \'accent\']">\n                <mat-icon class="nav-link-icon" [ngClass]="filter.color" *ngIf="filter.icon">{{filter.icon}}</mat-icon>\n                <span>{{filter.title}}</span>\n            </a>\n        </div>\n\n        <div class="nav-subheader">{{ \'MAIL.LABELS\' | translate }}</div>\n\n        <div class="nav-item" *ngFor="let label of labels">\n            <a class="nav-link" matRipple [routerLink]="\'/apps/mail/label/\' + label.handle"\n               [routerLinkActive]="[\'active\', \'accent\']">\n                <mat-icon class="nav-link-icon" [ngStyle]="{\'color\':label.color}">label</mat-icon>\n                <span>{{label.title}}</span>\n            </a>\n        </div>\n\n    </div>\n\n</div>\n\x3c!-- / SIDEBAR CONTENT --\x3e\n',encapsulation:r.rb.None,animations:H.a,styles:["mail-main-sidebar {\n  display: flex;\n  flex: 1 0 auto;\n  flex-direction: column;\n  height: 100%;\n}\nmail-main-sidebar .header .logo .logo-icon {\n  margin: 0 16px 0 0;\n}\nmail-main-sidebar .header .logo .logo-text {\n  font-size: 24px;\n  line-height: 24px;\n}\nmail-main-sidebar .header .account {\n  width: 100%;\n}"]})],U);var V=[{path:"label/:labelHandle",component:P,resolve:{mail:_}},{path:"label/:labelHandle/:mailId",component:P,resolve:{mail:_}},{path:"filter/:filterHandle",component:P,resolve:{mail:_}},{path:"filter/:filterHandle/:mailId",component:P,resolve:{mail:_}},{path:":folderHandle",component:P,resolve:{mail:_}},{path:":folderHandle/:mailId",component:P,resolve:{mail:_}},{path:"**",redirectTo:"inbox"}],J=function e(){i(this,e)};J=Object(o.a)([Object(r.N)({declarations:[P,B,z,G,U,K],imports:[c.h.forChild(V),m.b,d.a,p.c,f.d,h.b,b.b,g.a,u.p,v.a,x.a,y.a,w.a,S.h],providers:[_],entryComponents:[K]})],J)}}])}();
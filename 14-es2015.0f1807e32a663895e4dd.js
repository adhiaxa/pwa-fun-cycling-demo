(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{NJB7:function(e,t,n){"use strict";n.r(t),n.d(t,"MailModule",function(){return G});var a=n("mrSG"),i=n("fXoL"),l=n("tyNb"),s=n("bTqV"),o=n("bSwM"),r=n("FKr1"),c=n("0IaG"),m=n("kmnG"),d=n("NFeN"),h=n("qFsG"),p=n("STbY"),u=n("d3UM"),b=n("/t3+"),g=n("sYmb"),f=n("5HBU"),x=n("LPQX"),v=n("tk/3"),w=n("2Vo4"),y=n("jD4G");class S{constructor(e){this.id=e.id,this.from=e.from,this.to=e.to,this.subject=e.subject,this.message=e.message,this.time=e.time,this.read=e.read,this.starred=e.starred,this.important=e.important,this.hasAttachments=e.hasAttachments,this.attachments=e.attachments,this.labels=e.labels,this.folder=e.folder}toggleStar(){this.starred=!this.starred}toggleImportant(){this.important=!this.important}}let M=class{constructor(e){this._httpClient=e,this.searchText="",this.selectedMails=[],this.onMailsChanged=new w.a([]),this.onSelectedMailsChanged=new w.a([]),this.onCurrentMailChanged=new w.a([]),this.onFoldersChanged=new w.a([]),this.onFiltersChanged=new w.a([]),this.onLabelsChanged=new w.a([]),this.onSearchTextChanged=new w.a("")}resolve(e,t){return this.routeParams=e.params,new Promise((e,t)=>{Promise.all([this.getFolders(),this.getFilters(),this.getLabels(),this.getMails()]).then(()=>{this.routeParams.mailId?this.setCurrentMail(this.routeParams.mailId):this.setCurrentMail(null),this.onSearchTextChanged.subscribe(e=>{this.searchText=e,this.getMails()}),e()},t)})}getFolders(){return new Promise((e,t)=>{this._httpClient.get("api/mail-folders").subscribe(t=>{this.folders=t,this.onFoldersChanged.next(this.folders),e(this.folders)},t)})}getFilters(){return new Promise((e,t)=>{this._httpClient.get("api/mail-filters").subscribe(t=>{this.filters=t,this.onFiltersChanged.next(this.filters),e(this.filters)},t)})}getLabels(){return new Promise((e,t)=>{this._httpClient.get("api/mail-labels").subscribe(t=>{this.labels=t,this.onLabelsChanged.next(this.labels),e(this.labels)},t)})}getMails(){return this.routeParams.labelHandle?this.getMailsByLabel(this.routeParams.labelHandle):this.routeParams.filterHandle?this.getMailsByFilter(this.routeParams.filterHandle):this.getMailsByFolder(this.routeParams.folderHandle)}getMailsByFolder(e){return new Promise((t,n)=>{this._httpClient.get("api/mail-folders?handle="+e).subscribe(e=>{const a=e[0].id;this._httpClient.get("api/mail-mails?folder="+a).subscribe(e=>{this.mails=e.map(e=>new S(e)),this.mails=y.a.filterArrayByString(this.mails,this.searchText),this.onMailsChanged.next(this.mails),t(this.mails)},n)})})}getMailsByFilter(e){return new Promise((t,n)=>{this._httpClient.get("api/mail-mails?"+e+"=true").subscribe(e=>{this.mails=e.map(e=>new S(e)),this.mails=y.a.filterArrayByString(this.mails,this.searchText),this.onMailsChanged.next(this.mails),t(this.mails)},n)})}getMailsByLabel(e){return new Promise((t,n)=>{this._httpClient.get("api/mail-labels?handle="+e).subscribe(e=>{const a=e[0].id;this._httpClient.get("api/mail-mails?labels="+a).subscribe(e=>{this.mails=e.map(e=>new S(e)),this.mails=y.a.filterArrayByString(this.mails,this.searchText),this.onMailsChanged.next(this.mails),t(this.mails)},n)})})}toggleSelectedMail(e){if(this.selectedMails.length>0)for(const t of this.selectedMails)if(t.id===e){const e=this.selectedMails.indexOf(t);if(-1!==e)return this.selectedMails.splice(e,1),void this.onSelectedMailsChanged.next(this.selectedMails)}this.selectedMails.push(this.mails.find(t=>t.id===e)),this.onSelectedMailsChanged.next(this.selectedMails)}toggleSelectAll(){this.selectedMails.length>0?this.deselectMails():this.selectMails()}selectMails(e,t){this.selectedMails=[],void 0===e||void 0===t?this.selectedMails=this.mails:this.selectedMails.push(...this.mails.filter(n=>n[e]===t)),this.onSelectedMailsChanged.next(this.selectedMails)}deselectMails(){this.selectedMails=[],this.onSelectedMailsChanged.next(this.selectedMails)}setCurrentMail(e){this.currentMail=this.mails.find(t=>t.id===e),this.onCurrentMailChanged.next(this.currentMail)}toggleLabelOnSelectedMails(e){this.selectedMails.map(t=>{const n=t.labels.indexOf(e);-1!==n?t.labels.splice(n,1):t.labels.push(e),this.updateMail(t)})}setFolderOnSelectedMails(e){this.selectedMails.map(t=>{t.folder=e,this.updateMail(t)}),this.deselectMails()}updateMail(e){return new Promise((t,n)=>{this._httpClient.post("api/mail-mails/"+e.id,Object.assign({},e)).subscribe(e=>{this.getMails().then(e=>{e&&this.currentMail&&this.setCurrentMail(this.currentMail.id),t(e)},n)})})}};M.ctorParameters=()=>[{type:v.c}],M=Object(a.a)([Object(i.F)()],M);var L=n("3Pt+"),A=n("XNiG"),C=n("1G5W"),_=n("Kj3r"),O=n("/uUt"),E=n("HX77"),F=n("gPJw");const I={lang:"en",data:{MAIL:{COMPOSE:"COMPOSE",FOLDERS:"FOLDERS",FILTERS:"FILTERS",LABELS:"LABELS",NO_MESSAGES:"There are no messages!",SELECT_A_MESSAGE_TO_READ:"Select a message to read",SEARCH_PLACEHOLDER:"Search for an e-mail or contact"}}},T={lang:"tr",data:{MAIL:{COMPOSE:"YEN\u0130 E-POSTA",FOLDERS:"KLAS\xd6RLER",FILTERS:"F\u0130LTRELER",LABELS:"ET\u0130KETLER",NO_MESSAGES:"Mesajiniz bulunmamakta!",SELECT_A_MESSAGE_TO_READ:"Okumak i\xe7in bir mesaj se\xe7in",SEARCH_PLACEHOLDER:"E-mail yada bir ki\u015fi aray\u0131n"}}};let k=class{constructor(e,t,n){this._mailService=e,this._fuseSidebarService=t,this._fuseTranslationLoaderService=n,this._fuseTranslationLoaderService.loadTranslations(I,T),this.searchInput=new L.d(""),this._unsubscribeAll=new A.a}ngOnInit(){this._mailService.onSelectedMailsChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{setTimeout(()=>{this.hasSelectedMails=e.length>0,this.isIndeterminate=e.length!==this._mailService.mails.length&&e.length>0},0)}),this._mailService.onFoldersChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{this.folders=this._mailService.folders}),this._mailService.onFiltersChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{this.filters=this._mailService.filters}),this._mailService.onLabelsChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{this.labels=this._mailService.labels}),this._mailService.onCurrentMailChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{this.currentMail=e||null}),this.searchInput.valueChanges.pipe(Object(C.a)(this._unsubscribeAll),Object(_.a)(300),Object(O.a)()).subscribe(e=>{this._mailService.onSearchTextChanged.next(e)})}ngOnDestroy(){this._unsubscribeAll.next(),this._unsubscribeAll.complete()}toggleSelectAll(){this._mailService.toggleSelectAll()}selectMails(e,t){this._mailService.selectMails(e,t)}deselectMails(){this._mailService.deselectMails()}deselectCurrentMail(){this._mailService.onCurrentMailChanged.next(null)}toggleLabelOnSelectedMails(e){this._mailService.toggleLabelOnSelectedMails(e)}setFolderOnSelectedMails(e){this._mailService.setFolderOnSelectedMails(e)}toggleSidebar(e){this._fuseSidebarService.getSidebar(e).toggleOpen()}};k.ctorParameters=()=>[{type:M},{type:E.a},{type:F.a}],k=Object(a.a)([Object(i.n)({selector:"mail",template:'<div id="mail" class="page-layout carded left-sidebar inner-scroll">\n\n    \x3c!-- TOP BACKGROUND --\x3e\n    <div class="top-bg accent"></div>\n    \x3c!-- / TOP BACKGROUND --\x3e\n\n    \x3c!-- SIDEBAR --\x3e\n    <fuse-sidebar class="sidebar" name="mail-main-sidebar" position="left" lockedOpen="gt-md">\n        <mail-main-sidebar></mail-main-sidebar>\n    </fuse-sidebar>\n    \x3c!-- / SIDEBAR --\x3e\n\n    \x3c!-- CENTER --\x3e\n    <div class="center">\n\n        \x3c!-- CONTENT HEADER --\x3e\n        <div class="header" fxLayout="row" fxLayoutAlign="start center">\n\n            <div class="search-wrapper" fxFlex fxLayout="row" fxLayoutAlign="start center">\n\n                <button mat-icon-button class="sidebar-toggle" fxHide.gt-md\n                        (click)="toggleSidebar(\'mail-main-sidebar\')">\n                    <mat-icon>menu</mat-icon>\n                </button>\n\n                <div class="search" fxLayout="row" fxLayoutAlign="start center">\n                    <mat-icon class="secondary-text">search</mat-icon>\n                    <input [formControl]="searchInput" [placeholder]="\'MAIL.SEARCH_PLACEHOLDER\' | translate" fxFlex>\n                </div>\n\n            </div>\n\n        </div>\n        \x3c!-- / CONTENT HEADER --\x3e\n\n        \x3c!-- CONTENT CARD --\x3e\n        <div class="content-card" [ngClass]="{\'current-mail-selected\':currentMail}">\n\n            \x3c!-- CONTENT TOOLBAR --\x3e\n            <div class="toolbar px-24 py-8">\n\n                <div class="mail-selection" fxFlex="row" fxLayoutAlign="start center">\n                    <mat-checkbox (click)="toggleSelectAll()" [checked]="hasSelectedMails"\n                                  [indeterminate]="isIndeterminate"></mat-checkbox>\n\n                    <button mat-icon-button [matMenuTriggerFor]="selectMenu">\n                        <mat-icon>arrow_drop_down</mat-icon>\n                    </button>\n                    <mat-menu #selectMenu="matMenu">\n                        <button mat-menu-item (click)="selectMails()">All</button>\n                        <button mat-menu-item (click)="deselectMails()">None</button>\n                        <button mat-menu-item (click)="selectMails(\'read\', true)">Read</button>\n                        <button mat-menu-item (click)="selectMails(\'read\', false)">Unread</button>\n                        <button mat-menu-item (click)="selectMails(\'starred\', true)">Starred</button>\n                        <button mat-menu-item (click)="selectMails(\'starred\', false)">Unstarred</button>\n                        <button mat-menu-item (click)="selectMails(\'important\', true)">Important</button>\n                        <button mat-menu-item (click)="selectMails(\'important\', false)">Unimportant</button>\n                    </mat-menu>\n\n                    <div class="toolbar-separator" *ngIf="hasSelectedMails"></div>\n\n                    <button mat-icon-button (click)="setFolderOnSelectedMails(4)" *ngIf="hasSelectedMails">\n                        <mat-icon class="secondary-text">delete</mat-icon>\n                    </button>\n\n                    <button mat-icon-button [matMenuTriggerFor]="folderMenu" *ngIf="hasSelectedMails">\n                        <mat-icon class="secondary-text">folder</mat-icon>\n                    </button>\n                    <mat-menu #folderMenu="matMenu">\n                        <button mat-menu-item *ngFor="let folder of folders"\n                                (click)="setFolderOnSelectedMails(folder.id)">{{folder.title}}\n                        </button>\n                    </mat-menu>\n\n                    <button mat-icon-button [matMenuTriggerFor]="labelMenu" *ngIf="hasSelectedMails">\n                        <mat-icon class="secondary-text">label</mat-icon>\n                    </button>\n                    <mat-menu #labelMenu="matMenu">\n                        <button mat-menu-item *ngFor="let label of labels"\n                                (click)="toggleLabelOnSelectedMails(label.id)">{{label.title}}\n                        </button>\n                    </mat-menu>\n                </div>\n\n                <div *ngIf="currentMail" fxHide.gt-xs>\n                    <button mat-icon-button (click)="deselectCurrentMail()">\n                        <mat-icon class="secondary-text">arrow_back</mat-icon>\n                    </button>\n                </div>\n            </div>\n            \x3c!-- / CONTENT TOOLBAR --\x3e\n\n            \x3c!-- CONTENT --\x3e\n            <div class="content" fxLayout="row">\n\n                <mail-list fusePerfectScrollbar fxFlex></mail-list>\n                <mail-details fusePerfectScrollbar fxFlex></mail-details>\n\n            </div>\n            \x3c!-- / CONTENT --\x3e\n\n        </div>\n        \x3c!-- / CONTENT CARD --\x3e\n\n    </div>\n    \x3c!-- / CENTER --\x3e\n\n</div>\n',encapsulation:i.rb.None,styles:["/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\nmail {\n  width: 100%;\n}\nmail .center .header .search-wrapper {\n  border-radius: 28px;\n  overflow: hidden;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\nmail .center .header .search-wrapper .sidebar-toggle {\n  margin: 0 0 0 6px;\n  width: 56px;\n  height: 56px;\n  border-radius: 0;\n  border-right: 1px solid;\n}\nmail .center .header .search-wrapper .search {\n  width: 100%;\n  height: 56px;\n  line-height: 56px;\n  padding: 0 18px;\n}\nmail .center .header .search-wrapper .search input {\n  height: 56px;\n  min-height: 56px;\n  max-height: 56px;\n  padding: 0 16px;\n  border: none;\n  outline: none;\n}\nmail .center .content-card .toolbar .toolbar-separator {\n  height: 32px;\n  width: 1px;\n  margin: 0 12px;\n}\n@media screen and (max-width: 599px) {\n  mail .center .content-card mail-list {\n    border-right: none;\n  }\n  mail .center .content-card mail-list,\nmail .center .content-card mail-details {\n    flex: 1 0 100%;\n  }\n  mail .center .content-card mail-details {\n    display: none !important;\n  }\n  mail .center .content-card.current-mail-selected .toolbar {\n    padding-left: 16px !important;\n  }\n  mail .center .content-card.current-mail-selected .toolbar .mail-selection {\n    display: none !important;\n  }\n  mail .center .content-card.current-mail-selected .content mail-list {\n    display: none !important;\n  }\n  mail .center .content-card.current-mail-selected .content mail-details {\n    display: flex !important;\n  }\n}"]})],k);var R=n("ofXK"),D=n("PVWW");let j=class{constructor(e,t,n){this._activatedRoute=e,this._mailService=t,this._location=n,this._unsubscribeAll=new A.a}ngOnInit(){this._mailService.onMailsChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{this.mails=e}),this._mailService.onCurrentMailChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{if(e)this.currentMail=e;else{this.currentMail=null;const e=this._activatedRoute.snapshot.params.labelHandle,t=this._activatedRoute.snapshot.params.filterHandle,n=this._activatedRoute.snapshot.params.folderHandle;e?this._location.go("apps/mail/label/"+e):t?this._location.go("apps/mail/filter/"+t):this._location.go("apps/mail/"+n)}})}ngOnDestroy(){this._unsubscribeAll.next(),this._unsubscribeAll.complete()}readMail(e){const t=this._activatedRoute.snapshot.params.labelHandle,n=this._activatedRoute.snapshot.params.filterHandle,a=this._activatedRoute.snapshot.params.folderHandle;t?this._location.go("apps/mail/label/"+t+"/"+e):n?this._location.go("apps/mail/filter/"+n+"/"+e):this._location.go("apps/mail/"+a+"/"+e),this._mailService.setCurrentMail(e)}};j.ctorParameters=()=>[{type:l.a},{type:M},{type:R.g}],j=Object(a.a)([Object(i.n)({selector:"mail-list",template:'<div *ngIf="mails.length === 0" fxLayout="column" fxLayoutAlign="center center" fxFlexFill>\n    <span class="no-messages-text hint-text">{{ \'MAIL.NO_MESSAGES\' | translate }}</span>\n</div>\n\n<div class="mail-list" [@animateStagger]="{value:\'50\'}">\n    <mail-list-item *ngFor="let mail of mails" [mail]="mail" (click)="readMail(mail.id)"\n                    [ngClass]="{\'current-mail\':mail?.id == currentMail?.id}"\n                    [@animate]="{value:\'*\',params:{y:\'100%\'}}">\n    </mail-list-item>\n</div>\n',encapsulation:i.rb.None,animations:D.a,styles:["mail-list {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 0;\n  border-right: 1px solid;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}\nmail-list .no-messages-text {\n  font-size: 24px;\n  font-weight: 300;\n}\nmail-list .mail-list {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}"]})],j);let P=class{constructor(e){this._mailService=e,this._unsubscribeAll=new A.a}ngOnInit(){this.mail=new S(this.mail),this._mailService.onSelectedMailsChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{if(this.selected=!1,e.length>0)for(const t of e)if(t.id===this.mail.id){this.selected=!0;break}}),this._mailService.onLabelsChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{this.labels=e})}ngOnDestroy(){this._unsubscribeAll.next(),this._unsubscribeAll.complete()}onSelectedChange(){this._mailService.toggleSelectedMail(this.mail.id)}toggleStar(e){e.stopPropagation(),this.mail.toggleStar(),this._mailService.updateMail(this.mail)}toggleImportant(e){e.stopPropagation(),this.mail.toggleImportant(),this._mailService.updateMail(this.mail)}};P.ctorParameters=()=>[{type:M}],P.propDecorators={mail:[{type:i.I}],selected:[{type:i.A,args:["class.selected"]}]},P=Object(a.a)([Object(i.n)({selector:"mail-list-item",template:'<div fxLayout="row" fxLayoutAlign="start center">\n\n    <mat-checkbox [(ngModel)]="selected" (ngModelChange)="onSelectedChange()"\n                  (click)="$event.stopPropagation();"></mat-checkbox>\n\n    <div class="info" fxFlex FlexLayout="column">\n\n        <div class="row-1" fxLayout="row" fxLayoutAlign="start center">\n\n            <div class="name" fxLayout="row" fxLayoutAlign="start center" fxFlex>\n                <img class="avatar" *ngIf="mail.from?.avatar" alt="{{mail.from?.name}}" src="{{mail.from?.avatar}}"/>\n                <div class="avatar accent" *ngIf="!mail.from?.avatar">{{mail.from?.name[0]}}</div>\n                <span class="text-truncate" *ngIf="mail?.from">{{mail.from?.name}}</span>\n                <mat-icon class="s-16 ml-8" *ngIf="mail.hasAttachments">attachment</mat-icon>\n            </div>\n\n            <div fxLayout="row" fxLayoutAlign="start center">\n\n                <div class="time">{{mail.time}}</div>\n\n            </div>\n\n        </div>\n\n        <div class="row-2" fxLayout="row" fxLayoutAlign="start center">\n\n            <div fxLayout="column" fxLayoutAlign="start start">\n\n                <div class="subject text-truncate">\n                    {{mail.subject}}\n                </div>\n\n                <div class="message text-truncate" *ngIf="mail?.message">\n                    {{mail.message | htmlToPlaintext | slice:0:180}}{{mail.message.length > 180 ? \'...\' : \'\'}}\n                </div>\n\n                <div class="labels" fxLayout="row wrap" fxHide fxShow.gt-sm>\n                    <div class="label" *ngFor="let labelId of mail.labels"\n                         fxLayout="row" fxLayoutAlign="start center">\n                        <div class="label-color"\n                             [ngStyle]="{\'background-color\': labels | getById:labelId:\'color\'}"></div>\n                        <div class="label-title">{{labels | getById:labelId:\'title\'}}</div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n',encapsulation:i.rb.None,styles:["/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\nmail-list-item {\n  flex-shrink: 0;\n  position: relative;\n  padding: 16px 24px;\n  border-bottom: 1px solid;\n  cursor: pointer;\n}\nmail-list-item.unread .info .name {\n  font-weight: 700;\n}\nmail-list-item.unread .info .row-2 .subject {\n  font-weight: 700;\n}\nmail-list-item .info {\n  overflow: hidden;\n  width: 0;\n  margin-left: 16px;\n  position: relative;\n}\nmail-list-item .info .row-1 {\n  margin-bottom: 8px;\n}\nmail-list-item .info .row-1 .name {\n  font-size: 15px;\n  font-weight: 600;\n}\nmail-list-item .info .row-1 .name .avatar {\n  min-width: 32px;\n  width: 32px;\n  height: 32px;\n  line-height: 32px;\n}\nmail-list-item .info .row-1 .actions {\n  margin-left: 4px;\n}\nmail-list-item .info .row-1 .actions .mat-icon-button {\n  width: 32px;\n  height: 32px;\n  line-height: 1;\n}\nmail-list-item .info .row-2 .subject,\nmail-list-item .info .row-2 .message {\n  width: 100%;\n}\nmail-list-item .info .row-2 .message {\n  position: relative;\n}\nmail-list-item .info .row-2 .labels {\n  margin-top: 8px;\n}\nmail-list-item .info .row-2 .labels .label {\n  font-size: 11px;\n  border-radius: 4px;\n  margin: 0 4px 0 0;\n  padding: 3px 8px;\n}\nmail-list-item .info .row-2 .labels .label .label-color {\n  width: 8px;\n  height: 8px;\n  margin-right: 8px;\n  border-radius: 50%;\n}"]})],P);let N=class{constructor(e){this._mailService=e,this.showDetails=!1,this._unsubscribeAll=new A.a}ngOnInit(){this._mailService.onCurrentMailChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{this.mail=e}),this._mailService.onLabelsChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{this.labels=e})}ngOnDestroy(){this._unsubscribeAll.next(),this._unsubscribeAll.complete()}toggleStar(e){e.stopPropagation(),this.mail.toggleStar(),this._mailService.updateMail(this.mail)}toggleImportant(e){e.stopPropagation(),this.mail.toggleImportant(),this._mailService.updateMail(this.mail)}};N.ctorParameters=()=>[{type:M}],N=Object(a.a)([Object(i.n)({selector:"mail-details",template:'<div *ngIf="!mail" fxLayout="column" fxLayoutAlign="center center" fxFlex>\n    <mat-icon class="s-128 mb-16 select-message-icon hint-text"\n              [@animate]="{value:\'*\',params:{delay:\'300ms\',scale:\'0.2\'}}">\n        email\n    </mat-icon>\n    <span class="select-message-text hint-text" [@animate]="{value:\'*\',params:{delay:\'400ms\'}}">\n        <span>{{ \'MAIL.SELECT_A_MESSAGE_TO_READ\' | translate }}</span>\n    </span>\n</div>\n\n<div *ngIf="mail">\n\n    <div class="mail-header" fxLayout="row" fxLayoutAlign="space-between center">\n\n        <div>\n            <div class="subject">{{mail.subject}}</div>\n\n            <div class="labels mt-8" fxLayout="row wrap">\n                <div class="label" *ngFor="let labelId of mail.labels"\n                     fxLayout="row" fxLayoutAlign="start center">\n                    <div class="label-color" [ngStyle]="{\'background-color\': labels | getById:labelId:\'color\'}"></div>\n                    <div class="label-title">{{labels | getById:labelId:\'title\'}}</div>\n                </div>\n            </div>\n\n        </div>\n\n        <div class="actions" fxLayout="row" fxLayoutAlign="start center">\n            <button mat-icon-button (click)="toggleStar($event)" aria-label="Toggle star">\n                <mat-icon class="amber-fg" *ngIf="mail.starred">star</mat-icon>\n                <mat-icon class="secondary-text" *ngIf="!mail.starred">star_border</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)="toggleImportant($event)" aria-label="Toggle important">\n                <mat-icon class="red-fg" *ngIf="mail.important">label</mat-icon>\n                <mat-icon class="secondary-text" *ngIf="!mail.important">label_outline</mat-icon>\n            </button>\n        </div>\n    </div>\n\n    <div class="mail-content">\n\n        <div class="info" fxLayout="row" fxLayoutAlign="space-between start">\n\n            <div fxFlex fxLayout="column" fxLayoutAlign="start start">\n\n                <div fxLayout="row" fxLayoutAlign="start start">\n\n                    <div>\n                        <img *ngIf="mail.from.avatar" alt="{{mail.from.name}}"\n                             src="{{mail.from.avatar}}" class="avatar"/>\n\n                        <div *ngIf="!mail.from.avatar" class="avatar" ms-random-class="vm.colors">\n                            {{mail.from.name[0]}}\n                        </div>\n                    </div>\n\n                    <div fxLayout="column" fxLayoutAlign="start start">\n\n                        <div class="name">\n                            {{mail.from.name}}\n                        </div>\n\n                        <div class="to" fxLayout="row" fxLayoutAlign="start center">\n                            <div class="to-text">to</div>\n                            <div>{{mail.to[0].name}}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <a class="toggle-details" (click)="showDetails = !showDetails">\n                    <span *ngIf="!showDetails">Show Details</span>\n                    <span *ngIf="showDetails">Hide Details</span>\n                </a>\n\n                <div *ngIf="showDetails" class="details" fxLayout="row" fxLayoutAlign="start start">\n\n                    <div fxLayout="column">\n                        <span class="title">From:</span>\n                        <span class="title">To:</span>\n                        <span class="title">Date:</span>\n                    </div>\n\n                    <div fxLayout="column">\n                        <span class="detail">{{mail.from.email}}</span>\n                        <span class="detail">{{mail.to[0].email}}</span>\n                        <span class="detail">{{mail.time}}</span>\n                    </div>\n                </div>\n            </div>\n\n            <button mat-icon-button [matMenuTriggerFor]="moreMenu" aria-label="More" (click)="$event.stopPropagation()">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n\n            <mat-menu #moreMenu="matMenu">\n                <button mat-menu-item aria-label="Reply">\n                    <mat-icon>reply</mat-icon>\n                    <span>Reply</span>\n                </button>\n\n                <button mat-menu-item aria-label="Forward">\n                    <mat-icon>forward</mat-icon>\n                    <span>Forward</span>\n                </button>\n\n                <button mat-menu-item aria-label="Print">\n                    <mat-icon>print</mat-icon>\n                    <span>Print</span>\n                </button>\n            </mat-menu>\n        </div>\n\n        <div [innerHTML]="mail.message"></div>\n\n    </div>\n\n    <div *ngIf="mail.attachments" class="mail-attachments">\n\n        <div class="title">\n            <span>Attachments</span>\n            ({{mail.attachments.length}})\n        </div>\n\n        <div class="attachment-list" fxLayout="row wrap">\n\n            <div class="attachment" fxLayout="column"\n                 *ngFor="let attachment of mail.attachments">\n\n                <img class="preview" src="{{attachment.preview}}">\n\n                <div fxLayout="column">\n                    <a href="#" onclick="event.preventDefault()">View</a>\n                    <a href="#" onclick="event.preventDefault()">Download</a>\n                    <div class="size">({{attachment.size}})</div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n',encapsulation:i.rb.None,animations:D.a,styles:["/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\nmail-details {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 24px;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}\nmail-details .select-message-text {\n  font-size: 24px;\n  font-weight: 300;\n}\nmail-details .mail-header {\n  padding-bottom: 16px;\n  border-bottom: 1px solid;\n}\nmail-details .mail-header .actions {\n  min-width: 88px;\n}\nmail-details .mail-header .subject {\n  font-size: 17px;\n  font-weight: 600;\n}\nmail-details .mail-header .label {\n  font-size: 11px;\n  border-radius: 4px;\n  margin: 4px 4px 4px 0;\n  padding: 3px 8px;\n}\nmail-details .mail-header .label .label-color {\n  width: 8px;\n  height: 8px;\n  margin-right: 8px;\n  border-radius: 50%;\n}\nmail-details .mail-content {\n  padding: 24px 0;\n}\nmail-details .mail-content .to .to-text {\n  margin-right: 4px;\n  text-transform: lowercase;\n}\nmail-details .mail-content .info {\n  padding-bottom: 16px;\n}\nmail-details .mail-content .info .avatar {\n  margin-right: 16px;\n}\nmail-details .mail-content .info .name {\n  margin-right: 8px;\n  font-weight: 600;\n}\nmail-details .mail-content .info .toggle-details {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  text-decoration: underline;\n  padding-top: 16px;\n  cursor: pointer;\n  font-weight: 600;\n}\nmail-details .mail-content .info .details {\n  padding-top: 8px;\n}\nmail-details .mail-content .info .details .title {\n  font-weight: 600;\n  margin-right: 6px;\n}\nmail-details .mail-attachments {\n  padding: 24px 0;\n  border-top: 1px solid;\n}\nmail-details .mail-attachments .title {\n  margin-bottom: 16px;\n  font-weight: 600;\n}\nmail-details .mail-attachments .attachment .preview {\n  width: 100px;\n  margin: 0 16px 8px 0;\n  border-radius: 4px;\n}\nmail-details .mail-attachments .attachment .link {\n  margin-bottom: 2px;\n}\nmail-details .mail-attachments .attachment .size {\n  font-size: 11px;\n}"]})],N);let H=class{constructor(e,t){this.matDialogRef=e,this._data=t,this.composeForm=this.createComposeForm(),this.showExtraToFields=!1}createComposeForm(){return new L.e({from:new L.d({value:"johndoe@creapond.com",disabled:!0}),to:new L.d(""),cc:new L.d(""),bcc:new L.d(""),subject:new L.d(""),message:new L.d("")})}toggleExtraToFields(){this.showExtraToFields=!this.showExtraToFields}};H.ctorParameters=()=>[{type:c.d},{type:void 0,decorators:[{type:i.D,args:[c.a]}]}],H=Object(a.a)([Object(i.n)({selector:"mail-compose",template:'<div class="dialog-content-wrapper">\n    <mat-toolbar class="mat-accent m-0">\n        <mat-toolbar-row fxFlex fxLayout="row" fxLayoutAlign="space-between center">\n            <span class="title dialog-title">New Message</span>\n            <button mat-icon-button (click)="matDialogRef.close()" aria-label="Close dialog">\n                <mat-icon>close</mat-icon>\n            </button>\n        </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div mat-dialog-content class="p-24 m-0" fusePerfectScrollbar>\n\n        <form name="composeForm" [formGroup]="composeForm" class="compose-form" fxLayout="column" fxFlex>\n\n            <mat-form-field appearance="outline">\n                <mat-label>From</mat-label>\n                <input matInput name="from"\n                       formControlName="from"\n                       type="email">\n            </mat-form-field>\n\n            <div class="show-hide-extra-fields" (click)="toggleExtraToFields()">\n                <span [fxShow]="!showExtraToFields">Show CC & BCC</span>\n                <span [fxShow]="showExtraToFields">Hide CC & BCC</span>\n            </div>\n\n            <mat-form-field appearance="outline">\n                <mat-label>To</mat-label>\n                <input matInput name="to"\n                       formControlName="to"\n                       type="email" required>\n            </mat-form-field>\n\n            <mat-form-field appearance="outline" [fxShow]="showExtraToFields">\n                <mat-label>Cc</mat-label>\n                <input matInput\n                       name="cc"\n                       formControlName="cc"\n                       type="email">\n            </mat-form-field>\n\n            <mat-form-field appearance="outline" [fxShow]="showExtraToFields">\n                <mat-label>Bcc</mat-label>\n                <input matInput\n                       name="bcc"\n                       formControlName="bcc"\n                       type="email">\n            </mat-form-field>\n\n            <mat-form-field appearance="outline">\n                <mat-label>Subject</mat-label>\n                <input matInput name="subject"\n                       formControlName="subject">\n            </mat-form-field>\n\n            <mat-form-field appearance="outline">\n                <mat-label>Message</mat-label>\n                <textarea matInput name="message"\n                          formControlName="message"\n                          rows="6">\n                </textarea>\n            </mat-form-field>\n\n            <div class="attachment-list">\n\n                <div class="attachment" fxLayout="row" fxLayoutAlign="space-between center">\n                    <div>\n                        <span class="filename">attachment-2.doc</span>\n                        <span class="size ml-4">(12 Kb)</span>\n                    </div>\n\n                    <button mat-icon-button aria-label="Delete attachment">\n                        <mat-icon class="s-16">close</mat-icon>\n                    </button>\n                </div>\n\n                <div class="attachment" fxLayout="row" fxLayoutAlign="space-between center">\n                    <div>\n                        <span class="filename">attachment-1.jpg</span>\n                        <span class="size ml-4">(350 Kb)</span>\n                    </div>\n\n                    <button mat-icon-button aria-label="Delete attachment">\n                        <mat-icon class="s-16">close</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <div mat-dialog-actions class="m-0 p-16" fxLayout="row" fxLayoutAlign="space-between center">\n        <div>\n            <button mat-raised-button\n                    color="accent"\n                    (click)="matDialogRef.close([\'send\',composeForm])"\n                    class="save-button"\n                    [disabled]="composeForm.invalid"\n                    aria-label="SAVE">\n                SEND\n            </button>\n\n            <button mat-icon-button matTooltip="Attach a file">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n        </div>\n\n        <button mat-icon-button (click)="matDialogRef.close([\'delete\',composeForm])"\n                aria-label="Delete"\n                matTooltip="Delete">\n            <mat-icon>delete</mat-icon>\n        </button>\n    </div>\n</div>\n',encapsulation:i.rb.None,styles:["/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n@media screen and (max-width: 599px) {\n  .mail-compose-dialog {\n    width: 100%;\n  }\n}\n@media screen and (min-width: 600px) {\n  .mail-compose-dialog {\n    width: 640px;\n  }\n}\n.mail-compose-dialog .mat-dialog-container {\n  padding: 0;\n}\n.mail-compose-dialog .mat-dialog-container .compose-form .mat-form-field {\n  width: 100%;\n}\n.mail-compose-dialog .mat-dialog-container .compose-form .show-hide-extra-fields {\n  text-align: right;\n  cursor: pointer;\n  font-size: 12px;\n}\n.mail-compose-dialog .mat-dialog-container .compose-form .attachment-list {\n  font-size: 13px;\n}\n.mail-compose-dialog .mat-dialog-container .compose-form .attachment-list .attachment {\n  border: 1px solid;\n  border-radius: 20px;\n  padding-left: 16px;\n  margin-top: 8px;\n}\n.mail-compose-dialog .mat-dialog-container .compose-form .attachment-list .attachment .filename {\n  font-weight: 600;\n}\n.mail-compose-dialog .mat-dialog-container .compose-form .attachment-list .attachment:last-child {\n  margin-bottom: 0;\n}\n.mail-compose-dialog .dialog-content-wrapper {\n  max-height: 85vh;\n  display: flex;\n  flex-direction: column;\n}"]})],H);let B=class{constructor(e,t){this._mailService=e,this._matDialog=t,this.accounts={creapond:"johndoe@creapond.com",withinpixels:"johndoe@withinpixels.com"},this.selectedAccount="creapond",this._unsubscribeAll=new A.a}ngOnInit(){this._mailService.onFoldersChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{this.folders=e}),this._mailService.onFiltersChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{this.filters=e}),this._mailService.onLabelsChanged.pipe(Object(C.a)(this._unsubscribeAll)).subscribe(e=>{this.labels=e})}ngOnDestroy(){this._unsubscribeAll.next(),this._unsubscribeAll.complete()}composeDialog(){this.dialogRef=this._matDialog.open(H,{panelClass:"mail-compose-dialog"}),this.dialogRef.afterClosed().subscribe(e=>{if(!e)return;const t=e[0],n=e[1];switch(t){case"send":console.log("new Mail",n.getRawValue());break;case"delete":console.log("delete Mail")}})}};B.ctorParameters=()=>[{type:M},{type:c.b}],B=Object(a.a)([Object(i.n)({selector:"mail-main-sidebar",template:'\x3c!-- SIDEBAR HEADER --\x3e\n<div fxLayout="column" fxLayoutAlign="space-between start"\n     class="header accent p-24 pb-4">\n\n    <div class="logo" fxFlex fxLayout="row" fxLayoutAlign="start center">\n        <mat-icon class="logo-icon s-32" [@animate]="{value:\'*\',params:{delay:\'50ms\',scale:\'0.2\'}}">mail\n        </mat-icon>\n        <span class="logo-text" [@animate]="{value:\'*\',params:{delay:\'100ms\',x:\'-25px\'}}">Mailbox</span>\n    </div>\n\n    <div class="account" fxLayout="column" [@animate]="{value:\'*\',params:{delay:\'300ms\'}}">\n        <div class="title">John Doe</div>\n        <mat-form-field floatLabel="never">\n            <mat-select class="account-selection" placeholder="Mail Selection"\n                        [ngModel]="selectedAccount">\n                <mat-option *ngFor="let account of (accounts | keys)" [value]="account.key">\n                    {{account.value}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n</div>\n\x3c!-- / SIDEBAR HEADER --\x3e\n\n\x3c!-- SIDEBAR CONTENT --\x3e\n<div class="content" fusePerfectScrollbar [@animate]="{value:\'*\',params:{y:\'50px\'}}">\n\n    <div class="px-24 pt-32 pb-12">\n        <button mat-raised-button\n                class="mat-accent compose-dialog-button w-100-p"\n                (click)="composeDialog()"\n                aria-label="Compose">\n            {{ \'MAIL.COMPOSE\' | translate }}\n        </button>\n    </div>\n\n    <div class="nav material2">\n\n        <div class="nav-subheader">{{ \'MAIL.FOLDERS\' | translate }}</div>\n\n        <div class="nav-item" *ngFor="let folder of folders">\n            <a class="nav-link" matRipple [routerLink]="\'/apps/mail/\' + folder.handle"\n               [routerLinkActive]="[\'active\', \'accent\']">\n                <mat-icon class="nav-link-icon" *ngIf="folder.icon">{{folder.icon}}</mat-icon>\n                <span>{{folder.title}}</span>\n            </a>\n        </div>\n\n        <div class="nav-subheader">{{ \'MAIL.FILTERS\' | translate }}</div>\n\n        <div class="nav-item" *ngFor="let filter of filters">\n            <a class="nav-link" matRipple [routerLink]="\'/apps/mail/filter/\' + filter.handle"\n               [routerLinkActive]="[\'active\', \'accent\']">\n                <mat-icon class="nav-link-icon" [ngClass]="filter.color" *ngIf="filter.icon">{{filter.icon}}</mat-icon>\n                <span>{{filter.title}}</span>\n            </a>\n        </div>\n\n        <div class="nav-subheader">{{ \'MAIL.LABELS\' | translate }}</div>\n\n        <div class="nav-item" *ngFor="let label of labels">\n            <a class="nav-link" matRipple [routerLink]="\'/apps/mail/label/\' + label.handle"\n               [routerLinkActive]="[\'active\', \'accent\']">\n                <mat-icon class="nav-link-icon" [ngStyle]="{\'color\':label.color}">label</mat-icon>\n                <span>{{label.title}}</span>\n            </a>\n        </div>\n\n    </div>\n\n</div>\n\x3c!-- / SIDEBAR CONTENT --\x3e\n',encapsulation:i.rb.None,animations:D.a,styles:["mail-main-sidebar {\n  display: flex;\n  flex: 1 0 auto;\n  flex-direction: column;\n  height: 100%;\n}\nmail-main-sidebar .header .logo .logo-icon {\n  margin: 0 16px 0 0;\n}\nmail-main-sidebar .header .logo .logo-text {\n  font-size: 24px;\n  line-height: 24px;\n}\nmail-main-sidebar .header .account {\n  width: 100%;\n}"]})],B);const z=[{path:"label/:labelHandle",component:k,resolve:{mail:M}},{path:"label/:labelHandle/:mailId",component:k,resolve:{mail:M}},{path:"filter/:filterHandle",component:k,resolve:{mail:M}},{path:"filter/:filterHandle/:mailId",component:k,resolve:{mail:M}},{path:":folderHandle",component:k,resolve:{mail:M}},{path:":folderHandle/:mailId",component:k,resolve:{mail:M}},{path:"**",redirectTo:"inbox"}];let G=class{};G=Object(a.a)([Object(i.N)({declarations:[k,j,P,N,B,H],imports:[l.h.forChild(z),s.b,o.a,c.c,m.d,d.b,h.b,p.a,r.p,u.a,b.a,g.a,f.a,x.h],providers:[M],entryComponents:[H]})],G)}}]);
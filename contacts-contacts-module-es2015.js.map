{"version":3,"sources":["./src/app/main/apps/contacts/selected-bar/selected-bar.component.ts","./src/app/main/apps/contacts/selected-bar/selected-bar.component.html","./src/app/main/apps/contacts/contact.model.ts","./src/app/main/apps/contacts/contacts.module.ts","./src/app/main/apps/contacts/contacts.service.ts","./src/app/main/apps/contacts/sidebars/main/main.component.ts","./src/app/main/apps/contacts/sidebars/main/main.component.html","./src/app/main/apps/contacts/contacts.component.ts","./src/app/main/apps/contacts/contacts.component.html","./src/app/main/apps/contacts/contact-list/contact-list.component.ts","./src/app/main/apps/contacts/contact-list/contact-list.component.html","./src/app/main/apps/contacts/contact-form/contact-form.component.ts","./src/app/main/apps/contacts/contact-form/contact-form.component.html"],"names":[],"mappings":"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","file":"contacts-contacts-module-es2015.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\n\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\n\n@Component({\n    selector   : 'selected-bar',\n    templateUrl: './selected-bar.component.html',\n    styleUrls  : ['./selected-bar.component.scss']\n})\nexport class ContactsSelectedBarComponent implements OnInit, OnDestroy\n{\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n    hasSelectedContacts: boolean;\n    isIndeterminate: boolean;\n    selectedContacts: string[];\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ContactsService} _contactsService\n     * @param {MatDialog} _matDialog\n     */\n    constructor(\n        private _contactsService: ContactsService,\n        public _matDialog: MatDialog\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._contactsService.onSelectedContactsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedContacts => {\n                this.selectedContacts = selectedContacts;\n                setTimeout(() => {\n                    this.hasSelectedContacts = selectedContacts.length > 0;\n                    this.isIndeterminate = (selectedContacts.length !== this._contactsService.contacts.length && selectedContacts.length > 0);\n                }, 0);\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Select all\n     */\n    selectAll(): void\n    {\n        this._contactsService.selectContacts();\n    }\n\n    /**\n     * Deselect all\n     */\n    deselectAll(): void\n    {\n        this._contactsService.deselectContacts();\n    }\n\n    /**\n     * Delete selected contacts\n     */\n    deleteSelectedContacts(): void\n    {\n        this.confirmDialogRef = this._matDialog.open(FuseConfirmDialogComponent, {\n            disableClose: false\n        });\n\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete all selected contacts?';\n\n        this.confirmDialogRef.afterClosed()\n            .subscribe(result => {\n                if ( result )\n                {\n                    this._contactsService.deleteSelectedContacts();\n                }\n                this.confirmDialogRef = null;\n            });\n    }\n}\n","<div fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"p-24\">\n\n    <div class=\"close-button-wrapper\" fxFlex=\"0 1 auto\" fxFlex.gt-sm=\"220px\" (click)=\"deselectAll()\">\n        <button class=\"p-8\" mat-button fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            <mat-icon class=\"mr-8\">arrow_back</mat-icon>\n            <span class=\"text-uppercase\">Back</span>\n        </button>\n    </div>\n\n    <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutAlign.gt-sm=\"space-between center\">\n\n        <div>\n            <span class=\"selected-contacts-count\">\n                <span class=\"mr-4\">{{selectedContacts.length}}</span>\n                <span>selected</span>\n            </span>\n\n            <button mat-icon-button [matMenuTriggerFor]=\"selectMenu\">\n                <mat-icon>arrow_drop_down</mat-icon>\n            </button>\n            <mat-menu #selectMenu=\"matMenu\">\n                <button mat-menu-item (click)=\"selectAll()\">Select all</button>\n                <button mat-menu-item (click)=\"deselectAll()\">Deselect all</button>\n            </mat-menu>\n\n        </div>\n\n        <div class=\"multi-select-actions\">\n            <button mat-icon-button (click)=\"deleteSelectedContacts()\" aria-label=\"delete selected\">\n                <mat-icon>delete</mat-icon>\n            </button>\n        </div>\n\n    </div>\n\n</div>\n","import { FuseUtils } from '@fuse/utils';\n\nexport class Contact\n{\n    id: string;\n    name: string;\n    lastName: string;\n    avatar: string;\n    nickname: string;\n    company: string;\n    jobTitle: string;\n    email: string;\n    phone: string;\n    address: string;\n    birthday: string;\n    notes: string;\n\n    /**\n     * Constructor\n     *\n     * @param contact\n     */\n    constructor(contact)\n    {\n        {\n            this.id = contact.id || FuseUtils.generateGUID();\n            this.name = contact.name || '';\n            this.lastName = contact.lastName || '';\n            this.avatar = contact.avatar || 'assets/images/avatars/profile.jpg';\n            this.nickname = contact.nickname || '';\n            this.company = contact.company || '';\n            this.jobTitle = contact.jobTitle || '';\n            this.email = contact.email || '';\n            this.phone = contact.phone || '';\n            this.address = contact.address || '';\n            this.birthday = contact.birthday || '';\n            this.notes = contact.notes || '';\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseConfirmDialogModule, FuseSidebarModule } from '@fuse/components';\n\nimport { ContactsComponent } from 'app/main/apps/contacts/contacts.component';\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\nimport { ContactsContactListComponent } from 'app/main/apps/contacts/contact-list/contact-list.component';\nimport { ContactsSelectedBarComponent } from 'app/main/apps/contacts/selected-bar/selected-bar.component';\nimport { ContactsMainSidebarComponent } from 'app/main/apps/contacts/sidebars/main/main.component';\nimport { ContactsContactFormDialogComponent } from 'app/main/apps/contacts/contact-form/contact-form.component';\n\nconst routes: Routes = [\n    {\n        path     : '**',\n        component: ContactsComponent,\n        resolve  : {\n            contacts: ContactsService\n        }\n    }\n];\n\n@NgModule({\n    declarations   : [\n        ContactsComponent,\n        ContactsContactListComponent,\n        ContactsSelectedBarComponent,\n        ContactsMainSidebarComponent,\n        ContactsContactFormDialogComponent\n    ],\n    imports        : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatMenuModule,\n        MatRippleModule,\n        MatTableModule,\n        MatToolbarModule,\n\n        FuseSharedModule,\n        FuseConfirmDialogModule,\n        FuseSidebarModule\n    ],\n    providers      : [\n        ContactsService\n    ],\n    entryComponents: [\n        ContactsContactFormDialogComponent\n    ]\n})\nexport class ContactsModule\n{\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { FuseUtils } from '@fuse/utils';\n\nimport { Contact } from 'app/main/apps/contacts/contact.model';\n\n@Injectable()\nexport class ContactsService implements Resolve<any>\n{\n    onContactsChanged: BehaviorSubject<any>;\n    onSelectedContactsChanged: BehaviorSubject<any>;\n    onUserDataChanged: BehaviorSubject<any>;\n    onSearchTextChanged: Subject<any>;\n    onFilterChanged: Subject<any>;\n\n    contacts: Contact[];\n    user: any;\n    selectedContacts: string[] = [];\n\n    searchText: string;\n    filterBy: string;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpClient\n    )\n    {\n        // Set the defaults\n        this.onContactsChanged = new BehaviorSubject([]);\n        this.onSelectedContactsChanged = new BehaviorSubject([]);\n        this.onUserDataChanged = new BehaviorSubject([]);\n        this.onSearchTextChanged = new Subject();\n        this.onFilterChanged = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        return new Promise((resolve, reject) => {\n\n            Promise.all([\n                this.getContacts(),\n                this.getUserData()\n            ]).then(\n                ([files]) => {\n\n                    this.onSearchTextChanged.subscribe(searchText => {\n                        this.searchText = searchText;\n                        this.getContacts();\n                    });\n\n                    this.onFilterChanged.subscribe(filter => {\n                        this.filterBy = filter;\n                        this.getContacts();\n                    });\n\n                    resolve();\n\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get contacts\n     *\n     * @returns {Promise<any>}\n     */\n    getContacts(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n                this._httpClient.get('api/contacts-contacts')\n                    .subscribe((response: any) => {\n\n                        this.contacts = response;\n\n                        if ( this.filterBy === 'starred' )\n                        {\n                            this.contacts = this.contacts.filter(_contact => {\n                                return this.user.starred.includes(_contact.id);\n                            });\n                        }\n\n                        if ( this.filterBy === 'frequent' )\n                        {\n                            this.contacts = this.contacts.filter(_contact => {\n                                return this.user.frequentContacts.includes(_contact.id);\n                            });\n                        }\n\n                        if ( this.searchText && this.searchText !== '' )\n                        {\n                            this.contacts = FuseUtils.filterArrayByString(this.contacts, this.searchText);\n                        }\n\n                        this.contacts = this.contacts.map(contact => {\n                            return new Contact(contact);\n                        });\n\n                        this.onContactsChanged.next(this.contacts);\n                        resolve(this.contacts);\n                    }, reject);\n            }\n        );\n    }\n\n    /**\n     * Get user data\n     *\n     * @returns {Promise<any>}\n     */\n    getUserData(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n                this._httpClient.get('api/contacts-user/5725a6802d10e277a0f35724')\n                    .subscribe((response: any) => {\n                        this.user = response;\n                        this.onUserDataChanged.next(this.user);\n                        resolve(this.user);\n                    }, reject);\n            }\n        );\n    }\n\n    /**\n     * Toggle selected contact by id\n     *\n     * @param id\n     */\n    toggleSelectedContact(id): void\n    {\n        // First, check if we already have that contact as selected...\n        if ( this.selectedContacts.length > 0 )\n        {\n            const index = this.selectedContacts.indexOf(id);\n\n            if ( index !== -1 )\n            {\n                this.selectedContacts.splice(index, 1);\n\n                // Trigger the next event\n                this.onSelectedContactsChanged.next(this.selectedContacts);\n\n                // Return\n                return;\n            }\n        }\n\n        // If we don't have it, push as selected\n        this.selectedContacts.push(id);\n\n        // Trigger the next event\n        this.onSelectedContactsChanged.next(this.selectedContacts);\n    }\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll(): void\n    {\n        if ( this.selectedContacts.length > 0 )\n        {\n            this.deselectContacts();\n        }\n        else\n        {\n            this.selectContacts();\n        }\n    }\n\n    /**\n     * Select contacts\n     *\n     * @param filterParameter\n     * @param filterValue\n     */\n    selectContacts(filterParameter?, filterValue?): void\n    {\n        this.selectedContacts = [];\n\n        // If there is no filter, select all contacts\n        if ( filterParameter === undefined || filterValue === undefined )\n        {\n            this.selectedContacts = [];\n            this.contacts.map(contact => {\n                this.selectedContacts.push(contact.id);\n            });\n        }\n\n        // Trigger the next event\n        this.onSelectedContactsChanged.next(this.selectedContacts);\n    }\n\n    /**\n     * Update contact\n     *\n     * @param contact\n     * @returns {Promise<any>}\n     */\n    updateContact(contact): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.post('api/contacts-contacts/' + contact.id, {...contact})\n                .subscribe(response => {\n                    this.getContacts();\n                    resolve(response);\n                });\n        });\n    }\n\n    /**\n     * Update user data\n     *\n     * @param userData\n     * @returns {Promise<any>}\n     */\n    updateUserData(userData): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.post('api/contacts-user/' + this.user.id, {...userData})\n                .subscribe(response => {\n                    this.getUserData();\n                    this.getContacts();\n                    resolve(response);\n                });\n        });\n    }\n\n    /**\n     * Deselect contacts\n     */\n    deselectContacts(): void\n    {\n        this.selectedContacts = [];\n\n        // Trigger the next event\n        this.onSelectedContactsChanged.next(this.selectedContacts);\n    }\n\n    /**\n     * Delete contact\n     *\n     * @param contact\n     */\n    deleteContact(contact): void\n    {\n        const contactIndex = this.contacts.indexOf(contact);\n        this.contacts.splice(contactIndex, 1);\n        this.onContactsChanged.next(this.contacts);\n    }\n\n    /**\n     * Delete selected contacts\n     */\n    deleteSelectedContacts(): void\n    {\n        for ( const contactId of this.selectedContacts )\n        {\n            const contact = this.contacts.find(_contact => {\n                return _contact.id === contactId;\n            });\n            const contactIndex = this.contacts.indexOf(contact);\n            this.contacts.splice(contactIndex, 1);\n        }\n        this.onContactsChanged.next(this.contacts);\n        this.deselectContacts();\n    }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\n\n@Component({\n    selector   : 'contacts-main-sidebar',\n    templateUrl: './main.component.html',\n    styleUrls  : ['./main.component.scss']\n})\nexport class ContactsMainSidebarComponent implements OnInit, OnDestroy\n{\n    user: any;\n    filterBy: string;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ContactsService} _contactsService\n     */\n    constructor(\n        private _contactsService: ContactsService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this.filterBy = this._contactsService.filterBy || 'all';\n\n        this._contactsService.onUserDataChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(user => {\n                this.user = user;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Change the filter\n     *\n     * @param filter\n     */\n    changeFilter(filter): void\n    {\n        this.filterBy = filter;\n        this._contactsService.onFilterChanged.next(this.filterBy);\n    }\n}\n","<div class=\"sidebar-content\">\n\n    <div class=\"card\">\n\n        <!-- SIDEBAR HEADER -->\n        <div class=\"header p-24\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <!-- USER -->\n            <img [src]=\"user.avatar\" class=\"avatar mr-16\" [alt]=\"user.name\"/>\n            <span class=\"h5\">{{user.name}}</span>\n            <!-- / USER -->\n\n        </div>\n        <!-- / SIDEBAR HEADER -->\n\n        <!-- SIDEBAR CONTENT -->\n        <div class=\"content py-16\" fusePerfectScrollbar>\n\n            <div class=\"nav material2\">\n\n                <div class=\"nav-item\" aria-label=\"inbox\">\n                    <a class=\"nav-link\" matRipple (click)=\"changeFilter('all')\"\n                       [ngClass]=\"{'active accent':filterBy ==='all'}\">\n                        <span class=\"title\">All Contacts</span>\n                    </a>\n                </div>\n\n                <div class=\"nav-item\" aria-label=\"frequently contacted\" (click)=\"changeFilter('frequent')\">\n                    <a class=\"nav-link\" matRipple [ngClass]=\"{'active accent':filterBy ==='frequent'}\">\n                        <div class=\"title\">Freequently contacted</div>\n                    </a>\n                </div>\n\n                <div class=\"nav-item\" aria-label=\"starred\" (click)=\"changeFilter('starred')\">\n                    <a class=\"nav-link\" matRipple [ngClass]=\"{'active accent':filterBy ==='starred'}\">\n                        <div class=\"title\">Starred Contacts</div>\n                    </a>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n<!-- / SIDEBAR CONTENT -->\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\n\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\nimport { ContactsContactFormDialogComponent } from 'app/main/apps/contacts/contact-form/contact-form.component';\n\n@Component({\n    selector     : 'contacts',\n    templateUrl  : './contacts.component.html',\n    styleUrls    : ['./contacts.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ContactsComponent implements OnInit, OnDestroy\n{\n    dialogRef: any;\n    hasSelectedContacts: boolean;\n    searchInput: FormControl;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ContactsService} _contactsService\n     * @param {FuseSidebarService} _fuseSidebarService\n     * @param {MatDialog} _matDialog\n     */\n    constructor(\n        private _contactsService: ContactsService,\n        private _fuseSidebarService: FuseSidebarService,\n        private _matDialog: MatDialog\n    )\n    {\n        // Set the defaults\n        this.searchInput = new FormControl('');\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._contactsService.onSelectedContactsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedContacts => {\n                this.hasSelectedContacts = selectedContacts.length > 0;\n            });\n\n        this.searchInput.valueChanges\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                debounceTime(300),\n                distinctUntilChanged()\n            )\n            .subscribe(searchText => {\n                this._contactsService.onSearchTextChanged.next(searchText);\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Reset the search\n        this._contactsService.onSearchTextChanged.next('');\n\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * New contact\n     */\n    newContact(): void\n    {\n        this.dialogRef = this._matDialog.open(ContactsContactFormDialogComponent, {\n            panelClass: 'contact-form-dialog',\n            data      : {\n                action: 'new'\n            }\n        });\n\n        this.dialogRef.afterClosed()\n            .subscribe((response: FormGroup) => {\n                if ( !response )\n                {\n                    return;\n                }\n\n                this._contactsService.updateContact(response.getRawValue());\n            });\n    }\n\n    /**\n     * Toggle the sidebar\n     *\n     * @param name\n     */\n    toggleSidebar(name): void\n    {\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\n    }\n}\n","<div id=\"contacts\" class=\"page-layout simple left-sidebar inner-sidebar inner-scroll\">\n\n    <!-- HEADER -->\n    <div class=\"header accent p-16 p-sm-24\" fxLayout=\"column\" fxLayoutAlign=\"start\"\n         fxLayout.gt-xs=\"row\" fxLayoutAlign.gt-xs=\"space-between center\">\n\n        <!-- APP TITLE -->\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <button mat-icon-button class=\"sidebar-toggle mr-12\" fxHide.gt-sm\n                    (click)=\"toggleSidebar('contacts-main-sidebar')\">\n                <mat-icon>menu</mat-icon>\n            </button>\n\n            <div class=\"logo\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <mat-icon class=\"logo-icon mr-16\"\n                          [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">account_box\n                </mat-icon>\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                    Contacts\n                </span>\n            </div>\n\n        </div>\n        <!-- / APP TITLE -->\n\n        <!-- SEARCH -->\n        <div class=\"ml-sm-32\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFlex>\n\n            <div class=\"search-wrapper mt-16 mt-sm-0\">\n\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon>search</mat-icon>\n                    <input [formControl]=\"searchInput\" placeholder=\"Search for a contact\">\n                </div>\n\n            </div>\n\n        </div>\n        <!-- / SEARCH -->\n\n    </div>\n    <!-- / HEADER -->\n\n    <!-- SELECTED BAR -->\n    <selected-bar class=\"accent-600\" *ngIf=\"hasSelectedContacts\" [@slideInTop]></selected-bar>\n    <!-- / SELECTED BAR -->\n\n    <!-- CONTENT -->\n    <div class=\"content\">\n\n        <!-- SIDEBAR -->\n        <fuse-sidebar class=\"sidebar\" name=\"contacts-main-sidebar\" position=\"left\" lockedOpen=\"gt-sm\">\n\n            <!-- SIDEBAR CONTENT -->\n            <div class=\"content\" fusePerfectScrollbar>\n                <contacts-main-sidebar [@animate]=\"{value:'*'}\"></contacts-main-sidebar>\n            </div>\n            <!-- / SIDEBAR CONTENT -->\n\n        </fuse-sidebar>\n        <!-- / SIDEBAR -->\n\n        <!-- CENTER -->\n        <div class=\"center p-24 pb-56 pr-sm-92\" fusePerfectScrollbar>\n\n            <!-- CONTENT -->\n            <div class=\"content\">\n                <contacts-contact-list></contacts-contact-list>\n            </div>\n            <!-- / CONTENT -->\n\n        </div>\n        <!-- / CENTER -->\n\n    </div>\n    <!-- / CONTENT-->\n\n</div>\n\n<!-- ADD CONTACT BUTTON -->\n<button mat-fab class=\"accent\" id=\"add-contact-button\" (click)=\"newContact()\" aria-label=\"add contact\"\n        [@animate]=\"{value:'*', params:{delay:'300ms',scale:'.2'}}\">\n    <mat-icon>person_add</mat-icon>\n</button>\n<!-- / ADD CONTACT BUTTON -->\n","import { Component, OnDestroy, OnInit, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\n\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\nimport { ContactsContactFormDialogComponent } from 'app/main/apps/contacts/contact-form/contact-form.component';\n\n@Component({\n    selector     : 'contacts-contact-list',\n    templateUrl  : './contact-list.component.html',\n    styleUrls    : ['./contact-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ContactsContactListComponent implements OnInit, OnDestroy\n{\n    @ViewChild('dialogContent')\n    dialogContent: TemplateRef<any>;\n\n    contacts: any;\n    user: any;\n    dataSource: FilesDataSource | null;\n    displayedColumns = ['checkbox', 'avatar', 'name', 'email', 'phone', 'jobTitle', 'buttons'];\n    selectedContacts: any[];\n    checkboxes: {};\n    dialogRef: any;\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ContactsService} _contactsService\n     * @param {MatDialog} _matDialog\n     */\n    constructor(\n        private _contactsService: ContactsService,\n        public _matDialog: MatDialog\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this.dataSource = new FilesDataSource(this._contactsService);\n\n        this._contactsService.onContactsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(contacts => {\n                this.contacts = contacts;\n\n                this.checkboxes = {};\n                contacts.map(contact => {\n                    this.checkboxes[contact.id] = false;\n                });\n            });\n\n        this._contactsService.onSelectedContactsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedContacts => {\n                for ( const id in this.checkboxes )\n                {\n                    if ( !this.checkboxes.hasOwnProperty(id) )\n                    {\n                        continue;\n                    }\n\n                    this.checkboxes[id] = selectedContacts.includes(id);\n                }\n                this.selectedContacts = selectedContacts;\n            });\n\n        this._contactsService.onUserDataChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(user => {\n                this.user = user;\n            });\n\n        this._contactsService.onFilterChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(() => {\n                this._contactsService.deselectContacts();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Edit contact\n     *\n     * @param contact\n     */\n    editContact(contact): void\n    {\n        this.dialogRef = this._matDialog.open(ContactsContactFormDialogComponent, {\n            panelClass: 'contact-form-dialog',\n            data      : {\n                contact: contact,\n                action : 'edit'\n            }\n        });\n\n        this.dialogRef.afterClosed()\n            .subscribe(response => {\n                if ( !response )\n                {\n                    return;\n                }\n                const actionType: string = response[0];\n                const formData: FormGroup = response[1];\n                switch ( actionType )\n                {\n                    /**\n                     * Save\n                     */\n                    case 'save':\n\n                        this._contactsService.updateContact(formData.getRawValue());\n\n                        break;\n                    /**\n                     * Delete\n                     */\n                    case 'delete':\n\n                        this.deleteContact(contact);\n\n                        break;\n                }\n            });\n    }\n\n    /**\n     * Delete Contact\n     */\n    deleteContact(contact): void\n    {\n        this.confirmDialogRef = this._matDialog.open(FuseConfirmDialogComponent, {\n            disableClose: false\n        });\n\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\n\n        this.confirmDialogRef.afterClosed().subscribe(result => {\n            if ( result )\n            {\n                this._contactsService.deleteContact(contact);\n            }\n            this.confirmDialogRef = null;\n        });\n\n    }\n\n    /**\n     * On selected change\n     *\n     * @param contactId\n     */\n    onSelectedChange(contactId): void\n    {\n        this._contactsService.toggleSelectedContact(contactId);\n    }\n\n    /**\n     * Toggle star\n     *\n     * @param contactId\n     */\n    toggleStar(contactId): void\n    {\n        if ( this.user.starred.includes(contactId) )\n        {\n            this.user.starred.splice(this.user.starred.indexOf(contactId), 1);\n        }\n        else\n        {\n            this.user.starred.push(contactId);\n        }\n\n        this._contactsService.updateUserData(this.user);\n    }\n}\n\nexport class FilesDataSource extends DataSource<any>\n{\n    /**\n     * Constructor\n     *\n     * @param {ContactsService} _contactsService\n     */\n    constructor(\n        private _contactsService: ContactsService\n    )\n    {\n        super();\n    }\n\n    /**\n     * Connect function called by the table to retrieve one stream containing the data to render.\n     * @returns {Observable<any[]>}\n     */\n    connect(): Observable<any[]>\n    {\n        return this._contactsService.onContactsChanged;\n    }\n\n    /**\n     * Disconnect\n     */\n    disconnect(): void\n    {\n    }\n}\n","<mat-table #table [dataSource]=\"dataSource\"\n           [@animateStagger]=\"{value:'50'}\">\n    <!-- Checkbox Column -->\n    <ng-container matColumnDef=\"checkbox\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let contact\">\n            <mat-checkbox [(ngModel)]=\"checkboxes[contact.id]\" (ngModelChange)=\"onSelectedChange(contact.id)\"\n                          (click)=\"$event.stopPropagation()\">\n            </mat-checkbox>\n        </mat-cell>\n    </ng-container>\n\n    <!-- Avatar Column -->\n    <ng-container matColumnDef=\"avatar\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let contact\">\n            <img class=\"avatar\" *ngIf=\"contact.avatar\" [alt]=\"contact.name\"\n                 [src]=\"contact.avatar\"/>\n        </mat-cell>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\n        <mat-cell *matCellDef=\"let contact\">\n            <p class=\"text-truncate font-weight-600\">{{contact.name}} {{contact.lastName}}</p>\n        </mat-cell>\n    </ng-container>\n\n    <!-- Email Column -->\n    <ng-container matColumnDef=\"email\">\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm>Email</mat-header-cell>\n        <mat-cell *matCellDef=\"let contact\" fxHide fxShow.gt-sm>\n            <p class=\"email text-truncate\">\n                {{contact.email}}\n            </p>\n        </mat-cell>\n    </ng-container>\n\n    <!-- Phone Column -->\n    <ng-container matColumnDef=\"phone\">\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-md>Phone</mat-header-cell>\n        <mat-cell *matCellDef=\"let contact\" fxHide fxShow.gt-md>\n            <p class=\"phone text-truncate\">\n                {{contact.phone}}\n            </p>\n        </mat-cell>\n    </ng-container>\n\n    <!-- Job Title Column -->\n    <ng-container matColumnDef=\"jobTitle\">\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-lg>Job title</mat-header-cell>\n        <mat-cell *matCellDef=\"let contact\" fxHide fxShow.gt-lg>\n            <p class=\"job-title text-truncate\">\n                {{contact.jobTitle}}\n            </p>\n        </mat-cell>\n    </ng-container>\n\n    <!-- Company Column -->\n    <ng-container matColumnDef=\"company\">\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-lg>Company</mat-header-cell>\n        <mat-cell *matCellDef=\"let contact\" fxHide fxShow.gt-lg>\n            <p class=\"company text-truncate\">\n                {{contact.company}}\n            </p>\n        </mat-cell>\n    </ng-container>\n\n    <!-- Buttons Column -->\n    <ng-container matColumnDef=\"buttons\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let contact\">\n            <div fxFlex=\"row\" fxLayoutAlign=\"end center\">\n                <button mat-icon-button (click)=\"$event.stopPropagation();toggleStar(contact.id)\" aria-label=\"Toggle star\">\n                    <mat-icon class=\"amber-fg\" *ngIf=\"user.starred.includes(contact.id)\">star</mat-icon>\n                    <mat-icon class=\"secondary-text\" *ngIf=\"!user.starred.includes(contact.id)\">star_border</mat-icon>\n                </button>\n\n                <button mat-icon-button [matMenuTriggerFor]=\"moreMenu\" aria-label=\"More\"\n                        (click)=\"$event.stopPropagation();\">\n                    <mat-icon class=\"secondary-text\">more_vert</mat-icon>\n                </button>\n\n                <mat-menu #moreMenu=\"matMenu\">\n                    <button mat-menu-item aria-label=\"remove\" (click)=\"deleteContact(contact)\">\n                        <mat-icon>delete</mat-icon>\n                        <span>Remove</span>\n                    </button>\n                </mat-menu>\n            </div>\n\n        </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let contact; columns: displayedColumns;\"\n             class=\"contact\"\n             (click)=\"editContact(contact)\"\n             [ngClass]=\"{'accent-50':checkboxes[contact.id]}\"\n             [@animate]=\"{value:'*',params:{y:'100%'}}\">\n    </mat-row>\n</mat-table>\n\n\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { Contact } from 'app/main/apps/contacts/contact.model';\n\n@Component({\n    selector     : 'contacts-contact-form-dialog',\n    templateUrl  : './contact-form.component.html',\n    styleUrls    : ['./contact-form.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class ContactsContactFormDialogComponent\n{\n    action: string;\n    contact: Contact;\n    contactForm: FormGroup;\n    dialogTitle: string;\n\n    /**\n     * Constructor\n     *\n     * @param {MatDialogRef<ContactsContactFormDialogComponent>} matDialogRef\n     * @param _data\n     * @param {FormBuilder} _formBuilder\n     */\n    constructor(\n        public matDialogRef: MatDialogRef<ContactsContactFormDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _formBuilder: FormBuilder\n    )\n    {\n        // Set the defaults\n        this.action = _data.action;\n\n        if ( this.action === 'edit' )\n        {\n            this.dialogTitle = 'Edit Contact';\n            this.contact = _data.contact;\n        }\n        else\n        {\n            this.dialogTitle = 'New Contact';\n            this.contact = new Contact({});\n        }\n\n        this.contactForm = this.createContactForm();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Create contact form\n     *\n     * @returns {FormGroup}\n     */\n    createContactForm(): FormGroup\n    {\n        return this._formBuilder.group({\n            id      : [this.contact.id],\n            name    : [this.contact.name],\n            lastName: [this.contact.lastName],\n            avatar  : [this.contact.avatar],\n            nickname: [this.contact.nickname],\n            company : [this.contact.company],\n            jobTitle: [this.contact.jobTitle],\n            email   : [this.contact.email],\n            phone   : [this.contact.phone],\n            address : [this.contact.address],\n            birthday: [this.contact.birthday],\n            notes   : [this.contact.notes]\n        });\n    }\n}\n","<div class=\"dialog-content-wrapper\">\n    <mat-toolbar matDialogTitle class=\"mat-accent m-0\">\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n            <span class=\"title dialog-title\">{{dialogTitle}}</span>\n            <button mat-icon-button (click)=\"matDialogRef.close()\" aria-label=\"Close dialog\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </mat-toolbar-row>\n\n        <mat-toolbar-row class=\"toolbar-bottom py-16\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <img [src]=\"contact.avatar\" class=\"avatar contact-avatar huge m-0\"\n                 [alt]=\"contact.name\"/>\n            <div class=\"contact-name mt-8\">{{contact.name}} {{contact.lastName}}</div>\n        </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div mat-dialog-content class=\"p-24 pb-0 m-0\" fusePerfectScrollbar>\n\n        <form [formGroup]=\"contactForm\">\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Name</mat-label>\n                    <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\n                    <input name=\"name\" formControlName=\"name\" matInput required>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Lastname</mat-label>\n                    <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\n                    <input name=\"lastName\" formControlName=\"lastName\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Nickname</mat-label>\n                    <mat-icon matSuffix class=\"secondary-text\">star</mat-icon>\n                    <input name=\"nickname\" formControlName=\"nickname\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Phone number</mat-label>\n                    <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\n                    <input formControlName=\"phone\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Email</mat-label>\n                    <mat-icon matSuffix class=\"secondary-text\">email</mat-icon>\n                    <input name=\"email\" formControlName=\"email\" matInput type=\"email\">\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Company</mat-label>\n                    <mat-icon matSuffix class=\"secondary-text\">domain</mat-icon>\n                    <input name=\"company\" formControlName=\"company\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Job title</mat-label>\n                    <mat-icon matSuffix class=\"secondary-text\">work</mat-icon>\n                    <input name=\"jobTitle\" formControlName=\"jobTitle\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Birthday</mat-label>\n                    <input matInput [matDatepicker]=\"birthdayDatePicker\" name=\"birthday\" formControlName=\"birthday\">\n                    <mat-datepicker-toggle matSuffix [for]=\"birthdayDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #birthdayDatePicker></mat-datepicker>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Address</mat-label>\n                    <mat-icon matSuffix class=\"secondary-text\">home</mat-icon>\n                    <input name=\"address\" formControlName=\"address\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row\" class=\"textarea-wrapper\" fxLayoutAlign=\"start start\">\n                <mat-form-field appearance=\"outline\" fxFlex>\n                    <mat-label>Notes</mat-label>\n                    <textarea name=\"notes\" formControlName=\"notes\" matInput type=\"text\" max-rows=\"4\"></textarea>\n                </mat-form-field>\n            </div>\n\n        </form>\n\n    </div>\n\n    <div mat-dialog-actions class=\"m-0 p-16\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n\n        <button *ngIf=\"action === 'edit'\"\n                mat-button\n                class=\"mr-8\"\n                (click)=\"matDialogRef.close(['delete',contactForm])\"\n                aria-label=\"Delete\"\n                matTooltip=\"Delete\">\n            DELETE\n        </button>\n\n        <button *ngIf=\"action !== 'edit'\"\n                mat-button\n                class=\"save-button\"\n                (click)=\"matDialogRef.close(contactForm)\"\n                [disabled]=\"contactForm.invalid\"\n                aria-label=\"SAVE\">\n            ADD\n        </button>\n\n        <button *ngIf=\"action === 'edit'\"\n                mat-button\n                class=\"save-button\"\n                (click)=\"matDialogRef.close(['save',contactForm])\"\n                [disabled]=\"contactForm.invalid\"\n                aria-label=\"SAVE\">\n            SAVE\n        </button>\n\n    </div>\n</div>\n"],"sourceRoot":"webpack:///"}
!function(){function t(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],a=!0,i=!1,s=void 0;try{for(var r,l=t[Symbol.iterator]();!(a=(r=l.next()).done)&&(n.push(r.value),!e||n.length!==e);a=!0);}catch(o){i=!0,s=o}finally{try{a||null==l.return||l.return()}finally{if(i)throw s}}return n}(t,e)||i(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}function n(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}function a(t){return function(t){if(Array.isArray(t))return s(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||i(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(t,e){if(t){if("string"==typeof t)return s(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(t,e):void 0}}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,a=new Array(e);n<e;n++)a[n]=t[n];return a}function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{Q7lZ:function(e,i,s){"use strict";s.r(i),s.d(i,"MailNgrxModule",function(){return re});var o=s("mrSG"),c=s("fXoL"),d=s("tyNb"),m=s("bTqV"),u=s("bSwM"),p=s("FKr1"),b=s("0IaG"),f=s("kmnG"),h=s("NFeN"),g=s("qFsG"),x=s("STbY"),v=s("d3UM"),y=s("/t3+"),O=s("sYmb"),S=s("5HBU"),L=s("LPQX"),j=s("l7P3"),E=s("LRne"),A=s("cp0P"),M=s("eIep"),I=s("JIr8"),w=s("pLZG"),T=s("IzEk"),C=s("lJxs"),k=s("vkgz"),F=function t(){l(this,t),this.type="[MAILS] GET MAILS"},R=function t(e){l(this,t),this.payload=e,this.type="[MAILS] GET MAILS SUCCESS"},D=function t(e){l(this,t),this.payload=e,this.type="[MAILS] GET MAILS FAILED"},_=function t(e){l(this,t),this.payload=e,this.type="[MAILS] SET CURRENT MAIL"},N=function t(e){l(this,t),this.payload=e,this.type="[MAILS] SET CURRENT MAIL SUCCESS"},P=function t(){l(this,t),this.type="[MAILS] CHECK CURRENT MAIL"},B=function t(e){l(this,t),this.payload=e,this.type="[MAILS] UPDATE MAIL"},G=function t(e){l(this,t),this.payload=e,this.type="[MAILS] UPDATE MAIL SUCCESS"},U=function t(e){l(this,t),this.payload=e,this.type="[MAILS] UPDATE MAILS"},$=function t(){l(this,t),this.type="[MAILS] UPDATE MAILS SUCCESS"},H=function t(e){l(this,t),this.payload=e,this.type="[MAILS] SET SEARCH TEXT"},z=function t(){l(this,t),this.type="[MAILS] SELECT ALL MAILS"},K=function t(){l(this,t),this.type="[MAILS] DESELECT ALL MAILS"},J=function t(e){l(this,t),this.payload=e,this.type="[MAILS] TOGGLE IN SELECTED MAILS"},X=function t(e){l(this,t),this.payload=e,this.type="[MAILS] SELECT MAILS BY PARAMETER"},V=function t(e){l(this,t),this.payload=e,this.type="[MAILS] SET FOLDER ON SELECTED MAILS"},Y=function t(e){l(this,t),this.payload=e,this.type="[MAILS] ADD LABEL ON SELECTED MAILS"},q=function t(e){l(this,t),this.payload=e,this.type="[FOLDERS] GET FOLDERS"},Q=function t(e){l(this,t),this.payload=e,this.type="[FOLDERS] GET FOLDERS SUCCESS"},Z=function t(e){l(this,t),this.payload=e,this.type="[FOLDERS] GET FOLDERS FAILED"},W=function t(e){l(this,t),this.payload=e,this.type="[FILTERS] GET FILTERS"},tt=function t(e){l(this,t),this.payload=e,this.type="[FILTERS] GET FILTERS SUCCESS"},et=function t(e){l(this,t),this.payload=e,this.type="[FILTERS] GET FILTERS FAILED"},nt=function t(e){l(this,t),this.payload=e,this.type="[LABELS] GET LABELS"},at=function t(e){l(this,t),this.payload=e,this.type="[LABELS] GET LABELS SUCCESS"},it=function t(e){l(this,t),this.payload=e,this.type="[LABELS] GET LABELS FAILED"},st={entities:{},currentMail:null,selectedMailIds:[],searchText:"",loading:!1,loaded:!1},rt={entities:{},loading:!1,loaded:!1},lt={entities:{},loading:!1,loaded:!1},ot={entities:{},loading:!1,loaded:!1},ct=Object(j.o)("mail-app"),dt=(Object(j.p)(ct,function(t){return t}),{mails:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:st,e=arguments.length>1?arguments[1]:void 0;switch(e.type){case"[MAILS] GET MAILS":return Object.assign(Object.assign({},t),{loading:!0});case"[MAILS] GET MAILS SUCCESS":var n=e.payload.mails,i=e.payload.loaded,s=n.reduce(function(t,e){return Object.assign(Object.assign({},t),r({},e.id,e))},{});return Object.assign(Object.assign({},t),{entities:s,loading:!1,loaded:i});case"[MAILS] GET MAILS FAILED":return Object.assign(Object.assign({},t),{loading:!1,loaded:!1});case"[MAILS] SET CURRENT MAIL SUCCESS":return Object.assign(Object.assign({},t),{currentMail:e.payload});case"[MAILS] UPDATE MAIL SUCCESS":return Object.assign(Object.assign({},t),{entities:Object.assign(Object.assign({},t.entities),r({},e.payload.id,e.payload))});case"[MAILS] SET SEARCH TEXT":return Object.assign(Object.assign({},t),{searchText:e.payload});case"[MAILS] TOGGLE IN SELECTED MAILS":var l=e.payload,o=a(t.selectedMailIds);return o=void 0!==o.find(function(t){return t===l})?o.filter(function(t){return t!==l}):[].concat(a(o),[l]),Object.assign(Object.assign({},t),{selectedMailIds:o});case"[MAILS] SELECT ALL MAILS":var c=Object.keys(t.entities).map(function(e){return t.entities[e]}).map(function(t){return t.id});return Object.assign(Object.assign({},t),{selectedMailIds:c});case"[MAILS] DESELECT ALL MAILS":return Object.assign(Object.assign({},t),{selectedMailIds:[]});case"[MAILS] SELECT MAILS BY PARAMETER":var d=e.payload,m=Object.keys(t.entities).map(function(e){return t.entities[e]}).filter(function(t){return t[d.parameter]===d.value}).map(function(t){return t.id});return Object.assign(Object.assign({},t),{selectedMailIds:m});case"[MAILS] SET FOLDER ON SELECTED MAILS":var u=Object.assign({},t.entities);return t.selectedMailIds.map(function(t){u[t]=Object.assign(Object.assign({},u[t]),{folder:e.payload})}),Object.assign(Object.assign({},t),{entities:u});default:return t}},folders:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:rt,e=arguments.length>1?arguments[1]:void 0;switch(e.type){case"[FOLDERS] GET FOLDERS":return Object.assign(Object.assign({},t),{loading:!0,loaded:!1});case"[FOLDERS] GET FOLDERS SUCCESS":var n=e.payload.reduce(function(t,e){return Object.assign(Object.assign({},t),r({},e.id,e))},{});return Object.assign(Object.assign({},t),{loading:!1,loaded:!0,entities:n});case"[FOLDERS] GET FOLDERS FAILED":return Object.assign(Object.assign({},t),{loading:!1,loaded:!1});default:return t}},filters:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:lt,e=arguments.length>1?arguments[1]:void 0;switch(e.type){case"[FILTERS] GET FILTERS":return Object.assign(Object.assign({},t),{loading:!0,loaded:!1});case"[FILTERS] GET FILTERS SUCCESS":var n=e.payload.reduce(function(t,e){return Object.assign(Object.assign({},t),r({},e.id,e))},{});return Object.assign(Object.assign({},t),{loading:!1,loaded:!0,entities:n});case"[FILTERS] GET FILTERS FAILED":return Object.assign(Object.assign({},t),{loading:!1,loaded:!1});default:return t}},labels:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ot,e=arguments.length>1?arguments[1]:void 0;switch(e.type){case"[LABELS] GET LABELS":return Object.assign(Object.assign({},t),{loading:!0,loaded:!1});case"[LABELS] GET LABELS SUCCESS":var n=e.payload.reduce(function(t,e){return Object.assign(Object.assign({},t),r({},e.id,e))},{});return Object.assign(Object.assign({},t),{loading:!1,loaded:!0,entities:n});case"[LABELS] GET LABELS FAILED":return Object.assign(Object.assign({},t),{loading:!1,loaded:!1});default:return t}}}),mt=s("jD4G"),ut=Object(j.p)(ct,function(t){return t.mails}),pt=Object(j.p)(ut,function(t){return t.entities}),bt=Object(j.p)(ut,function(t){return t.loaded}),ft=Object(j.p)(ut,function(t){return t.searchText}),ht=Object(j.p)(pt,ft,function(t,e){var n=Object.keys(t).map(function(e){return t[e]});return mt.a.filterArrayByString(n,e)}),gt=Object(j.p)(ut,function(t){return t.currentMail}),xt=Object(j.p)(ut,function(t){return t.selectedMailIds}),vt=Object(j.p)(ct,function(t){return t.folders}),yt=Object(j.p)(vt,function(t){return t.entities}),Ot=Object(j.p)(vt,function(t){return t.loaded}),St=Object(j.p)(yt,function(t){return Object.keys(t).map(function(e){return t[e]})}),Lt=Object(j.p)(ct,function(t){return t.filters}),jt=Object(j.p)(Lt,function(t){return t.entities}),Et=Object(j.p)(Lt,function(t){return t.loaded}),At=Object(j.p)(jt,function(t){return Object.keys(t).map(function(e){return t[e]})}),Mt=Object(j.p)(ct,function(t){return t.labels}),It=Object(j.p)(Mt,function(t){return t.entities}),wt=Object(j.p)(Mt,function(t){return t.loaded}),Tt=Object(j.p)(It,function(t){return Object.keys(t).map(function(e){return t[e]})}),Ct=s("snw9"),kt=s("XqQ8"),Ft=s("zp1y"),Rt=s("5+tZ"),Dt=s("Kj3r"),_t=s("tg95"),Nt=s("tk/3"),Pt=function(){function t(e,n){var a=this;l(this,t),this._httpClient=e,this._store=n,this._store.pipe(Object(j.r)(St)).subscribe(function(t){a.foldersArr=t}),this._store.pipe(Object(j.r)(At)).subscribe(function(t){a.filtersArr=t}),this._store.pipe(Object(j.r)(Tt)).subscribe(function(t){a.labelsArr=t}),this._store.pipe(Object(j.r)(ht)).subscribe(function(t){a.mails=t}),this.selectedMails=[]}return n(t,[{key:"getAllMails",value:function(){return this._httpClient.get("api/mail-mails")}},{key:"getFolders",value:function(){return this._httpClient.get("api/mail-folders")}},{key:"getFilters",value:function(){return this._httpClient.get("api/mail-filters")}},{key:"getLabels",value:function(){return this._httpClient.get("api/mail-labels")}},{key:"getMails",value:function(t){if("labelHandle"===t.id){var e=this.labelsArr.find(function(e){return e.handle===t.value}).id;return this._httpClient.get("api/mail-mails?labels="+e)}if("filterHandle"===t.id)return this._httpClient.get("api/mail-mails?"+t.value+"=true");var n=this.foldersArr.find(function(e){return e.handle===t.value}).id;return this._httpClient.get("api/mail-mails?folder="+n)}},{key:"updateMail",value:function(t){return this._httpClient.post("api/mail-mails/"+t.id,Object.assign({},t))}}]),t}();Pt.ctorParameters=function(){return[{type:Nt.c},{type:j.h}]},Pt=Object(o.a)([Object(c.F)()],Pt);var Bt=function e(n,i,s){var r=this;l(this,e),this.actions=n,this.mailService=i,this.store=s,this.getMails=this.actions.pipe(Object(Ct.d)("[MAILS] GET MAILS"),Object(kt.a)(function(t){var e={id:"",value:""};return Object(E.a)("labelHandle","filterHandle","folderHandle").subscribe(function(t){r.routerState.params[t]&&(e={id:t,value:r.routerState.params[t]})}),r.mailService.getMails(e).pipe(Object(C.a)(function(t){return new R({loaded:e,mails:t})}),Object(I.a)(function(t){return Object(E.a)(new D(t))}))})),this.updateMail=this.actions.pipe(Object(Ct.d)("[MAILS] UPDATE MAIL"),Object(kt.a)(function(t){return r.mailService.updateMail(t.payload).pipe(Object(C.a)(function(){return new G(t.payload)}))})),this.updateMails=this.actions.pipe(Object(Ct.d)("[MAILS] UPDATE MAILS"),Object(kt.a)(function(t){return Object(A.a)(t.payload.map(function(t){return r.mailService.updateMail(t)})).pipe(Object(C.a)(function(){return new $}))})),this.setCurrentMail=this.actions.pipe(Object(Ct.d)("[MAILS] SET CURRENT MAIL"),Object(Ft.a)(this.store.pipe(Object(j.r)(ut))),Object(C.a)(function(e){var n=t(e,2),a=n[0],i=n[1];return new N(i.entities[a.payload])})),this.checkCurrentMail=this.actions.pipe(Object(Ct.d)("[MAILS] CHECK CURRENT MAIL"),Object(Ft.a)(this.store.pipe(Object(j.r)(ut))),Object(C.a)(function(e){var n=t(e,2),a=(n[0],n[1]);return r.routerState.params.mailId&&a.entities[r.routerState.params.mailId],new N(a.entities[r.routerState.params.mailId])})),this.getMailsSuccess=this.actions.pipe(Object(Ct.d)("[MAILS] GET MAILS SUCCESS"),Object(Rt.a)(function(){return[new P]})),this.updateMailsSuccess=this.actions.pipe(Object(Ct.d)("[MAILS] UPDATE MAILS SUCCESS"),Object(Rt.a)(function(){return[new K,new F]})),this.updateMailSuccess=this.actions.pipe(Object(Ct.d)("[MAILS] UPDATE MAIL SUCCESS"),Object(Dt.a)(500),Object(C.a)(function(){return new F})),this.setFolderOnSelectedMails=this.actions.pipe(Object(Ct.d)("[MAILS] SET FOLDER ON SELECTED MAILS"),Object(Ft.a)(this.store.pipe(Object(j.r)(ut))),Object(C.a)(function(e){var n=t(e,2),i=n[0],s=n[1],r=Object.assign({},s.entities),l=[];return s.selectedMailIds.map(function(t){l=[].concat(a(l),[r[t]=Object.assign(Object.assign({},r[t]),{folder:i.payload})])}),new U(l)})),this.addLabelOnSelectedMails=this.actions.pipe(Object(Ct.d)("[MAILS] ADD LABEL ON SELECTED MAILS"),Object(Ft.a)(this.store.pipe(Object(j.r)(ut))),Object(C.a)(function(e){var n=t(e,2),i=n[0],s=n[1],r=Object.assign({},s.entities),l=[];return s.selectedMailIds.map(function(t){var e=a(r[t].labels);r[t].labels.includes(i.payload)||(e=[].concat(a(e),[i.payload])),l=[].concat(a(l),[r[t]=Object.assign(Object.assign({},r[t]),{labels:e})])}),new U(l)})),this.store.pipe(Object(j.r)(_t.b)).subscribe(function(t){t&&(r.routerState=t.state)})};Bt.ctorParameters=function(){return[{type:Ct.a},{type:Pt},{type:j.h}]},Object(o.a)([Object(Ct.b)()],Bt.prototype,"getMails",void 0),Object(o.a)([Object(Ct.b)()],Bt.prototype,"updateMail",void 0),Object(o.a)([Object(Ct.b)()],Bt.prototype,"updateMails",void 0),Object(o.a)([Object(Ct.b)()],Bt.prototype,"setCurrentMail",void 0),Object(o.a)([Object(Ct.b)()],Bt.prototype,"checkCurrentMail",void 0),Object(o.a)([Object(Ct.b)()],Bt.prototype,"getMailsSuccess",void 0),Object(o.a)([Object(Ct.b)()],Bt.prototype,"updateMailsSuccess",void 0),Object(o.a)([Object(Ct.b)()],Bt.prototype,"updateMailSuccess",void 0),Object(o.a)([Object(Ct.b)()],Bt.prototype,"setFolderOnSelectedMails",void 0),Object(o.a)([Object(Ct.b)()],Bt.prototype,"addLabelOnSelectedMails",void 0),Bt=Object(o.a)([Object(c.F)()],Bt);var Gt=function t(e,n){var a=this;l(this,t),this.actions=e,this.mailService=n,this.getFolders=this.actions.pipe(Object(Ct.d)("[FOLDERS] GET FOLDERS"),Object(M.a)(function(t){return a.mailService.getFolders().pipe(Object(C.a)(function(t){return new Q(t)}),Object(I.a)(function(t){return Object(E.a)(new Z(t))}))}))};Gt.ctorParameters=function(){return[{type:Ct.a},{type:Pt}]},Object(o.a)([Object(Ct.b)()],Gt.prototype,"getFolders",void 0),Gt=Object(o.a)([Object(c.F)()],Gt);var Ut=function t(e,n){var a=this;l(this,t),this.actions=e,this.mailService=n,this.getFilters=this.actions.pipe(Object(Ct.d)("[FILTERS] GET FILTERS"),Object(M.a)(function(t){return a.mailService.getFilters().pipe(Object(C.a)(function(t){return new tt(t)}),Object(I.a)(function(t){return Object(E.a)(new et(t))}))}))};Ut.ctorParameters=function(){return[{type:Ct.a},{type:Pt}]},Object(o.a)([Object(Ct.b)()],Ut.prototype,"getFilters",void 0),Ut=Object(o.a)([Object(c.F)()],Ut);var $t=function t(e,n){var a=this;l(this,t),this.actions=e,this.mailService=n,this.getLabels=this.actions.pipe(Object(Ct.d)("[LABELS] GET LABELS"),Object(M.a)(function(t){return a.mailService.getLabels().pipe(Object(C.a)(function(t){return new at(t)}),Object(I.a)(function(t){return Object(E.a)(new it(t))}))}))};$t.ctorParameters=function(){return[{type:Ct.a},{type:Pt}]},Object(o.a)([Object(Ct.b)()],$t.prototype,"getLabels",void 0);var Ht=[Bt,Gt,Ut,$t=Object(o.a)([Object(c.F)()],$t)],zt=function(){function e(t){var n=this;l(this,e),this._store=t,this._store.pipe(Object(j.r)(_t.b)).subscribe(function(t){t&&(n.routerState=t.state)})}return n(e,[{key:"canActivate",value:function(t,e){return this.checkStore().pipe(Object(M.a)(function(){return Object(E.a)(!0)}),Object(I.a)(function(){return Object(E.a)(!1)}))}},{key:"checkStore",value:function(){var e=this;return Object(A.a)(this.getFolders(),this.getFilters(),this.getLabels()).pipe(Object(w.a)(function(e){var n=t(e,3),a=n[0],i=n[1],s=n[2];return!!(a&&i&&s)}),Object(T.a)(1),Object(M.a)(function(){return e.getMails()}),Object(T.a)(1),Object(C.a)(function(){return e._store.dispatch(new _(e.routerState.params.mailId))}))}},{key:"getFolders",value:function(){var t=this;return this._store.pipe(Object(j.r)(Ot),Object(k.a)(function(e){e||t._store.dispatch(new q([]))}),Object(w.a)(function(t){return t}),Object(T.a)(1))}},{key:"getFilters",value:function(){var t=this;return this._store.pipe(Object(j.r)(Et),Object(k.a)(function(e){e||t._store.dispatch(new W([]))}),Object(w.a)(function(t){return t}),Object(T.a)(1))}},{key:"getLabels",value:function(){var t=this;return this._store.pipe(Object(j.r)(wt),Object(k.a)(function(e){e||t._store.dispatch(new nt([]))}),Object(w.a)(function(t){return t}),Object(T.a)(1))}},{key:"getMails",value:function(){var t=this;return this._store.pipe(Object(j.r)(bt),Object(k.a)(function(e){t.routerState.params[e.id]&&t.routerState.params[e.id]===e.value||(t._store.dispatch(new F),t._store.dispatch(new H("")),t._store.dispatch(new K))}),Object(w.a)(function(e){return t.routerState.params[e.id]&&t.routerState.params[e.id]===e.value}),Object(T.a)(1))}}]),e}();zt.ctorParameters=function(){return[{type:j.h}]},zt=Object(o.a)([Object(c.F)()],zt);var Kt=function t(){l(this,t)};Kt=Object(o.a)([Object(c.N)({imports:[j.j.forFeature("mail-app",dt),Ct.c.forFeature(Ht)],providers:[]})],Kt);var Jt=s("3Pt+"),Xt=s("/uUt"),Vt=s("HX77"),Yt=s("gPJw"),qt={lang:"en",data:{MAIL:{COMPOSE:"COMPOSE",FOLDERS:"FOLDERS",FILTERS:"FILTERS",LABELS:"LABELS",NO_MESSAGES:"There are no messages!",SELECT_A_MESSAGE_TO_READ:"Select a message to read",SEARCH_PLACEHOLDER:"Search for an e-mail or contact"}}},Qt={lang:"tr",data:{MAIL:{COMPOSE:"YEN\u0130 E-POSTA",FOLDERS:"KLAS\xd6RLER",FILTERS:"F\u0130LTRELER",LABELS:"ET\u0130KETLER",NO_MESSAGES:"Mesajiniz bulunmamakta!",SELECT_A_MESSAGE_TO_READ:"Okumak i\xe7in bir mesaj se\xe7in",SEARCH_PLACEHOLDER:"E-mail yada bir ki\u015fi aray\u0131n"}}},Zt=function(){function t(e,n,a,i,s){l(this,t),this._changeDetectorRef=e,this._fuseSidebarService=n,this._fuseTranslationLoaderService=a,this._mailNgrxService=i,this._store=s,this.searchInput=new Jt.d(""),this._fuseTranslationLoaderService.loadTranslations(qt,Qt),this.currentMail$=this._store.pipe(Object(j.r)(gt)),this.mails$=this._store.pipe(Object(j.r)(ht)),this.folders$=this._store.pipe(Object(j.r)(St)),this.labels$=this._store.pipe(Object(j.r)(Tt)),this.selectedMailIds$=this._store.pipe(Object(j.r)(xt)),this.searchText$=this._store.pipe(Object(j.r)(ft)),this.mails=[],this.selectedMailIds=[]}return n(t,[{key:"ngOnInit",value:function(){var t=this;this.mails$.subscribe(function(e){t.mails=e}),this.selectedMailIds$.subscribe(function(e){t.selectedMailIds=e,t.hasSelectedMails=e.length>0,t.isIndeterminate=e.length!==t.mails.length&&e.length>0,t.refresh()}),this.searchText$.subscribe(function(e){t.searchInput.setValue(e)}),this.searchInput.valueChanges.pipe(Object(Dt.a)(300),Object(Xt.a)()).subscribe(function(e){t._store.dispatch(new H(e))})}},{key:"ngOnDestroy",value:function(){this._changeDetectorRef.detach()}},{key:"toggleSelectAll",value:function(t){t.preventDefault(),this.selectedMailIds.length&&this.selectedMailIds.length>0?this.deselectAllMails():this.selectAllMails()}},{key:"selectAllMails",value:function(){this._store.dispatch(new z)}},{key:"deselectAllMails",value:function(){this._store.dispatch(new K)}},{key:"selectMailsByParameter",value:function(t,e){this._store.dispatch(new X({parameter:t,value:e}))}},{key:"toggleLabelOnSelectedMails",value:function(t){this._store.dispatch(new Y(t))}},{key:"setFolderOnSelectedMails",value:function(t){this._store.dispatch(new V(t))}},{key:"deselectCurrentMail",value:function(){this._store.dispatch(new _(""))}},{key:"refresh",value:function(){this._changeDetectorRef.markForCheck()}},{key:"toggleSidebar",value:function(t){this._fuseSidebarService.getSidebar(t).toggleOpen()}}]),t}();Zt.ctorParameters=function(){return[{type:c.k},{type:Vt.a},{type:Yt.a},{type:Pt},{type:j.h}]},Zt=Object(o.a)([Object(c.n)({selector:"mail-ngrx",template:'<div id="mail" class="page-layout carded left-sidebar inner-scroll">\n\n    \x3c!-- TOP BACKGROUND --\x3e\n    <div class="top-bg accent"></div>\n    \x3c!-- / TOP BACKGROUND --\x3e\n\n    \x3c!-- SIDEBAR --\x3e\n    <fuse-sidebar class="sidebar" name="mail-ngrx-main-sidebar" position="left" lockedOpen="gt-md">\n        <mail-ngrx-main-sidebar></mail-ngrx-main-sidebar>\n    </fuse-sidebar>\n    \x3c!-- / SIDEBAR --\x3e\n\n    \x3c!-- CENTER --\x3e\n    <div class="center">\n\n        \x3c!-- CONTENT HEADER --\x3e\n        <div class="header" fxLayout="row" fxLayoutAlign="start center">\n\n            <div class="search-wrapper" fxFlex fxLayout="row" fxLayoutAlign="start center">\n\n                <button mat-icon-button class="sidebar-toggle" fxHide.gt-md\n                        (click)="toggleSidebar(\'mail-ngrx-main-sidebar\')">\n                    <mat-icon>menu</mat-icon>\n                </button>\n\n                <div class="search" fxLayout="row" fxLayoutAlign="start center">\n                    <mat-icon class="secondary-text">search</mat-icon>\n                    <input [formControl]="searchInput" [placeholder]="\'MAIL.SEARCH_PLACEHOLDER\' | translate" fxFlex>\n                </div>\n            </div>\n        </div>\n        \x3c!-- / CONTENT HEADER --\x3e\n\n        \x3c!-- CONTENT CARD --\x3e\n        <div class="content-card" [ngClass]="{\'current-mail-selected\':currentMail$ | async}">\n\n            \x3c!-- CONTENT TOOLBAR --\x3e\n            <div class="toolbar px-24 py-8">\n\n                <div class="mail-selection" fxFlex="row" fxLayoutAlign="start center">\n\n                    <mat-checkbox (click)="toggleSelectAll($event)"\n                                  [checked]="hasSelectedMails"\n                                  [indeterminate]="isIndeterminate">\n                    </mat-checkbox>\n\n                    <button mat-icon-button [matMenuTriggerFor]="selectMenu">\n                        <mat-icon>arrow_drop_down</mat-icon>\n                    </button>\n                    <mat-menu #selectMenu="matMenu">\n                        <button mat-menu-item (click)="selectAllMails()">All</button>\n                        <button mat-menu-item (click)="deselectAllMails()">None</button>\n                        <button mat-menu-item (click)="selectMailsByParameter(\'read\', true)">Read</button>\n                        <button mat-menu-item (click)="selectMailsByParameter(\'read\', false)">Unread</button>\n                        <button mat-menu-item (click)="selectMailsByParameter(\'starred\', true)">Starred</button>\n                        <button mat-menu-item (click)="selectMailsByParameter(\'starred\', false)">Unstarred</button>\n                        <button mat-menu-item (click)="selectMailsByParameter(\'important\', true)">Important</button>\n                        <button mat-menu-item (click)="selectMailsByParameter(\'important\', false)">Unimportant</button>\n                    </mat-menu>\n\n                    <div class="toolbar-separator" *ngIf="hasSelectedMails"></div>\n\n                    <button mat-icon-button (click)="setFolderOnSelectedMails(4)" *ngIf="hasSelectedMails">\n                        <mat-icon class="secondary-text">delete</mat-icon>\n                    </button>\n\n                    <button mat-icon-button [matMenuTriggerFor]="folderMenu" *ngIf="hasSelectedMails">\n                        <mat-icon class="secondary-text">folder</mat-icon>\n                    </button>\n                    <mat-menu #folderMenu="matMenu">\n                        <button mat-menu-item *ngFor="let folder of folders$ | async"\n                                (click)="setFolderOnSelectedMails(folder.id)">{{folder.title}}\n                        </button>\n                    </mat-menu>\n\n                    <button mat-icon-button [matMenuTriggerFor]="labelMenu" *ngIf="hasSelectedMails">\n                        <mat-icon class="secondary-text">label</mat-icon>\n                    </button>\n                    <mat-menu #labelMenu="matMenu">\n                        <button mat-menu-item *ngFor="let label of labels$ | async"\n                                (click)="toggleLabelOnSelectedMails(label.id)">{{label.title}}\n                        </button>\n                    </mat-menu>\n                </div>\n\n                <div *ngIf="currentMail$ | async" fxHide.gt-xs>\n                    <button mat-icon-button (click)="deselectCurrentMail()">\n                        <mat-icon class="secondary-text">arrow_back</mat-icon>\n                    </button>\n                </div>\n            </div>\n            \x3c!-- / CONTENT TOOLBAR --\x3e\n\n            \x3c!-- CONTENT --\x3e\n            <div class="content" fxLayout="row">\n\n                <mail-ngrx-list fusePerfectScrollbar fxFlex [mails]="mails$ | async" [currentMail]="currentMail$ | async"></mail-ngrx-list>\n                <mail-ngrx-details [currentMail]="currentMail$ | async" fusePerfectScrollbar fxFlex></mail-ngrx-details>\n\n            </div>\n            \x3c!-- / CONTENT --\x3e\n\n        </div>\n        \x3c!-- / CONTENT CARD --\x3e\n\n    </div>\n    \x3c!-- / CENTER --\x3e\n\n</div>\n',changeDetection:c.j.OnPush,encapsulation:c.rb.None,styles:["/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\nmail-ngrx {\n  width: 100%;\n}\nmail-ngrx .center .header .search-wrapper {\n  border-radius: 28px;\n  overflow: hidden;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\nmail-ngrx .center .header .search-wrapper .sidebar-toggle {\n  margin: 0 0 0 6px;\n  width: 56px;\n  height: 56px;\n  border-radius: 0;\n  border-right: 1px solid;\n}\nmail-ngrx .center .header .search-wrapper .search {\n  width: 100%;\n  height: 56px;\n  line-height: 56px;\n  padding: 0 18px;\n}\nmail-ngrx .center .header .search-wrapper .search input {\n  height: 56px;\n  min-height: 56px;\n  max-height: 56px;\n  padding: 0 16px;\n  border: none;\n  outline: none;\n}\nmail-ngrx .center .content-card .toolbar .toolbar-separator {\n  height: 32px;\n  width: 1px;\n  margin: 0 12px;\n}\n@media screen and (max-width: 599px) {\n  mail-ngrx .center .content-card mail-ngrx-list {\n    border-right: none;\n  }\n  mail-ngrx .center .content-card mail-ngrx-list,\nmail-ngrx .center .content-card mail-ngrx-details {\n    flex: 1 0 100%;\n  }\n  mail-ngrx .center .content-card mail-ngrx-details {\n    display: none !important;\n  }\n  mail-ngrx .center .content-card.current-mail-selected .toolbar {\n    padding-left: 16px !important;\n  }\n  mail-ngrx .center .content-card.current-mail-selected .toolbar .mail-selection {\n    display: none !important;\n  }\n  mail-ngrx .center .content-card.current-mail-selected .content mail-ngrx-list {\n    display: none !important;\n  }\n  mail-ngrx .center .content-card.current-mail-selected .content mail-ngrx-details {\n    display: flex !important;\n  }\n}"]})],Zt);var Wt=function(){function t(e,n,a){l(this,t),this._activatedRoute=e,this._mailNgrxService=n,this._router=a}return n(t,[{key:"readMail",value:function(t){var e=this._activatedRoute.snapshot.params.labelHandle,n=this._activatedRoute.snapshot.params.filterHandle,a=this._activatedRoute.snapshot.params.folderHandle;e?this._router.navigate(["apps/mail-ngrx/label/"+e+"/"+t]):n?this._router.navigate(["apps/mail-ngrx/filter/"+n+"/"+t]):this._router.navigate(["apps/mail-ngrx/"+a+"/"+t])}}]),t}();Wt.ctorParameters=function(){return[{type:d.a},{type:Pt},{type:d.g}]},Wt.propDecorators={mails:[{type:c.I}],currentMail:[{type:c.I}]},Wt=Object(o.a)([Object(c.n)({selector:"mail-ngrx-list",template:'<div *ngIf="mails.length === 0" fxLayout="column" fxLayoutAlign="center center" fxFlexFill>\n    <span class="no-messages-text hint-text">{{ \'MAIL.NO_MESSAGES\' | translate }}</span>\n</div>\n\n<div class="mail-list">\n    <mail-ngrx-list-item *ngFor="let mail of mails" [mail]="mail" (click)="readMail(mail.id)"\n                    [ngClass]="{\'current-mail\':mail?.id == currentMail?.id}">\n    </mail-ngrx-list-item>\n</div>\n',changeDetection:c.j.OnPush,encapsulation:c.rb.None,styles:["mail-ngrx-list {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 0;\n  border-right: 1px solid;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}\nmail-ngrx-list .no-messages-text {\n  font-size: 24px;\n  font-weight: 300;\n}\nmail-ngrx-list .mail-list {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}"]})],Wt);var te=function(){function t(e){l(this,t),this.id=e.id,this.from=e.from,this.to=e.to,this.subject=e.subject,this.message=e.message,this.time=e.time,this.read=e.read,this.starred=e.starred,this.important=e.important,this.hasAttachments=e.hasAttachments,this.attachments=e.attachments,this.labels=e.labels,this.folder=e.folder}return n(t,[{key:"toggleStar",value:function(){this.starred=!this.starred}},{key:"toggleImportant",value:function(){this.important=!this.important}},{key:"markRead",value:function(){this.read=!0}},{key:"markUnread",value:function(){this.read=!1}}]),t}(),ee=function(){function t(e,n,a){l(this,t),this._changeDetectorRef=e,this._mailNgrxService=n,this._store=a,this.labels$=this._store.pipe(Object(j.r)(Tt)),this.selectedMailIds$=this._store.pipe(Object(j.r)(xt)),this.selected=!1}return n(t,[{key:"ngOnInit",value:function(){var t=this;this.mail=new te(this.mail),this.unread=!this.mail.read,this.selectedMailIds$.subscribe(function(e){t.selected=e.length>0&&void 0!==e.find(function(e){return e===t.mail.id}),t.refresh()})}},{key:"refresh",value:function(){this._changeDetectorRef.markForCheck()}},{key:"onSelectedChange",value:function(){this._store.dispatch(new J(this.mail.id))}}]),t}();ee.ctorParameters=function(){return[{type:c.k},{type:Pt},{type:j.h}]},ee.propDecorators={mail:[{type:c.I}],selected:[{type:c.A,args:["class.selected"]}],unread:[{type:c.A,args:["class.unread"]}]},ee=Object(o.a)([Object(c.n)({selector:"mail-ngrx-list-item",template:'<div fxLayout="row" fxLayoutAlign="start center">\n\n    <mat-checkbox [checked]="selected" (change)="onSelectedChange()"\n                  (click)="$event.stopPropagation();">\n    </mat-checkbox>\n\n    <div class="info" fxFlex FlexLayout="column">\n\n        <div class="row-1" fxLayout="row" fxLayoutAlign="start center">\n\n            <div class="name" fxLayout="row" fxLayoutAlign="start center" fxFlex>\n                <img class="avatar" *ngIf="mail.from?.avatar" alt="{{mail.from?.name}}" src="{{mail.from?.avatar}}"/>\n                <div class="avatar accent" *ngIf="!mail.from?.avatar">{{mail.from?.name[0]}}</div>\n                <span class="text-truncate" *ngIf="mail?.from">{{mail.from?.name}}</span>\n                <mat-icon class="s-16 ml-8" *ngIf="mail.hasAttachments">attachment</mat-icon>\n            </div>\n\n            <div fxLayout="row" fxLayoutAlign="start center">\n                <div class="time">{{mail.time}}</div>\n            </div>\n\n        </div>\n\n        <div class="row-2" fxLayout="row" fxLayoutAlign="start center">\n\n            <div fxLayout="column" fxLayoutAlign="start start">\n\n                <div class="subject text-truncate">\n                    {{mail.subject}}\n                </div>\n\n                <div class="message text-truncate" *ngIf="mail?.message">\n                    {{mail.message | htmlToPlaintext | slice:0:180}}{{mail.message.length > 180 ? \'...\' : \'\'}}\n                </div>\n\n                <div class="labels" fxLayout="row wrap" fxHide fxShow.gt-sm>\n                    <div class="label" *ngFor="let labelId of mail.labels"\n                         fxLayout="row" fxLayoutAlign="start center">\n                        <div class="label-color"\n                             [ngStyle]="{\'background-color\': (labels$ | async) | getById:labelId:\'color\'}"></div>\n                        <div class="label-title">{{(labels$ | async) | getById:labelId:\'title\'}}</div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n',changeDetection:c.j.OnPush,encapsulation:c.rb.None,styles:["/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\nmail-ngrx-list-item {\n  flex-shrink: 0;\n  position: relative;\n  padding: 16px 24px;\n  border-bottom: 1px solid;\n  cursor: pointer;\n}\nmail-ngrx-list-item.unread .info .name {\n  font-weight: 700;\n}\nmail-ngrx-list-item.unread .info .row-2 .subject {\n  font-weight: 700;\n}\nmail-ngrx-list-item .info {\n  overflow: hidden;\n  width: 0;\n  margin-left: 16px;\n  position: relative;\n}\nmail-ngrx-list-item .info .row-1 {\n  margin-bottom: 8px;\n}\nmail-ngrx-list-item .info .row-1 .name {\n  font-size: 15px;\n  font-weight: 600;\n}\nmail-ngrx-list-item .info .row-1 .name .avatar {\n  min-width: 32px;\n  width: 32px;\n  height: 32px;\n  line-height: 32px;\n}\nmail-ngrx-list-item .info .row-1 .actions {\n  margin-left: 4px;\n}\nmail-ngrx-list-item .info .row-1 .actions .mat-icon-button {\n  width: 32px;\n  height: 32px;\n  line-height: 1;\n}\nmail-ngrx-list-item .info .row-2 .subject,\nmail-ngrx-list-item .info .row-2 .message {\n  width: 100%;\n}\nmail-ngrx-list-item .info .row-2 .message {\n  position: relative;\n}\nmail-ngrx-list-item .info .row-2 .labels {\n  margin-top: 8px;\n}\nmail-ngrx-list-item .info .row-2 .labels .label {\n  font-size: 11px;\n  border-radius: 4px;\n  margin: 0 4px 0 0;\n  padding: 3px 8px;\n}\nmail-ngrx-list-item .info .row-2 .labels .label .label-color {\n  width: 8px;\n  height: 8px;\n  margin-right: 8px;\n  border-radius: 50%;\n}"]})],ee);var ne=function(){function t(e,n){l(this,t),this._mailNgrxService=e,this._store=n,this.labels$=this._store.pipe(Object(j.r)(Tt)),this.showDetails=!1}return n(t,[{key:"ngOnChanges",value:function(){this.updateModel(this.currentMail),this.markAsRead()}},{key:"markAsRead",value:function(){this.mail&&!this.mail.read&&(this.mail.markRead(),this.updateMail())}},{key:"toggleStar",value:function(t){t.stopPropagation(),this.mail.toggleStar(),this.updateMail()}},{key:"toggleImportant",value:function(t){t.stopPropagation(),this.mail.toggleImportant(),this.updateMail()}},{key:"updateModel",value:function(t){this.mail=t?new te(Object.assign({},t)):null}},{key:"updateMail",value:function(){this._store.dispatch(new B(this.mail)),this.updateModel(this.mail)}}]),t}();ne.ctorParameters=function(){return[{type:Pt},{type:j.h}]},ne.propDecorators={currentMail:[{type:c.I}]},ne=Object(o.a)([Object(c.n)({selector:"mail-ngrx-details",template:'<div *ngIf="!mail" fxLayout="column" fxLayoutAlign="center center" fxFlex>\n    <mat-icon class="s-128 mb-16 select-message-icon hint-text">\n        email\n    </mat-icon>\n    <span class="select-message-text hint-text">\n        <span>{{ \'MAIL.SELECT_A_MESSAGE_TO_READ\' | translate }}</span>\n    </span>\n</div>\n\n<div *ngIf="mail">\n\n    <div class="mail-header" fxLayout="row" fxLayoutAlign="space-between center">\n\n        <div>\n            <div class="subject">{{mail.subject}}</div>\n\n            <div class="labels mt-8" fxLayout="row wrap">\n                <div class="label" *ngFor="let labelId of mail.labels"\n                     fxLayout="row" fxLayoutAlign="start center">\n                    <div class="label-color" [ngStyle]="{\'background-color\': (labels$ | async) | getById:labelId:\'color\'}"></div>\n                    <div class="label-title">{{(labels$ | async) | getById:labelId:\'title\'}}</div>\n                </div>\n            </div>\n        </div>\n\n        <div class="actions" fxLayout="row" fxLayoutAlign="start center">\n            <button mat-icon-button (click)="toggleStar($event)" aria-label="Toggle star">\n                <mat-icon class="amber-fg" *ngIf="mail.starred">star</mat-icon>\n                <mat-icon class="secondary-text" *ngIf="!mail.starred">star_border</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)="toggleImportant($event)" aria-label="Toggle important">\n                <mat-icon class="red-fg" *ngIf="mail.important">label</mat-icon>\n                <mat-icon class="secondary-text" *ngIf="!mail.important">label_outline</mat-icon>\n            </button>\n        </div>\n    </div>\n\n    <div class="mail-content">\n\n        <div class="info" fxLayout="row" fxLayoutAlign="space-between start">\n\n            <div fxFlex fxLayout="column" fxLayoutAlign="start start">\n\n                <div fxLayout="row" fxLayoutAlign="start start">\n\n                    <div>\n                        <img *ngIf="mail.from.avatar" alt="{{mail.from.name}}"\n                             src="{{mail.from.avatar}}" class="avatar"/>\n\n                        <div *ngIf="!mail.from.avatar" class="avatar" ms-random-class="vm.colors">\n                            {{mail.from.name[0]}}\n                        </div>\n                    </div>\n\n                    <div fxLayout="column" fxLayoutAlign="start start">\n\n                        <div class="name">\n                            {{mail.from.name}}\n                        </div>\n\n                        <div class="to" fxLayout="row" fxLayoutAlign="start center">\n                            <div class="to-text">to</div>\n                            <div>{{mail.to[0].name}}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <a class="toggle-details" (click)="showDetails = !showDetails">\n                    <span *ngIf="!showDetails">Show Details</span>\n                    <span *ngIf="showDetails">Hide Details</span>\n                </a>\n\n                <div *ngIf="showDetails" class="details" fxLayout="row" fxLayoutAlign="start start">\n\n                    <div fxLayout="column">\n                        <span class="title">From:</span>\n                        <span class="title">To:</span>\n                        <span class="title">Date:</span>\n                    </div>\n\n                    <div fxLayout="column">\n                        <span class="detail">{{mail.from.email}}</span>\n                        <span class="detail">{{mail.to[0].email}}</span>\n                        <span class="detail">{{mail.time}}</span>\n                    </div>\n                </div>\n            </div>\n\n            <button mat-icon-button [matMenuTriggerFor]="moreMenu" aria-label="More" (click)="$event.stopPropagation()">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n\n            <mat-menu #moreMenu="matMenu">\n                <button mat-menu-item aria-label="Reply">\n                    <mat-icon>reply</mat-icon>\n                    <span>Reply</span>\n                </button>\n\n                <button mat-menu-item aria-label="Forward">\n                    <mat-icon>forward</mat-icon>\n                    <span>Forward</span>\n                </button>\n\n                <button mat-menu-item aria-label="Print">\n                    <mat-icon>print</mat-icon>\n                    <span>Print</span>\n                </button>\n            </mat-menu>\n        </div>\n\n        <div [innerHTML]="mail.message"></div>\n\n    </div>\n\n    <div *ngIf="mail.attachments" class="mail-attachments">\n\n        <div class="title">\n            <span>Attachments</span>\n            ({{mail.attachments.length}})\n        </div>\n\n        <div class="attachment-list" fxLayout="row wrap">\n\n            <div class="attachment" fxLayout="column"\n                 *ngFor="let attachment of mail.attachments">\n\n                <img class="preview" src="{{attachment.preview}}">\n\n                <div fxLayout="column">\n                    <a href="#" onclick="event.preventDefault()">View</a>\n                    <a href="#" onclick="event.preventDefault()">Download</a>\n                    <div class="size">({{attachment.size}})</div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n',changeDetection:c.j.OnPush,encapsulation:c.rb.None,styles:["/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\nmail-ngrx-details {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 24px;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}\nmail-ngrx-details .select-message-text {\n  font-size: 24px;\n  font-weight: 300;\n}\nmail-ngrx-details .mail-header {\n  padding-bottom: 16px;\n  border-bottom: 1px solid;\n}\nmail-ngrx-details .mail-header .actions {\n  min-width: 88px;\n}\nmail-ngrx-details .mail-header .subject {\n  font-size: 17px;\n  font-weight: 600;\n}\nmail-ngrx-details .mail-header .label {\n  font-size: 11px;\n  border-radius: 2px;\n  margin: 4px 4px 4px 0;\n  padding: 3px 8px;\n}\nmail-ngrx-details .mail-header .label .label-color {\n  width: 8px;\n  height: 8px;\n  margin-right: 8px;\n  border-radius: 50%;\n}\nmail-ngrx-details .mail-content {\n  padding: 24px 0;\n}\nmail-ngrx-details .mail-content .to .to-text {\n  margin-right: 4px;\n  text-transform: lowercase;\n}\nmail-ngrx-details .mail-content .info {\n  padding-bottom: 16px;\n}\nmail-ngrx-details .mail-content .info .avatar {\n  margin-right: 16px;\n}\nmail-ngrx-details .mail-content .info .name {\n  margin-right: 8px;\n  font-weight: 600;\n}\nmail-ngrx-details .mail-content .info .toggle-details {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  text-decoration: underline;\n  padding-top: 16px;\n  cursor: pointer;\n  font-weight: 600;\n}\nmail-ngrx-details .mail-content .info .details {\n  padding-top: 8px;\n}\nmail-ngrx-details .mail-content .info .details .title {\n  font-weight: 600;\n  margin-right: 6px;\n}\nmail-ngrx-details .mail-attachments {\n  padding: 24px 0;\n  border-top: 1px solid;\n}\nmail-ngrx-details .mail-attachments .title {\n  margin-bottom: 16px;\n  font-weight: 600;\n}\nmail-ngrx-details .mail-attachments .attachment .preview {\n  width: 100px;\n  margin: 0 16px 8px 0;\n  border-radius: 4px;\n}\nmail-ngrx-details .mail-attachments .attachment .link {\n  margin-bottom: 2px;\n}\nmail-ngrx-details .mail-attachments .attachment .size {\n  font-size: 11px;\n}"]})],ne);var ae=function(){function t(e,n,a){l(this,t),this.matDialogRef=e,this._data=n,this._formBuilder=a,this.composeForm=this.createComposeForm()}return n(t,[{key:"createComposeForm",value:function(){return this._formBuilder.group({from:{value:["johndoe@creapond.com"],disabled:[!0]},to:[""],cc:[""],bcc:[""],subject:[""],message:[""]})}}]),t}();ae.ctorParameters=function(){return[{type:b.d},{type:void 0,decorators:[{type:c.D,args:[b.a]}]},{type:Jt.c}]},ae=Object(o.a)([Object(c.n)({selector:"mail-ngrx-compose",template:'<div class="dialog-content-wrapper">\n    <mat-toolbar class="mat-accent m-0">\n        <mat-toolbar-row fxFlex fxLayout="row" fxLayoutAlign="space-between center">\n            <span class="title dialog-title">New Message</span>\n            <button mat-icon-button (click)="matDialogRef.close()" aria-label="Close dialog">\n                <mat-icon>close</mat-icon>\n            </button>\n        </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div mat-dialog-content class="p-24 m-0" fusePerfectScrollbar>\n\n        <form name="composeForm" [formGroup]="composeForm" class="compose-form" fxLayout="column" fxFlex>\n\n            <mat-form-field appearance="outline">\n                <mat-label>From</mat-label>\n                <input matInput name="from"\n                       formControlName="from"\n                       type="email">\n            </mat-form-field>\n\n            <mat-form-field appearance="outline">\n                <mat-label>To</mat-label>\n                <input matInput name="to"\n                       formControlName="to"\n                       type="email" required>\n            </mat-form-field>\n\n            <mat-form-field appearance="outline">\n                <mat-label>Cc</mat-label>\n                <input matInput\n                       name="cc"\n                       formControlName="cc"\n                       type="email">\n            </mat-form-field>\n\n            <mat-form-field appearance="outline">\n                <mat-label>Bcc</mat-label>\n                <input matInput\n                       name="bcc"\n                       formControlName="bcc"\n                       type="email">\n            </mat-form-field>\n\n            <mat-form-field appearance="outline">\n                <mat-label>Subject</mat-label>\n                <input matInput name="subject"\n                       formControlName="subject">\n            </mat-form-field>\n\n            <mat-form-field appearance="outline">\n                <mat-label>Message</mat-label>\n                <textarea matInput name="message"\n                          formControlName="message"\n                          rows="6">\n                </textarea>\n            </mat-form-field>\n\n            <div class="attachment-list">\n\n                <div class="attachment" fxLayout="row" fxLayoutAlign="space-between center">\n                    <div>\n                        <span class="filename">attachment-2.doc</span>\n                        <span class="size ml-4">(12 Kb)</span>\n                    </div>\n\n                    <button mat-icon-button aria-label="Delete attachment">\n                        <mat-icon class="s-16">close</mat-icon>\n                    </button>\n                </div>\n\n                <div class="attachment" fxLayout="row" fxLayoutAlign="space-between center">\n                    <div>\n                        <span class="filename">attachment-1.jpg</span>\n                        <span class="size ml-4">(350 Kb)</span>\n                    </div>\n\n                    <button mat-icon-button aria-label="Delete attachment">\n                        <mat-icon class="s-16">close</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <div mat-dialog-actions class="m-0 p-16" fxLayout="row" fxLayoutAlign="space-between center">\n        <div>\n            <button mat-raised-button\n                    color="accent"\n                    (click)="matDialogRef.close([\'send\',composeForm])"\n                    class="save-button"\n                    [disabled]="composeForm.invalid"\n                    aria-label="SAVE">\n                SEND\n            </button>\n\n            <button mat-icon-button matTooltip="Attach a file">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n        </div>\n\n        <button mat-icon-button (click)="matDialogRef.close([\'delete\',composeForm])" aria-label="Delete"\n                matTooltip="Delete">\n            <mat-icon>delete</mat-icon>\n        </button>\n    </div>\n</div>\n',encapsulation:c.rb.None,styles:[".mail-ngrx-compose-dialog .mat-dialog-container {\n  padding: 0;\n  width: 720px;\n}\n.mail-ngrx-compose-dialog .mat-dialog-container .compose-form .mat-form-field {\n  width: 100%;\n}\n.mail-ngrx-compose-dialog .mat-dialog-container .compose-form .attachment-list {\n  font-size: 13px;\n}\n.mail-ngrx-compose-dialog .mat-dialog-container .compose-form .attachment-list .attachment {\n  border: 1px solid;\n  border-radius: 20px;\n  padding-left: 16px;\n  margin-top: 8px;\n}\n.mail-ngrx-compose-dialog .mat-dialog-container .compose-form .attachment-list .attachment .filename {\n  font-weight: 600;\n}\n.mail-ngrx-compose-dialog .mat-dialog-container .compose-form .attachment-list .attachment:last-child {\n  margin-bottom: 0;\n}\n.mail-ngrx-compose-dialog .dialog-content-wrapper {\n  max-height: 85vh;\n  display: flex;\n  flex-direction: column;\n}"]})],ae);var ie=function(){function t(e,n,a){l(this,t),this._mailNgrxService=e,this._matDialog=n,this._store=a,this.accounts={creapond:"johndoe@creapond.com",withinpixels:"johndoe@withinpixels.com"},this.selectedAccount="creapond",this.folders$=this._store.pipe(Object(j.r)(St)),this.filters$=this._store.pipe(Object(j.r)(At)),this.labels$=this._store.pipe(Object(j.r)(Tt))}return n(t,[{key:"composeDialog",value:function(){this.dialogRef=this._matDialog.open(ae,{panelClass:"mail-ngrx-compose-dialog"}),this.dialogRef.afterClosed().subscribe(function(t){if(t){var e=t[0],n=t[1];switch(e){case"send":console.log("new Mail",n.getRawValue());break;case"delete":console.log("delete Mail")}}})}}]),t}();ie.ctorParameters=function(){return[{type:Pt},{type:b.b},{type:j.h}]},ie=Object(o.a)([Object(c.n)({selector:"mail-ngrx-main-sidebar",template:'\x3c!-- SIDEBAR HEADER --\x3e\n<div fxLayout="column" fxLayoutAlign="space-between start"\n     class="header accent p-24 pb-4">\n\n    <div class="logo" fxFlex fxLayout="row" fxLayoutAlign="start center">\n        <mat-icon class="logo-icon s-32">mail</mat-icon>\n        <span class="logo-text">MailboxNgrx</span>\n    </div>\n\n    <div class="account" fxLayout="column">\n        <div class="title">John Doe</div>\n        <mat-form-field floatLabel="never">\n            <mat-select class="account-selection" placeholder="Mail Selection"\n                        [ngModel]="selectedAccount">\n                <mat-option *ngFor="let account of (accounts | keys)" [value]="account.key">\n                    {{account.value}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n</div>\n\x3c!-- / SIDEBAR HEADER --\x3e\n\n\x3c!-- SIDEBAR CONTENT --\x3e\n<div class="content" fusePerfectScrollbar>\n\n    <div class="px-24 pt-32 pb-12">\n        <button mat-raised-button\n                class="mat-accent compose-dialog-button w-100-p"\n                (click)="composeDialog()"\n                aria-label="Compose">\n            {{ \'MAIL.COMPOSE\' | translate }}\n        </button>\n    </div>\n\n    <div class="nav material2">\n\n        <div class="nav-subheader">{{ \'MAIL.FOLDERS\' | translate }}</div>\n\n        <div class="nav-item" *ngFor="let folder of (folders$ | async)">\n            <a class="nav-link" matRipple [routerLink]="\'/apps/mail-ngrx/\' + folder.handle"\n               [routerLinkActive]="[\'active\', \'accent\']">\n                <mat-icon class="nav-link-icon" *ngIf="folder.icon">{{folder.icon}}</mat-icon>\n                <span>{{folder.title}}</span>\n            </a>\n        </div>\n\n        <div class="nav-subheader">{{ \'MAIL.FILTERS\' | translate }}</div>\n\n        <div class="nav-item" *ngFor="let filter of (filters$ | async)">\n            <a class="nav-link" matRipple [routerLink]="\'/apps/mail-ngrx/filter/\' + filter.handle"\n               [routerLinkActive]="[\'active\', \'accent\']">\n                <mat-icon class="nav-link-icon" [ngClass]="filter.color" *ngIf="filter.icon">{{filter.icon}}</mat-icon>\n                <span>{{filter.title}}</span>\n            </a>\n        </div>\n\n        <div class="nav-subheader">{{ \'MAIL.LABELS\' | translate }}</div>\n\n        <div class="nav-item" *ngFor="let label of (labels$ | async)">\n            <a class="nav-link" matRipple [routerLink]="\'/apps/mail-ngrx/label/\' + label.handle"\n               [routerLinkActive]="[\'active\', \'accent\']">\n                <mat-icon class="nav-link-icon" [ngStyle]="{\'color\':label.color}">label</mat-icon>\n                <span>{{label.title}}</span>\n            </a>\n        </div>\n\n    </div>\n\n</div>\n\x3c!-- / SIDEBAR CONTENT --\x3e\n',changeDetection:c.j.OnPush,encapsulation:c.rb.None,styles:["mail-ngrx-main-sidebar {\n  display: flex;\n  flex: 1 0 auto;\n  flex-direction: column;\n  height: 100%;\n}\nmail-ngrx-main-sidebar .header .logo .logo-icon {\n  margin: 0 16px 0 0;\n}\nmail-ngrx-main-sidebar .header .logo .logo-text {\n  font-size: 24px;\n  line-height: 24px;\n}\nmail-ngrx-main-sidebar .header .account {\n  width: 100%;\n}"]})],ie);var se=[{path:"label/:labelHandle",component:Zt,canActivate:[zt]},{path:"label/:labelHandle/:mailId",component:Zt,canActivate:[zt]},{path:"filter/:filterHandle",component:Zt,canActivate:[zt]},{path:"filter/:filterHandle/:mailId",component:Zt,canActivate:[zt]},{path:":folderHandle",component:Zt,canActivate:[zt]},{path:":folderHandle/:mailId",component:Zt,canActivate:[zt]},{path:"**",redirectTo:"inbox"}],re=function t(){l(this,t)};re=Object(o.a)([Object(c.N)({declarations:[Zt,Wt,ee,ne,ie,ae],imports:[d.h.forChild(se),m.b,u.a,b.c,f.d,h.b,g.b,x.a,p.p,v.a,y.a,O.a,S.a,L.h,Kt],providers:[Pt,zt],entryComponents:[ae]})],re)}}])}();